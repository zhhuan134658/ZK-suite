{"version":3,"file":"mobile.11fba69498022b3dcd7c.hot-update.js","sources":["webpack://@ali/suite-demo/./.debug/src/runtime/AntdUploadFiled/mobile.less?4596","webpack://@ali/suite-demo/./.debug/src/runtime/CorpHouseField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/CorpSupplierField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/CorpSupplieryiField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/PositionDesField/mobile.less?539c","webpack://@ali/suite-demo/./.debug/src/runtime/PositionDesField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelecTickeField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelecTickefaField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectAccField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectConField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectDepositField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectFenField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectHeField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectHeshouField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectLaoField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectLeaseField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectProField/mobile.less?08d0","webpack://@ali/suite-demo/./.debug/src/runtime/SelectProField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectProtwoField/mobile.less?e538","webpack://@ali/suite-demo/./.debug/src/runtime/SelectProtwoField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectRelatedField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectSpoField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectTbproField/mobile.less?f19f","webpack://@ali/suite-demo/./.debug/src/runtime/SelectZuField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/SelectjiaField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestApplicationField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestBiddingField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestBidshouField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestBidzhiField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestCinField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestCollectionField/mobile.less?a619","webpack://@ali/suite-demo/./.debug/src/runtime/TestCunField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestDemandField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestExpeField/mobile.less?e367","webpack://@ali/suite-demo/./.debug/src/runtime/TestExpeField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestInspecField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestLabourField/mobile.less?f8cf","webpack://@ali/suite-demo/./.debug/src/runtime/TestLabourField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestLeaseField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestLeconField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestMachineryField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestMainField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestMaterField/mobile.less?3a40","webpack://@ali/suite-demo/./.debug/src/runtime/TestMaterField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestMaterialField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestOliField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestOpeningField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestOrderField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestOrdernewField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestOutField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestPlanField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestPurField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestRegistField/mobile.less?e5ce","webpack://@ali/suite-demo/./.debug/src/runtime/TestRegistField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestReturnField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestScienceField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestSetField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestSheField/mobile.less?8e00","webpack://@ali/suite-demo/./.debug/src/runtime/TestSheField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/TestSubconField/mobile.less?90af","webpack://@ali/suite-demo/./.debug/src/runtime/TestSubconField/mobile.tsx","webpack://@ali/suite-demo/./.debug/src/runtime/pc.less?8f34"],"sourcesContent":["// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616436105\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import { Drawer, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { StorageMobileDialog } from '../../components/addDetail';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField, SimpleData } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(data) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'CorpHouse');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: SimpleData) {\n        const { form } = _this.props;\n        _this.setState(\n          {\n            inputvalue: item.name,\n            showElem: 'none',\n          },\n          () => {\n            form.setFieldValue('CorpHouse', item.name);\n            form.setFieldExtendValue('CorpHouse', item.name);\n          },\n        );\n      },\n      onSubmit(value: string) {\n        searchBarSubmit(_this, value, '');\n      },\n      onSearchBarChange(value: string) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  handleOk() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('CorpHouse');\n    const label = form.getFieldProp('CorpHouse', 'label');\n    const required = form.getFieldProp('CorpHouse', 'required');\n    const onFinish = (values: any) => {\n      this.setState({\n        msgdata: '1',\n      });\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate['cang_add'] = values;\n      this.asyncSetFieldProps(newdate);\n      newdate['cang_add'] = '';\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const parser = [\n      {\n        key: 'name',\n        label: '仓库名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'number',\n        label: '编号',\n        index: 2,\n      },\n      {\n        key: 'address',\n        label: '地址',\n        index: 3,\n      },\n      {\n        key: 'remarks',\n        label: '备注',\n        index: 4,\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <StorageMobileDialog\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        ></StorageMobileDialog>\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* <InputItem\n            clear\n            value={this.state.inputvalue}\n            placeholder=\"请选择\"\n            onClick={this.onOpenChange}\n          ></InputItem> */}\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n            {createPortal(\n              <Drawer className=\"isvzhukuaizkoatiaoshi\" \n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, List, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { SupplierMobileDialog } from '../../components/addDetail';\nimport { ISwapFormField, SimpleData } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('CorpSupplier').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      supplierTypes: [],\n    };\n  },\n  asyncSetFieldProps(data) {\n    const _this = this;\n    console.log('ASYNC SET PROPS');\n    const promise = asyncSetProps(_this, data, 'CorpSupplier');\n    promise.then(res => {\n      const dropDownData = [...res.extendArray.data];\n      dropDownData.splice(0, 1);\n      _this.setState({\n        listData: [...res.dataArray],\n        supplierTypes: dropDownData,\n      });\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: SimpleData) {\n        const { form } = _this.props;\n        _this.setState(\n          {\n            inputvalue: item.name,\n            showElem: 'none',\n          },\n          () => {\n            form.setFieldValue('CorpSupplier', item.name);\n            form.setFieldExtendValue('CorpSupplier', item.name);\n          },\n        );\n      },\n      onSubmit(value: string) {\n        searchBarSubmit(_this, value, '');\n      },\n      onSearchBarChange(value: string) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  handleOk() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('CorpSupplier');\n    const label = form.getFieldProp('CorpSupplier', 'label');\n    const required = form.getFieldProp('CorpSupplier', 'required');\n    const onFinish = (values: any) => {\n      this.setState({\n        msgdata: '1',\n      });\n      console.log('Success:', values);\n      const newdate = this.state.allData;\n      newdate.supplier_add = values;\n      this.asyncSetFieldProps(newdate);\n      newdate.supplier_add = '';\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <SupplierMobileDialog\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          supplierTypes={this.state.supplierTypes}\n        />\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpSupplier_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span style={{ color: 'red' }}>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, List, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { SupplierMobileDialog } from '../../components/addDetail';\nimport { ISwapFormField, SimpleData } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('CorpSupplieryi').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      supplierTypes: [],\n    };\n  },\n  asyncSetFieldProps(data) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'CorpSupplieryi');\n    promise.then(res => {\n      const dropDownData = [...res.extendArray.data];\n      dropDownData.splice(0, 1);\n      _this.setState({\n        listData: [...res.dataArray],\n        supplierTypes: dropDownData,\n      });\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: SimpleData) {\n        const { form } = _this.props;\n        _this.setState(\n          {\n            inputvalue: item.name,\n            showElem: 'none',\n          },\n          () => {\n            form.setFieldValue('CorpSupplieryi', item.name);\n            form.setFieldExtendValue('CorpSupplieryi', item.name);\n            try {\n              form.setFieldValue('paraNumber', item.extend_first);\n              form.setFieldExtendValue('paraNumber', item.extend_first);\n            } catch (e) {\n              console.log('没有extend_first字段');\n            }\n          },\n        );\n      },\n      onSubmit(value: string) {\n        searchBarSubmit(_this, value, '');\n      },\n      onSearchBarChange(value: string) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  handleOk() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('CorpSupplieryi');\n    const label = form.getFieldProp('CorpSupplieryi', 'label');\n    const required = form.getFieldProp('CorpSupplieryi', 'required');\n    const onFinish = (values: any) => {\n      this.setState({\n        msgdata: '1',\n      });\n      console.log('Success:', values);\n      const newdate = this.state.allData;\n      newdate.supplier_add = values;\n      this.asyncSetFieldProps(newdate);\n      newdate.supplier_add = '';\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <SupplierMobileDialog\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          supplierTypes={this.state.supplierTypes}\n        ></SupplierMobileDialog>\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpSupplier_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616436092\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import './mobile.less';\n\nimport { Picker } from 'antd-mobile';\nimport React from 'react';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport arrayTreeFilter from 'array-tree-filter';\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      pickerValuedata: '',\n      pickerValue: [],\n      visible: false,\n      value: null,\n      province: [],\n      modal2: false,\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(data) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'PositionDes');\n    promise.then(res => {\n      _this.setState({\n        province: [...res.dataArray],\n        current_page: res.currentPage,\n        total2: res.totalCount,\n      });\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      sublisk() {\n        const newdate = _this.state.allData;\n        _this.asyncSetFieldProps(newdate);\n        _this.setState({ visible: true });\n      },\n\n      onPickerChange(value) {\n        const { form } = _this.props;\n        _this.setState({ pickerValue: value });\n        const desData = { Optionsid: '', Optionsname: '' };\n        if (!value) {\n          this.setState({ pickerValuedata: '' }, () => {\n            form.setFieldValue('PositionDes', desData);\n            form.setFieldExtendValue('PositionDes', desData);\n          });\n        } else {\n          const treeChildren = arrayTreeFilter(\n            this.state.province,\n            (c: any, level) => c.value === value[level],\n          );\n          const newdata = treeChildren.map(v => v.label).join('/');\n          desData.Optionsid = value;\n          desData.Optionsname = newdata;\n          this.setState({ pickerValuedata: newdata }, () => {\n            form.setFieldValue('PositionDes', desData);\n            form.setFieldExtendValue('PositionDes', {\n              data: desData,\n            });\n          });\n        }\n      },\n    };\n  },\n  handleOk() {\n    this.setState({\n      visible: false,\n    });\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('PositionDes');\n    const label = form.getFieldProp('PositionDes', 'label');\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      const { Optionsname = '' } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\">\n              {/* {JSON.stringify(Optionsname)} */}\n              {Optionsname}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <Picker\n          visible={this.state.visible}\n          data={this.state.province}\n          value={this.state.pickerValue}\n          onChange={this.methods().onPickerChange}\n          onOk={this.handleOk}\n          onDismiss={() => this.setState({ visible: false })}\n        >\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                  <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                    <label className=\"m-field-label\">\n                      <span>{label}</span>\n                    </label>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <input\n                          readOnly\n                          className=\"ant-input m-mobile-inner-input\"\n                          type=\"text\"\n                          placeholder=\"请选择\"\n                          value={this.state.pickerValuedata}\n                          onClick={this.methods().sublisk}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Picker>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, List, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelecTicke').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        newData.name = '';\n        newData.type = 0;\n        newData.page = 1;\n        newData.rk_id = ['a'];\n        newData.project_name = '';\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '材料合同-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '劳务合同-' + item.name;\n        } else if (_this.state.detdate === 'c1') {\n          dtar = '分包合同-' + item.name;\n        } else if (_this.state.detdate === 'd1') {\n          dtar = '租赁合同-' + item.name;\n        }\n        _this.setState({ inputvalue: dtar, showElem: 'none' }, () => {\n          form.setFieldValue('SelecTicke', dtar);\n          form.setFieldExtendValue('SelecTicke', dtar);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelecTicke', 'ticket_register');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelecTicke');\n    const label = form.getFieldProp('SelecTicke', 'label');\n    const required = form.getFieldProp('SelecTicke', 'required');\n    const tabs = [\n      { title: '材料合同' },\n      { title: '劳务合同' },\n      { title: '分包合同' },\n      { title: '租赁合同' },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: this.state.detdate ? [...this.state.detdate[0]] : ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        ></Tabs>\n        <List>\n          {this.state.listData.map((item, index) => {\n            const text = item.xuan === 1 ? '#909399' : '#000000';\n            const style = {\n              color: text,\n            };\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                <span style={style}> {item.name}</span>\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, List, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelecTickefa').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        newData.name = '';\n        newData.type = 0;\n        newData.page = 1;\n        newData.rk_id = ['a'];\n        newData.project_name = '';\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '材料合同-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '劳务合同-' + item.name;\n        } else if (_this.state.detdate === 'c1') {\n          dtar = '分包合同-' + item.name;\n        } else if (_this.state.detdate === 'd1') {\n          dtar = '租赁合同-' + item.name;\n        } else if (_this.state.detdate === 'e1') {\n          dtar = '收入合同-' + item.name;\n        }\n        _this.setState({ inputvalue: dtar, showElem: 'none' }, () => {\n          form.setFieldValue('SelecTickefa', dtar);\n          form.setFieldExtendValue('SelecTickefa', dtar);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelecTickefa');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelecTickefa');\n    const label = form.getFieldProp('SelecTickefa', 'label');\n    const required = form.getFieldProp('SelecTickefa', 'required');\n    const tabs = [\n      { title: '材料合同' },\n      { title: '劳务合同' },\n      { title: '分包合同' },\n      { title: '租赁合同' },\n      { title: '收入合同' },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: this.state.detdate ? [...this.state.detdate[0]] : ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        >\n          <div>\n            <List>\n              {this.state.listData.map((item, index) => {\n                return (\n                  <List.Item\n                    onClick={this.methods().handleClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    {item.name}/{item.party_a}/{item.money}\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n          <div>\n            <List>\n              {this.state.listData.map((item, index) => {\n                return (\n                  <List.Item\n                    onClick={this.methods().handleClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    {item.name}/{item.extend_first}/{item.reply_money}\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n          <div>\n            <List>\n              {this.state.listData.map((item, index) => {\n                return (\n                  <List.Item\n                    onClick={this.methods().handleClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    {item.name}/{item.extend_first}/{item.reply_money}\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n          <div>\n            <List>\n              {this.state.listData.map((item, index) => {\n                return (\n                  <List.Item\n                    onClick={this.methods().handleClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    {item.name}/{item.extend_first}/{item.reply_money}\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n        </Tabs>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst listDataParser = [\n  {\n    key: 'accountname',\n    label: '账户名称',\n    index: 1,\n    title: true,\n  },\n  {\n    key: 'accountnumber',\n    label: '账号',\n    icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//HTsdJ6hd7R1637911799002.png',\n    index: 2,\n  },\n  {\n    key: 'bankofdeposit',\n    label: '开户行',\n    icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//RE5BCDRPcs1637911784044.png',\n    index: 3,\n  },\n];\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectAcc').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        console.log(item);\n        form.setFieldValue('Inputvalue', item.accountname);\n        form.setFieldExtendValue('Inputvalue', item.accountname);\n        form.setFieldValue('Inputvalue1', item.accountnumber);\n        form.setFieldValue('Inputvalue2', item.bankofdeposit);\n        form.setFieldExtendValue('Inputvalue1', item.accountnumber);\n        form.setFieldExtendValue('Inputvalue2', item.bankofdeposit);\n        _this.setState(\n          { inputvalue: item.accountname, showElem: 'none' },\n          () => {\n            form.setFieldValue('SelectAcc', item.accountname);\n            form.setFieldExtendValue('SelectAcc', item.accountname);\n          },\n        );\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelectAcc');\n    promise.then(res => {\n      const listData = [...res.dataArray];\n      const testData = [...listData];\n      console.log('LIST DATA', listData);\n      const parsedListData = parseListData(testData, listDataParser);\n      console.log('PARSED LIST DATA', parsedListData);\n      _this.setState({\n        listData: [...parsedListData],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const { form } = this.props;\n      form.setFieldValue('TestPur', editData);\n      form.setFieldExtendValue('TestPur', {\n        data: editData,\n      });\n    }\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectAcc');\n    const label = form.getFieldProp('SelectAcc', 'label');\n    const required = form.getFieldProp('SelectAcc', 'required');\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <FancyList\n          data={this.state.listData}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* <InputItem\n            clear\n            value={this.state.inputvalue}\n            placeholder=\"请选择\"\n            onClick={this.onOpenChange}\n          ></InputItem> */}\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, SearchBar, Toast } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectCon').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const { form } = _this.props;\n        const project = form.getFieldValue('Autopro');\n        if (!project) {\n          return Toast.info('请先选择项目', 1);\n        }\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        console.log(item);\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('SelectCon', item.name);\n          form.setFieldExtendValue('SelectCon', item.name);\n          form.setFieldValue('Conmoney', item.money);\n          form.setFieldExtendValue('Conmoney', item.money);\n          form.setFieldValue('Selectjia', item.party_a);\n          form.setFieldExtendValue('Selectjia', item.party_a);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectCon',\n      'lease_completion_settlement',\n    );\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const { form } = this.props;\n      form.setFieldValue('TestPur', editData);\n      form.setFieldExtendValue('TestPur', {\n        data: editData,\n      });\n    }\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectCon');\n    const label = form.getFieldProp('SelectCon', 'label');\n    const required = form.getFieldProp('SelectCon', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'party_a',\n        label: '甲方',\n        index: 2,\n      },\n      {\n        key: 'money',\n        label: '合同金额',\n        index: 3,\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, List, SearchBar, Toast } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectDeposit').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const { form } = this.props;\n        const value = form.getFieldValue('RadioField');\n        if (value) {\n          if (value === '投标保证金支出' || value === '投标保证金退回') {\n            const newdate = this.state.allData;\n            newdate.isProject = '2';\n            this.asyncSetFieldProps(newdate);\n          } else {\n            const newdate = this.state.allData;\n            newdate.isProject = '1';\n            this.asyncSetFieldProps(newdate);\n          }\n          this.setState({\n            isModalVisible: true,\n          });\n        } else {\n          Toast.info('请先选择合同类型', 1);\n        }\n        this.setState({ showElem: 'inherit' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ Inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('SelectDeposit', item.name);\n          form.setFieldExtendValue('SelectDeposit', item.name);\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelectDeposit');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectDeposit');\n    const label = form.getFieldProp('SelectDeposit', 'label');\n    const required = form.getFieldProp('SelectDeposit', 'required');\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.accountname}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectFen').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const { form } = _this.props;\n        const value = form.getFieldValue('Autopro');\n\n        const newvalue = _this.state.allData;\n        newvalue.name = '';\n        newvalue.type = 0;\n        newvalue.page = 1;\n        newvalue.project_name = value;\n        _this.setState({\n          allData: newvalue,\n        });\n        _this.asyncSetFieldProps(newvalue);\n\n        _this.setState({ showElem: 'inherit' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ Inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('SelectFen', item.name);\n          form.setFieldExtendValue('SelectFen', item.name);\n          form.setFieldValue('Selectjia', item.sub_unit);\n          form.setFieldExtendValue('Selectjia', item.sub_unit);\n          form.setFieldValue('Fenmoney', item.contract_money);\n          form.setFieldExtendValue('Fenmoney', item.contract_money);\n        });\n      },\n      onExtraClick() {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: '' });\n        form.setFieldValue('Fenmoney', '');\n        form.setFieldExtendValue('Fenmoney', '');\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectFen',\n      'sub_progresspay_declaration',\n    );\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectFen');\n    const label = form.getFieldProp('SelectFen', 'label');\n    const required = form.getFieldProp('SelectFen', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'sub_unit',\n        label: '分包单位',\n        index: 2,\n      },\n      {\n        key: 'contract_money',\n        label: '合同金额',\n        index: 3,\n      },\n    ];\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, List, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst listDataParser = [];\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectHe').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        console.log(item);\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('SelectHe', item.name);\n          form.setFieldExtendValue('SelectHe', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const projectName = _this.props.form.getFieldValue('SelectHe');\n    const bondType = _this.props.form.getFieldValue('RadioField');\n    data.project_name = projectName;\n    data.bond_type = bondType;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectHe',\n      'bond_payment_register',\n    );\n    promise.then(res => {\n      const listData = [...res.dataArray];\n\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectHe');\n    const label = form.getFieldProp('SelectHe', 'label');\n    const required = form.getFieldProp('SelectHe', 'required');\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            const text = item.xuan === 1 ? '#909399' : '#000000';\n            const style = {\n              color: text,\n            };\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                <span style={style}> {item.accountname}</span>\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: form.getFieldInstance('SelectHeshou').getValue() || '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        newData.name = '';\n        newData.type = 0;\n        newData.page = 1;\n        newData.rk_id = ['a'];\n        newData.project_name = '';\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '收入合同-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '进度款结算-' + item.name;\n        } else if (_this.state.detdate === 'c1') {\n          dtar = '完工结算-' + item.name;\n        } else if (_this.state.detdate === 'd1') {\n          dtar = '质保金结算-' + item.name;\n        }\n        _this.setState({ inputvalue: dtar, showElem: 'none' }, () => {\n          form.setFieldValue('SelectHeshou', dtar);\n          form.setFieldExtendValue('SelectHeshou', dtar);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelectHeshou');\n    promise.then(res => {\n      const listData = [...res.dataArray];\n      console.log('LIST DATA', listData);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectHeshou');\n    const label = form.getFieldProp('SelectHeshou', 'label');\n    const required = form.getFieldProp('SelectHeshou', 'required');\n    const tabs = [\n      { title: '收入合同' },\n      { title: '收入进度款结算' },\n      { title: '收入完工结算' },\n      { title: '收入质保金结算' },\n    ];\n    const parser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'party_a',\n        label: '甲方',\n        index: 2,\n      },\n      {\n        key: 'money',\n        label: '金额',\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n        index: 3,\n      },\n    ];\n    const secondaryParser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'reply_money',\n        label: '金额',\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n        index: 3,\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: this.state.detdate ? [...this.state.detdate[0]] : ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parser)}\n              itemClick={this.methods().handleClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, secondaryParser)}\n              itemClick={this.methods().handleClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, secondaryParser)}\n              itemClick={this.methods().handleClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, secondaryParser)}\n              itemClick={this.methods().handleClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: '' });\n        form.setFieldValue('ConLaomoney', '');\n        form.setFieldExtendValue('ConLaomoney', '');\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('Selectjia', item.team);\n          form.setFieldExtendValue('Selectjia', item.team);\n          form.setFieldValue('ConLaomoney', item.contract_money);\n          form.setFieldExtendValue('ConLaomoney', item.contract_money);\n          form.setFieldValue('SelectLao', item.name);\n          form.setFieldExtendValue('SelectLao', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectLao',\n      'service_progresspay_declaration',\n    );\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectLao');\n    const label = form.getFieldProp('SelectLao', 'label');\n    const required = form.getFieldProp('SelectLao', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'team',\n        label: '劳务单位/班组',\n        index: 2,\n      },\n      {\n        key: 'contract_money',\n        label: '合同金额',\n        index: 3,\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst listDataParser = [\n  {\n    key: 'name',\n    label: '计划名称',\n    index: 1,\n    title: true,\n  },\n  {\n    key: 'created',\n    label: '创建时间',\n    index: 2,\n  },\n];\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('Conmoney', item.money);\n          form.setFieldExtendValue('Conmoney', item.money);\n          form.setFieldValue('SelectLease', item.name);\n          form.setFieldExtendValue('SelectLease', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelectLease');\n    promise.then(res => {\n      const listData = [...res.dataArray];\n      const parsedListData = parseListData(listData, listDataParser);\n      console.log('LIST DATA', parsedListData);\n      _this.setState({\n        listData: [...parsedListData],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectLease');\n    const label = form.getFieldProp('SelectLease', 'label');\n    const required = form.getFieldProp('SelectLease', 'required');\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          itemClick={this.methods().handleClick}\n          data={this.state.listData}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437214\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport { Drawer, List, SearchBar } from 'antd-mobile';\nimport './mobile.less';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    const SelectProField = form.getFieldInstance('SelectPro');\n    const key = SelectProField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'SelectPro',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['SelectPro'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: [...newarr],\n        });\n      });\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newdate = this.state.allData;\n\n    this.asyncSetFieldProps(newdate);\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item: { name: any }) {\n    const { form } = this.props;\n    console.log(item);\n\n    this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n      form.setFieldValue('SelectPro', item.name);\n      form.setFieldExtendValue('SelectPro', item.name);\n    });\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectPro');\n    const label = form.getFieldProp('SelectPro', 'label');\n    const required = form.getFieldProp('SelectPro', 'required');\n\n    const sidebar = (\n      <div style={{ width: '100vw' }}>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.habdlClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <input\n                        readOnly\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* <div className=\"label\" onClick={this.onOpenChange}>\n          {required ? (\n            <span style={{ color: '#ea6d5c' }}>*</span>\n          ) : (\n            <span style={{ color: '#fff' }}>*</span>\n          )}\n          {label}\n        </div>\n\n        <div>\n          <InputItem\n            clear\n            value={this.state.inputvalue}\n            placeholder=\"请选择\"\n            onClick={this.onOpenChange}\n          ></InputItem> */}\n          {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n\n      //   </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437218\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport ReactDOM, { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport {\n  InputItem,\n  Drawer,\n  List,\n  NavBar,\n  Icon,\n  SearchBar,\n  Button,\n  WhiteSpace,\n  WingBlank,\n} from 'antd-mobile';\nimport './mobile.less';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    const SelectProField = form.getFieldInstance('SelectPro');\n    const key = SelectProField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'SelectPro',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['SelectPro'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: [...newarr],\n        });\n      });\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newdate = this.state.allData;\n\n    this.asyncSetFieldProps(newdate);\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item: { name: any }) {\n    const { form } = this.props;\n    console.log(item);\n\n    this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n      form.setFieldValue('SelectPro', item.name);\n      form.setFieldExtendValue('SelectPro', item.name);\n    });\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form, runtimeProps } = this.props;\n    const { viewMode } = runtimeProps;\n    const field = form.getFieldInstance('SelectPro');\n    const label = form.getFieldProp('SelectPro', 'label');\n    const required = form.getFieldProp('SelectPro', 'required');\n    const placeholder = form.getFieldProp('SelectPro', 'placeholder');\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.habdlClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"label\" onClick={this.onOpenChange}>\n            {required ? (\n              <span style={{ color: '#ea6d5c' }}>*</span>\n            ) : (\n              <span style={{ color: '#fff' }}>*</span>\n            )}\n            {label}\n          </div>\n          <div>\n            <InputItem\n              clear\n              value={this.state.inputvalue}\n              placeholder=\"请选择\"\n              onClick={this.onOpenChange}\n            ></InputItem>\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(record: any) {\n        const { form } = _this.props;\n        if (record.extend_two) {\n          _this.setState({ Inputvalue: record.extend_two });\n          form.setFieldValue('SelectRelated', record.title);\n          form.setFieldExtendValue('SelectRelated', record.title);\n        } else if (record.extend_five) {\n          _this.setState({ Inputvalue: record.extend_five });\n          form.setFieldValue('SelectRelated', record.title);\n          form.setFieldExtendValue('SelectRelated', record.title);\n        } else if (record.extend_five) {\n          _this.setState({ Inputvalue: record.extend_five });\n          form.setFieldValue('SelectRelated', record.title);\n          form.setFieldExtendValue('SelectRelated', record.title);\n        }\n        _this.setState({ showElem: 'none' }, () => {\n          form.setFieldValue('Conmoney', record.money);\n          form.setFieldExtendValue('Conmoney', record.money);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const { form } = _this.props;\n    data['bond_type'] = form.getFieldValue('RadioField');\n    data['contract_name'] = form.getFieldValue('SelectHe');\n    const projectName = form.getFieldValue('SelectDeposit');\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectRelated',\n      '',\n      projectName,\n    );\n    promise.then(res => {\n      const listData = [...res.dataArray];\n      _this.setState({\n        listData: [...listData],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectRelated');\n    const label = form.getFieldProp('SelectRelated', 'label');\n    const required = form.getFieldProp('SelectRelated', 'required');\n\n    const setUpParser = () => {\n      const type = form.getFieldValue('RadioField');\n      let parser: Array<any> = [];\n      switch (type) {\n        case '投标保证金支出':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 't1',\n              label: '收取单位',\n              index: 2,\n            },\n            {\n              key: 'bond_money',\n              label: '保证金金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '履约保证金支出':\n          parser = [\n            {\n              key: 'extend_two',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 'party_a',\n              label: '甲方单位',\n              index: 2,\n            },\n            {\n              key: 'bond_money',\n              label: '保证金金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '劳务分包保证金退回':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 't1',\n              label: '劳务分包单位',\n              index: 2,\n            },\n            {\n              key: 'return_money',\n              label: '退回金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '专业分包保证金退回':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 't1',\n              label: '分包单位',\n              index: 2,\n            },\n            {\n              key: 'return_money',\n              label: '退回金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '投标保证金退回':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 'bond_money',\n              label: '保证金金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '履约保证金退回':\n          parser = [\n            {\n              key: 'extend_two',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 'party_a',\n              label: '甲方单位',\n              index: 2,\n            },\n            {\n              key: 'return_money',\n              label: '退回金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '劳务分包保证金收入':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 'unit',\n              label: '劳务分包单位',\n              index: 2,\n            },\n            {\n              key: 'bond_money',\n              label: '保证金金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        case '专业分包保证金收入':\n          parser = [\n            {\n              key: 'extend_five',\n              label: '主题',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 't1',\n              label: '分包单位',\n              index: 2,\n            },\n            {\n              key: 'bond_money',\n              label: '保证金金额',\n              index: 3,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n        default:\n          parser = [\n            {\n              key: 'name',\n              label: '申请名称',\n              index: 1,\n              title: true,\n            },\n            {\n              key: 'bond_money',\n              label: '申请金额',\n              index: 2,\n              icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n            },\n          ];\n          break;\n      }\n      return parser;\n    };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, setUpParser())}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        newData['rk_id'] = ['a'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('Jiesmoney', item.detailed_money);\n          form.setFieldExtendValue('Jiesmoney', item.detailed_money);\n          form.setFieldValue('SelectSpo', item.name);\n          form.setFieldExtendValue('SelectSpo', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'SelectSpo',\n      'sporadic_service_payment',\n    );\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('SelectSpo');\n    const label = form.getFieldProp('SelectSpo', 'label');\n    const required = form.getFieldProp('SelectSpo', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '结算名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 't3',\n        label: '责任人',\n        index: 2,\n      },\n      {\n        key: 'reply_money',\n        label: '结算金额',\n        index: 3,\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616436084\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        newData['rk_id'] = ['a'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: '' });\n        form.setFieldValue('Zumoney', '');\n        form.setFieldExtendValue('Zumoney', '');\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('Zumoney', item.contract_money);\n          form.setFieldExtendValue('Zumoney', item.contract_money);\n          form.setFieldValue('Selectjia', item.supplier);\n          form.setFieldExtendValue('Selectjia', item.supplier);\n          form.setFieldValue('SelectZu', item.name);\n          form.setFieldExtendValue('SelectZu', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'SelectZu', 'lease_settlement');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const label = form.getFieldProp('SelectZu', 'label');\n    const required = form.getFieldProp('SelectZu', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '合同名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'supplier',\n        label: '租赁单位',\n        index: 2,\n      },\n      {\n        key: 'contract_money',\n        label: '合同金额',\n        index: 3,\n      },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { SupplierMobileDialog } from '../../components/addDetail';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      supplierTypes: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('Selectjia', item.name);\n          form.setFieldExtendValue('Selectjia', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'Selectjia');\n    promise.then(res => {\n      const dropDownData = [...res.extendArray.data];\n      dropDownData.splice(0, 1);\n\n      _this.setState({\n        listData: [...res.dataArray],\n        supplierTypes: dropDownData,\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('Selectjia');\n    const label = form.getFieldProp('Selectjia', 'label');\n    const required = form.getFieldProp('Selectjia', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '单位名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'number',\n        label: '单位编号',\n        index: 2,\n      },\n      {\n        key: 'charge_person',\n        label: '分管人',\n        index: 3,\n      },\n      {\n        key: 'supplier_type_name',\n        label: '单位类型',\n        index: 4,\n      },\n      {\n        key: 'unit_nature',\n        label: '单位性质',\n        index: 5,\n      },\n    ];\n    const onFinish = (values: any) => {\n      this.setState({\n        msgdata: '1',\n      });\n      console.log('Success:', values);\n      const newdate = this.state.allData;\n      newdate.supplier_add = values;\n      this.asyncSetFieldProps(newdate);\n      newdate.supplier_add = '';\n    };\n    form.onFieldExtendValueChange('Selectjia', (value: any) => {\n      this.setState({\n        Inputvalue: value,\n      });\n    });\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <SupplierMobileDialog\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          supplierTypes={this.state.supplierTypes}\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { fpAdd, toFixed } from '../../utils/fpOperations';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nimport { parsePrintString } from '../../utils/printStringParser';\nimport { applicationColumns } from '../../printColumns/TestApplicationField';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '总计划量',\n          dataIndex: 'quantity_zong',\n        },\n        {\n          title: '累计申请量',\n          dataIndex: 'quantity_sq',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'need_quantity',\n          editable: true,\n        },\n        {\n          title: '参考价格',\n          dataIndex: 'refer_price',\n          editable: true,\n        },\n\n        {\n          title: '小计',\n          dataIndex: 'subtotal',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      popUpVisible: false,\n      popUpCascaderVisible: false,\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          need_quantity: '',\n          quantity_sq: '',\n          quantity_zong: '',\n          refer_price: '',\n          subtotal: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              need_quantity: '',\n              quantity_sq: '',\n              quantity_zong: '',\n              refer_price: '',\n              subtotal: '',\n              remarks: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n\n        dtar = item.name;\n\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          need_quantity: '',\n          quantity_sq: '',\n          quantity_zong: '',\n          refer_price: '',\n          subtotal: '',\n          remarks: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                type: '',\n                name: '',\n                size: '',\n                unit: '',\n                unit_price: 0,\n                id: '',\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types, index, e) {\n        console.log(types, index, e, this);\n        const arr = this.state.materialList;\n        console.log('120', this.state.materialList);\n\n        const arrindex = e ? e : '';\n        const newindex = index;\n        const newtype = types;\n\n        arr[newindex][newtype] = arrindex;\n\n        arr[newindex].subtotal =\n          arr[newindex].need_quantity && arr[newindex].refer_price\n            ? toFixed(\n                arr[newindex].need_quantity * arr[newindex].refer_price,\n                2,\n              )\n            : '';\n\n        //   含税金额\n        let newarr2 = [];\n\n        newarr2 = [\n          ...arr.filter(item => {\n            if (item.subtotal) {\n              return item;\n            }\n          }),\n        ];\n        newarr2 = [\n          ...newarr2.map(item => {\n            return item.subtotal;\n          }),\n        ];\n        const totalMoney = newarr2.reduce(fpAdd, 0);\n        this.setState({\n          materialList: [...arr],\n          Inputmoney1:\n            totalMoney.toFixed(2) <= 0.005 ? '' : totalMoney.toFixed(2),\n        });\n        console.log('12', arr);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascaderVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'TestApplication',\n      'material_requirement_plan',\n    );\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      console.log(\n        'uihsiuahfiausfaihiu',\n        this.state.Inputmoney1,\n        this.state.Inputmoney2,\n      );\n\n      const editData = {\n        hanmoney: null,\n        nomoney: null,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.detailname;\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.detailname;\n      const str1 = ' 合计(元):' + this.state.Inputmoney1;\n      const str =\n        str2 + parsePrintString(newlistdata, applicationColumns, str1);\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestApplication', str);\n      form.setFieldExtendValue('TestApplication', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestApplication');\n    const label = form.getFieldProp('TestApplication', 'label');\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      projectParser: [\n        {\n          key: 'name',\n          label: '名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'project_name',\n          label: '项目名称',\n          index: 2,\n        },\n      ],\n    };\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n\n        <div>\n          <FancyList\n            data={parseListData(this.state.checkData, parsers.projectParser)}\n            itemClick={this.methods().checkClick}\n          />\n        </div>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>总计划量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            value={item.quantity_zong}\n                                            placeholder=\"自动获取\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>累计申请量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            value={item.quantity_sq}\n                                            placeholder=\"自动获取\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>需用数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.need_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'need_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>参考价格</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.refer_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'refer_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>小计</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.subtotal}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>备注</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.remarks}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'remarks',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, DatePicker } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport { DetailList } from '../../components/listDetail';\n// import { Button } from 'antd-mobile';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { parsePrintString } from '../../utils/printStringParser';\nimport { biddingColumns } from '../../printColumns/TestBiddingField';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '估算数量',\n          dataIndex: 'number',\n        },\n        {\n          title: '物资采购部门',\n          dataIndex: 'purchase_unit',\n        },\n        {\n          title: '采购日期',\n          dataIndex: 'purchase_riqi',\n        },\n        {\n          title: '采购地点',\n          dataIndex: 'purchase_address',\n        },\n        {\n          title: '候选供应商名单',\n          dataIndex: 'candidate_list',\n        },\n      ],\n\n      checkData: [],\n\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          number: '',\n          purchase_unit: '',\n          purchase_riqi: '',\n          purchase_address: '',\n          candidate_list: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n\n  methods() {\n    const _this = this;\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              number: '',\n              purchase_unit: '',\n              purchase_riqi: '',\n              purchase_address: '',\n              candidate_list: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          number: '',\n          purchase_unit: '',\n          purchase_riqi: '',\n          purchase_address: '',\n          candidate_list: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                number: '',\n                purchase_unit: '',\n                purchase_riqi: '',\n                purchase_address: '',\n                candidate_list: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      onChangedata(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].purchase_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestBidding');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str = parsePrintString(newlistdata, biddingColumns);\n      const { form } = this.props;\n      form.setFieldValue('TestBidding', str);\n      form.setFieldExtendValue('TestBidding', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestBidding');\n    const label = form.getFieldProp('TestBidding', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>估算数量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.number}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'number',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资采购部门</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.purchase_unit}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'purchase_unit',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <DatePicker\n                            mode=\"date\"\n                            title=\"Select Date\"\n                            extra=\"Optional\"\n                            value={this.state.datadate}\n                            onChange={date =>\n                              this.methods().onChangedata(date, index)\n                            }\n                          >\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>采购日期</span>\n                                      </div>\n                                    </div>\n\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.purchase_riqi}\n                                            placeholder=\"请选择\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </DatePicker>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>采购地点</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.purchase_address}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'purchase_address',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>候选供应商名单</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.candidate_list}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'candidate_list',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('TestBidshou', item.name);\n          form.setFieldExtendValue('TestBidshou', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestBidshou');\n    promise.then(res => {\n      const dropDownData = [...res.extendArray.data];\n      dropDownData.splice(0, 1);\n\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestBidshou');\n    const label = form.getFieldProp('TestBidshou', 'label');\n    const required = form.getFieldProp('TestBidshou', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '主题',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'send_name',\n        label: '申请人',\n        index: 2,\n      },\n      {\n        key: 'shou_money',\n        label: '收入金额',\n        index: 3,\n      },\n    ];\n    form.onFieldExtendValueChange('TestBidshou', (value: any) => {\n      this.setState({\n        Inputvalue: value,\n      });\n    });\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { FancyList } from '../../components/fancyLists';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { parseListData } from '../../utils/normalizeUtils';\nimport { searchBarChange } from '../../utils/searchUtils';\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      onOpenChange() {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n        });\n      },\n      onExtraClick() {\n        _this.setState({ inputvalue: '' });\n      },\n      handleClick(item: any) {\n        const { form } = _this.props;\n        _this.setState({ inputvalue: item.name, showElem: 'none' }, () => {\n          form.setFieldValue('TestBidzhi', item.name);\n          form.setFieldExtendValue('TestBidzhi', item.name);\n        });\n      },\n      onSubmit(value: any) {\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        searchBarChange(_this, value, '');\n      },\n    };\n  },\n  asyncSetFieldProps(data: any) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestBidzhi');\n    promise.then(res => {\n      const dropDownData = [...res.extendArray.data];\n      dropDownData.splice(0, 1);\n\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n    });\n  },\n  fieldDidUpdate() {\n    return null;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestBidzhi');\n    const label = form.getFieldProp('TestBidzhi', 'label');\n    const required = form.getFieldProp('TestBidzhi', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '主题',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'send_name',\n        label: '申请人',\n        index: 2,\n      },\n      {\n        key: 'zhi_total',\n        label: '支出金额',\n        index: 3,\n      },\n    ];\n    form.onFieldExtendValueChange('TestBidzhi', (value: any) => {\n      this.setState({\n        Inputvalue: value,\n      });\n    });\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入名称\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={this.handleCancel}\n          showCancelButton\n        />\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.methods().handleClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.methods().onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.methods().onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.methods().onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      detdate: 'c1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['c'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const { form } = _this.props;\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '采购合同-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '采购订单-' + item.name;\n        } else if (_this.state.detdate === 'c1') {\n          dtar = '材料总计划-' + item.name;\n        } else if (_this.state.detdate === 'd1') {\n          dtar = '采购申请-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n        form.setFieldValue('Selectjia', item['supplier']);\n        form.setFieldExtendValue('Selectjia', item['supplier']);\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          unit: '',\n          size: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                det_quantity: '',\n                no_unit_price: '',\n                tax_rate: '',\n                tax_amount: '',\n                amount_tax: '',\n                no_amount_tax: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'TestCin',\n      'material_warehousing',\n    );\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].det_quantity +\n          ' ' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestCin', str);\n      form.setFieldExtendValue('TestCin', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestCin');\n    const label = form.getFieldProp('TestCin', 'label');\n    const tabs = [\n      { title: '材料总计划' },\n      { title: '采购申请' },\n      { title: '采购合同' },\n      { title: '采购订单' },\n    ];\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      materialPlan: [\n        {\n          key: 'name',\n          label: '计划主题',\n          index: 1,\n          title: true,\n        },\n      ],\n      purchaseAppliance: [\n        {\n          key: 'name',\n          label: '采购主题',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'detailed_money',\n          label: '采购金额',\n          index: 2,\n          icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n          title: true,\n        },\n      ],\n      purchaseContract: [\n        {\n          key: 'name',\n          label: '合同名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'contract_money',\n          label: '合同金额',\n          icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n          index: 3,\n        },\n      ],\n      purchaseOrder: [\n        {\n          key: 'name',\n          label: '采购名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'tax_total_money',\n          label: '订单金额',\n          icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n          index: 3,\n        },\n      ],\n    };\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['c'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage, 2);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, parsers.materialPlan)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n\n          <div>\n            <FancyList\n              data={parseListData(\n                this.state.checkData,\n                parsers.purchaseAppliance,\n              )}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(\n                this.state.checkData,\n                parsers.purchaseContract,\n              )}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, parsers.purchaseOrder)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616436098\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n\n        {\n          title: '出库数量',\n          dataIndex: 'wz_number',\n          editable: true,\n        },\n        {\n          title: '库存数量',\n          dataIndex: 'ku_cun',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      Inputmoney2: '',\n      checkData: [],\n      chenkdataout: '',\n      chenkdatain: '',\n      corphouse: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          ku_cun: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n    return {\n      ResetClick() {\n        _this.setState({\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              wz_number: '',\n              ku_cun: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData(corphouse) {\n        _this.setState({\n          dstatus: '1',\n          corphouse,\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n          isHouse: '1',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = {\n          rk_id: ['-1'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n          arr[arrindex].ku_cun = item.ku_cun;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const dtar = item.name;\n        if (_this.state.corphouse === 'out') {\n          _this.setState({\n            chenkdataout: dtar,\n            showElem3: 'none',\n          });\n        } else if (_this.state.corphouse === 'in') {\n          _this.setState({\n            chenkdatain: dtar,\n            showElem3: 'none',\n          });\n        }\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n          type: 0,\n          ck_name: this.state.chenkdataout,\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n            type: 0,\n            ck_name: this.state.chenkdataout,\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      onSubmitck(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n          isHouse: '1',\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data, 2);\n      },\n      onSearchBarChangeck(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n            isHouse: '1',\n            rk_id: ['-1'],\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData, 2);\n        }\n      },\n      onSubmitme(value: any) {\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.setState({\n          showTypes: false,\n        });\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChangeme(value: any) {\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n\n            rk_id: ['-1'],\n          };\n          _this.setState({\n            showTypes: true,\n          });\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          ku_cun: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                wz_number: '',\n                ku_cun: '',\n                unit_price: 0,\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOut');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      res.dataArray.forEach((e, i) => {\n        if (e['wz_number']) {\n          e['det_quantity'] = e['wz_number'];\n          res.dataArray[i] = e;\n        }\n      });\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        warehouse: '',\n        warehousein: '',\n        detailedData: [], //物资明细\n      };\n      editData.warehouse = this.state.chenkdataout;\n      editData.warehousein = this.state.chenkdatain;\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 =\n        '调出仓库：' +\n        this.state.chenkdataout +\n        '\\n' +\n        '调入仓库' +\n        this.state.chenkdatain;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 调拨数量 库存数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].wz_number +\n          ' ' +\n          newlistdata[i].ku_cun +\n          ' ' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestCun', str);\n      form.setFieldExtendValue('TestCun', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOut');\n    const label = form.getFieldProp('TestOut', 'label');\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      warehouseParser: [\n        {\n          key: 'name',\n          label: '仓库名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'number',\n          label: '编号',\n          index: 2,\n        },\n      ],\n    };\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitme}\n          onChange={this.methods().onSearchBarChangeme}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitck}\n          onChange={this.methods().onSearchBarChangeck}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n\n        <FancyList\n          data={parseListData(this.state.checkData, parsers.warehouseParser)}\n          itemClick={this.methods().checkClick}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { warehouse = '', warehousein = '', detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-field-view\">\n              <label className=\"m-field-view-label\">调出仓库</label>\n              <div className=\"m-field-view-value\">\n                <span>{warehouse}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-field-view\">\n              <label className=\"m-field-view-label\">调入仓库</label>\n              <div className=\"m-field-view-value\">\n                <span>{warehousein}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>调出仓库</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdataout}\n                          onClick={this.methods().getCheckData.bind(\n                            this,\n                            'out',\n                          )}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>调入仓库</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdatain}\n                          onClick={this.methods().getCheckData.bind(this, 'in')}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>库存数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.ku_cun}\n                                            placeholder=\"自动获取\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>出库数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.wz_number}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'wz_number',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用量',\n          dataIndex: 'need_number',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n\n      checkData: [],\n\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          need_number: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              need_number: '',\n              remarks: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          need_number: '',\n          remarks: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                need_number: '',\n                remarks: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      onChangedata(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].purchase_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestDemand');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '设备名称 单位 规格型号 需用量 备注';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].need_number +\n          ' ' +\n          newlistdata[i].remarks;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestDemand', str);\n      form.setFieldExtendValue('TestDemand', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestDemand');\n    const label = form.getFieldProp('TestDemand', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>需用量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.need_number}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'need_number',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>备注</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.remarks}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'remarks',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437973\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { InputItem, Drawer, List, Switch, SearchBar } from 'antd-mobile';\nimport { Tree } from 'antd';\nimport './mobile.less';\nimport { fpAdd } from '../../utils/fpOperations';\nimport _ from 'lodash';\nimport { ISwapFormField } from '../../types/runtime';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      Inputmoney1: '',\n      checked: false,\n      treevalue: undefined,\n      deColumns: [\n        {\n          title: '费用科目',\n          dataIndex: 'ke_name',\n        },\n        {\n          title: '金额',\n          dataIndex: 'money',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n      treeData: [],\n      maxnum: '',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      inputvalue: '',\n      Numbervalue1: '',\n      Numbervalue2: '',\n      Numbervalue3: '',\n      Numbervalue4: '',\n      Numbervalue5: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      petty_sele: '否',\n      materialList: [\n        {\n          ke_name: '',\n          money: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  asyncSetFieldProps(vlauedata, type) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    vlauedata.petty_sele = this.state.petty_sele;\n    // vlauedata.petty_yu = this.state.Numbervalue1;\n    // vlauedata.project_name = this.state.Numbervalue2;\n    const TestExpeField = form.getFieldInstance('TestExpe');\n    const key = TestExpeField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'TestExpe',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['TestExpe'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        console.log(JSON.parse(res.dataList[0].value));\n        //   表格数据\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        if (type === '12') {\n          const menuId = [];\n          let len = newarr.length;\n          for (let i = 0; i < len; i++) {\n            const item = newarr[i];\n            if (item.children && item.children.length !== 0) {\n              const children = item.children;\n              for (let j = 0; j < children.length; j++) {\n                newarr[len + j] = children[j];\n              }\n              len = newarr.length;\n            }\n            menuId.push(item);\n          }\n          const add = menuId.filter(item => {\n            if (!item.children) {\n              return item;\n            }\n          });\n          this.setState({\n            listData: add,\n          });\n          console.log('2222222', add);\n        } else if (type === '11') {\n          this.setState({\n            Numbervalue1: Number(newarr.sy),\n            Numbervalue3: Number(newarr.fybx_dk_spz),\n            Numbervalue4: Number(newarr.re_money_spz),\n            maxnum:\n              Number(newarr.sy) -\n              Number(newarr.fybx_dk_spz) -\n              Number(newarr.re_money_spz),\n          });\n        }\n\n        //   树状图数据\n        // const newtarr = JSON.parse(res.dataList[0].extendValue);\n        // const newtarr1 = [\n        //   {\n        //     title: '物资类型',\n        //     key: '0',\n        //     children: newtarr,\n        //   },\n        // ];\n        // this.setState({\n        //   treeData: [...newtarr1],\n        // });\n      });\n  },\n  onOpenChange(index: any, ...args: any[]) {\n    console.log('sss');\n    console.log(args);\n    const newdate = this.state.allData;\n    newdate.rk_id = ['a'];\n    this.asyncSetFieldProps(newdate, '12');\n    this.setState({ showElem: 'inherit', checkindex: index });\n  },\n  onOpenChange2(index: any, ...args: any[]) {\n    console.log('sss');\n    console.log(args);\n    const newdate = this.state.allData;\n\n    this.asyncSetFieldProps(newdate);\n    this.setState({ showElem2: 'inherit', checkindex: index });\n  },\n  habdlClick(item: { value: any }) {\n    const { form } = this.props;\n    console.log(item);\n    const arr = this.state.materialList;\n    const arrindex = this.state.checkindex;\n\n    arr[arrindex].ke_name = item.value;\n\n    this.setState(\n      { inputvalue: item.value, showElem: 'none', materialList: arr },\n      () => {\n        form.setFieldValue('TestExpe', item.value);\n        form.setFieldExtendValue('TestExpe', item.value);\n      },\n    );\n  },\n  onChangeDeduction(e: React.ChangeEvent<HTMLInputElement>) {\n    console.log('CHANGE DEDUCTION');\n    const _this = this;\n    const calcDeduction = (_this, e: React.ChangeEvent<HTMLInputElement>) => {\n      console.log('CALC DEDUCTION');\n      const number1 = _this.state.maxnum;\n      const number2 = _this.state.Inputmoney1;\n      const val = Number(e.target.value);\n      if (val <= 0.01) {\n        _this.setState({\n          Numbervalue2: '',\n        });\n        return 0;\n      }\n      if (number1 > number2) {\n        if (val > _this.state.Inputmoney1) {\n          const aa = _this.state.Inputmoney1;\n          const bb = Number(aa) - Number(_this.state.maxnum);\n          _this.setState({\n            Numbervalue5: bb.toFixed(2),\n          });\n        } else {\n          const aa = _this.state.Inputmoney1;\n          const bb = aa - val;\n          _this.setState({\n            Numbervalue5: bb.toFixed(2),\n          });\n        }\n      } else {\n        if (val > _this.state.maxnum) {\n          const aa = _this.state.Inputmoney1;\n          const bb = aa - _this.state.maxnum;\n          _this.setState({\n            Numbervalue2: _this.state.maxnum.toFixed(2),\n            Numbervalue5: bb.toFixed(2),\n          });\n        } else {\n          const aa = _this.state.Inputmoney1;\n          const bb = aa - val;\n          _this.setState({\n            Numbervalue5: bb.toFixed(2),\n          });\n        }\n      }\n    };\n    console.log(e.target.value);\n    calcDeduction(_this, e);\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  //增加明细\n  addSon() {\n    const sonData = {\n      ke_name: '',\n      money: '',\n      remarks: '',\n    };\n    this.setState({\n      materialList: [...this.state.materialList, sonData],\n    });\n  },\n  //删除明细\n  deleteItem(index) {\n    const list = this.state.materialList;\n    list.splice(index, 1);\n    this.setState({\n      materialList: list,\n    });\n  },\n  //更新数据\n  onInputchange(types, index, e) {\n    console.log(types, index, e, this);\n    const arr = this.state.materialList;\n    console.log(this.state.materialList);\n    // let arrindex = e.target.value;\n    const arrindex = e ? e : '';\n    const newindex = index;\n    const newtype = types;\n    // arr[newindex] = {};\n    arr[newindex][newtype] = arrindex;\n    let newarr2 = [];\n    newarr2 = [\n      ...arr.filter(item => {\n        if (item.money) {\n          return item;\n        }\n      }),\n    ];\n    newarr2 = [\n      ...newarr2.map(item => {\n        return item.money;\n      }),\n    ];\n    const totalMoney = newarr2.reduce(fpAdd, 0);\n    this.setState({\n      materialList: [...arr],\n      Inputmoney1: totalMoney.toFixed(2) <= 0.005 ? '' : totalMoney.toFixed(2),\n    });\n    console.log(arr);\n  },\n  onDatechange() {\n    // let arr = this.state.materialList;\n    // let purchase_riqi = 'purchase_riqi';\n    // arr[index][purchase_riqi] = dateString;\n    // this.setState({ materialList: [...arr] });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailedData: [], //物资明细\n        petty_sele: '', //备用金抵扣\n        Numbervalue1: '', //备用金余额\n        Numbervalue2: '', //本次抵扣金额\n        Numbervalue3: '', //审批中的费用报销抵扣\n        Numbervalue4: '', //审批中的归还\n        Numbervalue5: '', //财务应支付金额\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(\n          this.state.Inputmoney1 ? this.state.Inputmoney1 : 0,\n        );\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(\n          this.state.Inputmoney2 ? this.state.Inputmoney2 : 0,\n        );\n      }\n\n      editData.detailedData = this.state.materialList;\n      editData.petty_sele = this.state.petty_sele;\n      if (editData.petty_sele === '是') {\n        editData.Numbervalue1 = this.state.Numbervalue1\n          ? this.state.Numbervalue1\n          : 0;\n        editData.Numbervalue2 = this.state.Numbervalue2\n          ? this.state.Numbervalue2\n          : 0;\n\n        editData.Numbervalue3 = this.state.Numbervalue3\n          ? this.state.Numbervalue3\n          : 0;\n        editData.Numbervalue4 = this.state.Numbervalue4\n          ? this.state.Numbervalue4\n          : 0;\n        editData.Numbervalue5 = this.state.Numbervalue5\n          ? this.state.Numbervalue5\n          : 0;\n      }\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '费用科目 金额 备注';\n      const str1 =\n        '\\n' +\n        '报销合计:' +\n        this.state.Inputmoney1 +\n        '\\n' +\n        '备用金余额:' +\n        this.state.Numbervalue1 +\n        '\\n' +\n        '审批中的费用报销抵扣:' +\n        this.state.Numbervalue3 +\n        '\\n' +\n        '审批中的归还:' +\n        this.state.Numbervalue4 +\n        '\\n' +\n        '本次抵扣金额:' +\n        this.state.Numbervalue4 +\n        '\\n' +\n        '财务应支付金额:' +\n        this.state.Numbervalue5;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].ke_name +\n          ' ' +\n          newlistdata[i].money +\n          ' ' +\n          newlistdata[i].remarks;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestExpe', str);\n      form.setFieldExtendValue('TestExpe', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestExpe');\n    const label = form.getFieldProp('TestExpe', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].ke_name = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          showCancelButton\n          onCancel={() => this.setState({ showElem: 'none' })}\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.habdlClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.value}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={() => this.setState({ showElem2: 'none' })}\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const {\n        detailedData = [],\n        petty_sele = '',\n        Numbervalue1 = '',\n        Numbervalue2 = '',\n        Numbervalue3 = '',\n        Numbervalue4 = '',\n        hanmoney = '',\n      } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">报销合计</label>\n            <div className=\"m-field-view-value\"> {hanmoney}</div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">备用金抵扣</label>\n            <div className=\"m-field-view-value\"> {petty_sele}</div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">备用金余额</label>\n            <div className=\"m-field-view-value\"> {Numbervalue1}</div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">本次抵扣金额</label>\n            <div className=\"m-field-view-value\"> {Numbervalue2}</div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">审批中的费用报销抵扣</label>\n            <div className=\"m-field-view-value\"> {Numbervalue3}</div>\n          </div>\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">审批中的归还</label>\n            <div className=\"m-field-view-value\"> {Numbervalue4}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={index}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.deleteItem.bind(this, index)}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>费用科目</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.ke_name}\n                                            placeholder=\"请选择\"\n                                            onClick={this.onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.onInputchange(\n                                                'ke_name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>金额</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.money}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.onInputchange(\n                                                'money',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>备注</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.remarks}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.onInputchange(\n                                                'remarks',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div className=\"tbody-add-button tTap\" onClick={this.addSon}>\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加1明细</span>\n                </div>\n              </div>\n              <div className=\"field-wrapper\">\n                <div className=\"m-group m-group-mobile\">\n                  <div className=\"m-field-wrapper\">\n                    <div className=\"m-field m-field-mobile m-select-field\">\n                      <div className=\"m-field-head\">\n                        <div className=\"m-field-label\">\n                          <span>报销合计</span>\n                        </div>\n                      </div>\n                      <div className=\"m-field-box\">\n                        <div className=\"m-field-content left\">\n                          <div className=\"input-wrapper\">\n                            <InputItem\n                              type=\"text\"\n                              className=\"ant-input m-mobile-inner-input\"\n                              value={this.state.Inputmoney1}\n                              placeholder=\"自动获取\"\n                              readOnly\n                              editable={false}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <div className=\"field-wrapper\">\n                  <div className=\"m-group m-group-mobile\">\n                    <div className=\"m-field-wrapper\">\n                      <div className=\"m-field m-field-mobile m-select-field\">\n                        <div className=\"m-field-head\">\n                          <div className=\"m-field-label\">\n                            <span>备用金抵扣</span>\n                          </div>\n                        </div>\n                        <div className=\"m-field-box\">\n                          <div className=\"m-field-content left\">\n                            <div className=\"input-wrapper\">\n                              <Switch\n                                checked={this.state.checked}\n                                onChange={checked => {\n                                  console.log(checked);\n                                  if (checked === false) {\n                                    this.setState({\n                                      petty_sele: '否',\n                                    });\n                                  } else {\n                                    this.setState({\n                                      petty_sele: '是',\n                                    });\n                                    const newdate = this.state.allData;\n                                    newdate.rk_id = ['是'];\n                                    this.asyncSetFieldProps(newdate, '11');\n                                  }\n\n                                  this.setState({\n                                    checked: !this.state.checked,\n                                  });\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                {this.state.checked ? (\n                  <div>\n                    <div className=\"field-wrapper\">\n                      <div className=\"m-group m-group-mobile\">\n                        <div className=\"m-field-wrapper\">\n                          <div className=\"m-field m-field-mobile m-select-field\">\n                            <div className=\"m-field-head\">\n                              <div className=\"m-field-label\">\n                                <span>备用金余额</span>\n                              </div>\n                            </div>\n                            <div className=\"m-field-box\">\n                              <div className=\"m-field-content left\">\n                                <div className=\"input-wrapper\">\n                                  <InputItem\n                                    type=\"text\"\n                                    className=\"ant-input m-mobile-inner-input\"\n                                    value={this.state.Numbervalue1}\n                                    placeholder=\"自动获取\"\n                                    readOnly\n                                    editable={false}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"field-wrapper\">\n                      <div className=\"m-group m-group-mobile\">\n                        <div className=\"m-field-wrapper\">\n                          <div className=\"m-field m-field-mobile m-select-field\">\n                            <div className=\"m-field-head\">\n                              <div className=\"m-field-label\">\n                                <span>审批中的费用报销抵扣</span>\n                              </div>\n                            </div>\n                            <div className=\"m-field-box\">\n                              <div className=\"m-field-content left\">\n                                <div className=\"input-wrapper\">\n                                  <InputItem\n                                    type=\"text\"\n                                    className=\"ant-input m-mobile-inner-input\"\n                                    value={this.state.Numbervalue3}\n                                    placeholder=\"自动获取\"\n                                    readOnly\n                                    editable={false}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"field-wrapper\">\n                      <div className=\"m-group m-group-mobile\">\n                        <div className=\"m-field-wrapper\">\n                          <div className=\"m-field m-field-mobile m-select-field\">\n                            <div className=\"m-field-head\">\n                              <div className=\"m-field-label\">\n                                <span>审批中的归还</span>\n                              </div>\n                            </div>\n                            <div className=\"m-field-box\">\n                              <div className=\"m-field-content left\">\n                                <div className=\"input-wrapper\">\n                                  <InputItem\n                                    type=\"text\"\n                                    className=\"ant-input m-mobile-inner-input\"\n                                    value={this.state.Numbervalue4}\n                                    placeholder=\"自动获取\"\n                                    readOnly\n                                    editable={false}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"field-wrapper\">\n                      <div className=\"m-group m-group-mobile\">\n                        <div className=\"m-field-wrapper\">\n                          <div className=\"m-field m-field-mobile m-select-field\">\n                            <div className=\"m-field-head\">\n                              <div className=\"m-field-label\">\n                                <span>本次抵扣金额</span>\n                              </div>\n                            </div>\n                            <div className=\"m-field-box\">\n                              <div className=\"m-field-content left\">\n                                <div className=\"input-wrapper\">\n                                  <input\n                                    type=\"number\"\n                                    max={this.state.maxnum}\n                                    className=\"ant-input m-mobile-inner-input\"\n                                    value={this.state.Numbervalue2}\n                                    placeholder=\"请输入\"\n                                    onChange={e => {\n                                      this.setState({\n                                        Numbervalue2: e.target.value,\n                                      });\n                                      e.persist();\n                                      const debouncedCalc = _.debounce(\n                                        this.onChangeDeduction,\n                                        1000,\n                                      );\n                                      debouncedCalc(e);\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"field-wrapper\">\n                      <div className=\"m-group m-group-mobile\">\n                        <div className=\"m-field-wrapper\">\n                          <div className=\"m-field m-field-mobile m-select-field\">\n                            <div className=\"m-field-head\">\n                              <div className=\"m-field-label\">\n                                <span>财务应支付金额</span>\n                              </div>\n                            </div>\n                            <div className=\"m-field-box\">\n                              <div className=\"m-field-content left\">\n                                <div className=\"input-wrapper\">\n                                  <input\n                                    readOnly\n                                    type=\"number\"\n                                    className=\"ant-input m-mobile-inner-input\"\n                                    value={this.state.Numbervalue5}\n                                    placeholder=\"请输入\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          {/* 合计 */}\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '设备名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '设备检查',\n          dataIndex: 'check_situation',\n        },\n        {\n          title: '整改措施',\n          dataIndex: 'rectify',\n        },\n      ],\n\n      checkData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          check_situation: '',\n          rectify: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              check_situation: '',\n              rectify: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          check_situation: '',\n          rectify: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                check_situation: '',\n                rectify: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      onChangedata(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].purchase_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestInspec');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '设备名称 单位 规格型号 设备检查 整改措施';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].check_situation +\n          ' ' +\n          newlistdata[i].rectify;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestInspec', str);\n      form.setFieldExtendValue('TestInspec', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestInspec');\n    const label = form.getFieldProp('TestInspec', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>设备检查</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.check_situation}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'check_situation',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>整改措施</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.rectify}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'rectify',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437201\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport { InputItem, Drawer, Tabs, SearchBar } from 'antd-mobile';\nimport './mobile.less';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { FancyList } from '../../components/fancyLists';\nimport { parseListData } from '../../utils/normalizeUtils';\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata: any) {\n    const _this = this;\n\n    const promise = asyncSetProps(\n      _this,\n      vlauedata,\n      'TestLabour',\n      'service_payment_application',\n    );\n    promise.then(res => {\n      console.log(res);\n      //   表格数据\n      let newarr;\n      //   表格数据\n      try {\n        newarr = res['dataArray'];\n      } catch (e) {}\n\n      this.setState({\n        listData: newarr,\n      });\n    });\n  },\n  onExtraClick() {\n    this.setState({ inputvalue: '' });\n\n    console.log('测试点击');\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newvalue = this.state.allData;\n    newvalue.name = '';\n    newvalue.type = 0;\n    newvalue.page = 1;\n    newvalue.rk_id = ['a'];\n    newvalue.project_name = '';\n    // this.setState({\n    //   allData: newvalue,\n    // });\n    this.asyncSetFieldProps(newvalue);\n\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item) {\n    const { form } = this.props;\n\n    let dtar = '';\n    if (this.state.detdate === 'a1') {\n      dtar = '劳务进度款结算-' + item.name;\n    } else if (this.state.detdate === 'b1') {\n      dtar = '劳务完工结算-' + item.name;\n    } else if (this.state.detdate === 'c1') {\n      dtar = '劳务质保金结算-' + item.name;\n    } else if (this.state.detdate === 'd1') {\n      dtar = '零星劳务结算-' + item.name;\n    } else if (this.state.detdate === 'e1') {\n      dtar = '劳务合同-' + item.name;\n    }\n    console.log(dtar);\n    form.setFieldValue('LabourField', item.contract_name);\n    this.setState({ inputvalue: dtar, showElem: 'none' });\n    form.setFieldValue('TestLabour', dtar);\n    form.setFieldExtendValue('TestLabour', dtar);\n    form.setFieldValue('Selectjia', item.team);\n    form.setFieldExtendValue('LabourField', item.contract_name);\n    form.setFieldExtendValue('Selectjia', item.team);\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestLabour');\n    const label = form.getFieldProp('TestLabour', 'label');\n    const required = form.getFieldProp('TestLabour', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '结算名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'extend_first',\n        label: '劳务单位/班组',\n        index: 2,\n      },\n      {\n        key: 'reply_money',\n        label: '结算金额',\n        index: 3,\n      },\n    ];\n\n    const tabs = [\n      { title: '劳务进度款' },\n      { title: '劳务完工' },\n      { title: '劳务质保金' },\n      { title: '零星劳务' },\n      { title: '劳务合同' },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        ></Tabs>\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.habdlClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, DatePicker } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      datadate1: '',\n      datadate2: '',\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n        {\n          title: '结算周期（始）',\n          dataIndex: 'plan_in_riqi',\n        },\n        {\n          title: '结算周期（终）',\n          dataIndex: 'plan_out_riqi',\n        },\n        {\n          title: '数量',\n          dataIndex: 'zl_number',\n        },\n      ],\n\n      checkData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          zl_number: '',\n          plan_out_riqi: '',\n          plan_in_riqi: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              zl_number: '',\n              plan_out_riqi: '',\n              plan_in_riqi: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          zl_number: '',\n          plan_out_riqi: '',\n          plan_in_riqi: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                zl_number: '',\n                plan_out_riqi: '',\n                plan_in_riqi: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      onChangedata1(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_in_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      onChangedata2(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_out_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestLease');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 =\n        '\\n' + '设备名称 单位 规格型号 结算周期（始） 结算周期（终） 数量';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].plan_in_riqi +\n          ' ' +\n          newlistdata[i].plan_out_riqi +\n          ' ' +\n          newlistdata[i].zl_number;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestLease', str);\n      form.setFieldExtendValue('TestLease', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestLease');\n    const label = form.getFieldProp('TestLease', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>数量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.zl_number}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'zl_number',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <DatePicker\n                            mode=\"date\"\n                            title=\"Select Date\"\n                            extra=\"Optional\"\n                            value={this.state.datadate1}\n                            onChange={date =>\n                              this.methods().onChangedata1(date, index)\n                            }\n                          >\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>结算周期（始）</span>\n                                      </div>\n                                    </div>\n\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.plan_in_riqi}\n                                            placeholder=\"请选择\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </DatePicker>\n                        </div>\n                        <div>\n                          <DatePicker\n                            mode=\"date\"\n                            title=\"Select Date\"\n                            extra=\"Optional\"\n                            value={this.state.datadate2}\n                            onChange={date =>\n                              this.methods().onChangedata2(date, index)\n                            }\n                          >\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>结算周期（终）</span>\n                                      </div>\n                                    </div>\n\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.plan_out_riqi}\n                                            placeholder=\"请选择\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </DatePicker>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, DatePicker, Toast } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nimport { fpAdd } from '../../utils/fpOperations';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      datenum: 0,\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '结算周期（始）',\n          dataIndex: 'plan_in_riqi',\n        },\n        {\n          title: '结算周期（终）',\n          dataIndex: 'plan_out_riqi',\n        },\n        {\n          title: '数量',\n          dataIndex: 'zl_number',\n        },\n        {\n          title: '单价(元)',\n          dataIndex: 'price',\n        },\n\n        {\n          title: '小计(元)',\n          dataIndex: 'subtotal',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          zl_number: '',\n          purchase_unit: '',\n          purchase_riqi: '',\n          purchase_address: '',\n          candidate_list: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              zl_number: '',\n              purchase_unit: '',\n              purchase_riqi: '',\n              purchase_address: '',\n              candidate_list: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          zl_number: '',\n          purchase_unit: '',\n          purchase_riqi: '',\n          purchase_address: '',\n          candidate_list: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            Inputmoney1: 0,\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                det_quantity: '',\n                no_unit_price: '',\n                tax_rate: '',\n                tax_amount: '',\n                amount_tax: '',\n                no_amount_tax: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('list', list);\n        if (list.length > 0) {\n          let newarr2 = [];\n          newarr2 = list.filter(item => {\n            if (item.subtotal) {\n              return item;\n            }\n          });\n          newarr2 = newarr2.map(item => {\n            return item.subtotal;\n          });\n          _this.setState({\n            Inputmoney1: newarr2.reduce(fpAdd, 0).toFixed(2),\n          });\n        } else {\n          _this.setState({\n            Inputmoney1: 0,\n          });\n        }\n      },\n      onInputchange(types: any, index: number, e: any) {\n        const datenum = _this.state.datenum;\n        console.log(types, index, e, _this);\n        const arr = _this.state.materialList;\n        console.log('120', _this.state.materialList);\n        const arrindex = e;\n        const newindex = index;\n        const newtype = types;\n        if (types === 'zl_number' || types === 'price') {\n          arr[newindex][newtype] = Number(arrindex);\n        } else {\n          arr[newindex][newtype] = arrindex;\n        }\n\n        if (arr[newindex].zl_number && arr[newindex].price) {\n          arr[newindex].subtotal = (\n            arr[newindex].zl_number *\n            arr[newindex].price *\n            Number(datenum)\n          ).toFixed(2);\n        } else {\n          arr[newindex].subtotal = 0;\n        }\n        //   合计\n        let newarr2 = [];\n\n        newarr2 = arr.filter(item => {\n          if (item.subtotal) {\n            return item;\n          }\n        });\n        newarr2 = newarr2.map(item => {\n          return item.subtotal;\n        });\n        let total = newarr2.reduce(fpAdd, 0);\n        if (total) {\n          total = total.toFixed(2);\n        }\n        _this.setState({\n          materialList: [...arr],\n          Inputmoney1: total,\n        });\n        console.log('12', arr);\n      },\n      //   计算日期的时间差（含当天）\n      getDaysBetween(dateString1, dateString2) {\n        const startDate = Date.parse(dateString1);\n        const endDate = Date.parse(dateString2);\n        if (startDate > endDate) {\n          return 0;\n        }\n        if (startDate === endDate) {\n          return 1;\n        }\n        const days = (endDate - startDate) / (1 * 24 * 60 * 60 * 1000);\n        return days + 1;\n      },\n      onChangedata1(data, index) {\n        const newdata = new Date(data);\n        const newindex = index;\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_in_riqi = datetime;\n        // _this.setState({ materialList: [...arr] });\n        if (arr[index].plan_in_riqi && arr[index].plan_out_riqi) {\n          const timenum = _this\n            .methods()\n            .getDaysBetween(arr[index].plan_in_riqi, arr[index].plan_out_riqi);\n          if (timenum === 0) {\n            Toast.info('请先选择正确的日期', 1);\n            _this.setState({ datenum: timenum });\n          } else {\n            _this.setState({ datenum: timenum, materialList: [...arr] }, () => {\n              if (arr[newindex].zl_number && arr[newindex].price) {\n                arr[newindex].subtotal = (\n                  arr[newindex].zl_number *\n                  arr[newindex].price *\n                  Number(timenum)\n                ).toFixed(2);\n              } else {\n                arr[newindex].subtotal = 0;\n              }\n            });\n          }\n        }\n        console.log(datetime, index);\n      },\n      onChangedata2(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_out_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestLecon');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 结算周期（始） 结算周期（终） 数量 单价 小计';\n      const str1 = '\\n' + '合计：' + this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].plan_in_riqi +\n          ' ' +\n          newlistdata[i].plan_out_riqi +\n          ' ' +\n          newlistdata[i].zl_number +\n          ' ' +\n          newlistdata[i].price +\n          ' ' +\n          newlistdata[i].subtotal;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestLecon', str);\n      form.setFieldExtendValue('TestLecon', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestLecon');\n    const label = form.getFieldProp('TestLecon', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <DatePicker\n                              mode=\"date\"\n                              title=\"Select Date\"\n                              extra=\"Optional\"\n                              value={this.state.datadate1}\n                              onChange={date =>\n                                this.methods().onChangedata1(date, index)\n                              }\n                            >\n                              <div className=\"field-wrapper\">\n                                <div className=\"m-group m-group-mobile\">\n                                  <div className=\"m-field-wrapper\">\n                                    <div className=\"m-field m-field-mobile m-select-field\">\n                                      <div className=\"m-field-head\">\n                                        <div className=\"m-field-label\">\n                                          <span>结算周期（始）</span>\n                                        </div>\n                                      </div>\n\n                                      <div className=\"m-field-box\">\n                                        <div className=\"m-field-content left\">\n                                          <div className=\"input-wrapper\">\n                                            <InputItem\n                                              editable={false}\n                                              clear\n                                              value={item.plan_in_riqi}\n                                              placeholder=\"请选择\"\n                                            ></InputItem>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </DatePicker>\n                          </div>\n                          <div>\n                            <DatePicker\n                              mode=\"date\"\n                              title=\"Select Date\"\n                              extra=\"Optional\"\n                              value={this.state.datadate2}\n                              onChange={date =>\n                                this.methods().onChangedata2(date, index)\n                              }\n                            >\n                              <div className=\"field-wrapper\">\n                                <div className=\"m-group m-group-mobile\">\n                                  <div className=\"m-field-wrapper\">\n                                    <div className=\"m-field m-field-mobile m-select-field\">\n                                      <div className=\"m-field-head\">\n                                        <div className=\"m-field-label\">\n                                          <span>结算周期（终）</span>\n                                        </div>\n                                      </div>\n\n                                      <div className=\"m-field-box\">\n                                        <div className=\"m-field-content left\">\n                                          <div className=\"input-wrapper\">\n                                            <InputItem\n                                              editable={false}\n                                              clear\n                                              value={item.plan_out_riqi}\n                                              placeholder=\"请选择\"\n                                            ></InputItem>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </DatePicker>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.zl_number}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'zl_number',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>小计</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.subtotal}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>备注</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.remarks}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'remarks',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, DatePicker } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nimport { fpAdd } from '../../utils/fpOperations';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '机械名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n\n        {\n          title: '工作日期',\n          dataIndex: 'riqi',\n        },\n        {\n          title: '施工内容',\n          dataIndex: 'content',\n        },\n        {\n          title: '工时',\n          dataIndex: 'work_hours',\n        },\n        {\n          title: '单价(元)',\n          dataIndex: 'price',\n        },\n        {\n          title: '小计(元)',\n          dataIndex: 'subtotal',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          riqi: '',\n          content: '',\n          work_hours: '',\n          price: '',\n          subtotal: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              riqi: '',\n              content: '',\n              work_hours: '',\n              price: '',\n              subtotal: '',\n              remarks: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          riqi: '',\n          content: '',\n          work_hours: '',\n          price: '',\n          subtotal: '',\n          remarks: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            Inputmoney1: 0,\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                det_quantity: '',\n                no_unit_price: '',\n                tax_rate: '',\n                tax_amount: '',\n                amount_tax: '',\n                no_amount_tax: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('list', list);\n        if (list.length > 0) {\n          let newarr2 = [];\n          newarr2 = list.filter(item => {\n            if (item.subtotal) {\n              return item;\n            }\n          });\n          newarr2 = newarr2.map(item => {\n            return item.subtotal;\n          });\n          _this.setState({\n            Inputmoney1: newarr2.reduce(fpAdd, 0).toFixed(2),\n          });\n        } else {\n          _this.setState({\n            Inputmoney1: 0,\n          });\n        }\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log(types, index, e, _this);\n        const arr = _this.state.materialList;\n        console.log('120', _this.state.materialList);\n        const arrindex = e;\n        const newindex = index;\n        const newtype = types;\n        arr[newindex][newtype] = arrindex;\n        if (arr[newindex].price && arr[newindex].work_hours) {\n          arr[newindex].subtotal = (\n            arr[newindex].price * arr[newindex].work_hours\n          ).toFixed(2);\n        }\n        //   合计\n        let newarr2 = [];\n\n        newarr2 = arr.filter(item => {\n          if (item.subtotal) {\n            return item;\n          }\n        });\n        newarr2 = newarr2.map(item => {\n          return item.subtotal;\n        });\n        let total = newarr2.reduce(fpAdd, 0);\n        if (total) {\n          total = total.toFixed(2);\n        }\n        _this.setState({\n          materialList: [...arr],\n          Inputmoney1: total,\n        });\n        console.log('12', arr);\n      },\n      onChangedata1(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestMachinery');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 =\n        '\\n' + '设备名称 单位 规格型号 工作日期 施工内容 工时 单价 小计';\n      const str1 = '\\n' + '合计：' + this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].riqi +\n          ' ' +\n          newlistdata[i].content +\n          ' ' +\n          newlistdata[i].work_hours +\n          ' ' +\n          newlistdata[i].price +\n          ' ' +\n          newlistdata[i].subtotal;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestMachinery', str);\n      form.setFieldExtendValue('TestMachinery', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestMachinery');\n    const label = form.getFieldProp('TestMachinery', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <DatePicker\n                              mode=\"date\"\n                              title=\"Select Date\"\n                              extra=\"Optional\"\n                              value={this.state.datadate1}\n                              onChange={date =>\n                                this.methods().onChangedata1(date, index)\n                              }\n                            >\n                              <div className=\"field-wrapper\">\n                                <div className=\"m-group m-group-mobile\">\n                                  <div className=\"m-field-wrapper\">\n                                    <div className=\"m-field m-field-mobile m-select-field\">\n                                      <div className=\"m-field-head\">\n                                        <div className=\"m-field-label\">\n                                          <span>工作日期</span>\n                                        </div>\n                                      </div>\n\n                                      <div className=\"m-field-box\">\n                                        <div className=\"m-field-content left\">\n                                          <div className=\"input-wrapper\">\n                                            <InputItem\n                                              editable={false}\n                                              clear\n                                              value={item.riqi}\n                                              placeholder=\"请选择\"\n                                            ></InputItem>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </DatePicker>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>施工内容</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.content}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'content',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>工时</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.work_hours}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'work_hours',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>小计</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.subtotal}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>备注</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.remarks}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'remarks',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nimport { fpAdd } from '../../utils/fpOperations';\nconst now = new Date();\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '设备名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '维保内容',\n          dataIndex: 'content',\n        },\n        {\n          title: '工时数',\n          dataIndex: 'hours',\n        },\n        {\n          title: '人工合价',\n          dataIndex: 'person_total',\n        },\n        {\n          title: '材料合价',\n          dataIndex: 'material_total',\n        },\n        {\n          title: '小计',\n          dataIndex: 'total_price',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          content: '',\n          hours: '',\n          person_total: '',\n          total_price: '',\n          material_total: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          content: '',\n          hours: '',\n          person_total: '',\n          total_price: '',\n          material_total: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            Inputmoney1: 0,\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                content: '',\n                hours: '',\n                person_total: '',\n                total_price: '',\n                material_total: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('list', list);\n        if (list.length > 0) {\n          let newarr2 = [];\n          newarr2 = list.filter(item => {\n            if (item.total_price) {\n              return item;\n            }\n          });\n          newarr2 = newarr2.map(item => {\n            return item.total_price;\n          });\n          _this.setState({\n            Inputmoney1: newarr2.reduce(fpAdd, 0).toFixed(2),\n          });\n        } else {\n          _this.setState({\n            Inputmoney1: 0,\n          });\n        }\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log(types, index, e, _this);\n        const arr = _this.state.materialList;\n        console.log('120', _this.state.materialList);\n        const arrindex = e;\n        const newindex = index;\n        const newtype = types;\n        arr[newindex][newtype] = arrindex;\n        if (arr[newindex].material_total && arr[newindex].person_total) {\n          arr[newindex].total_price = (\n            Number(arr[newindex].person_total) +\n            Number(arr[newindex].material_total)\n          ).toFixed(2);\n        }\n        //   合计\n        let newarr2 = [];\n\n        newarr2 = arr.filter(item => {\n          if (item.total_price) {\n            return item;\n          }\n        });\n        newarr2 = newarr2.map(item => {\n          return item.total_price;\n        });\n        let total = newarr2.reduce(fpAdd, 0);\n        if (total) {\n          total = total.toFixed(2);\n        }\n        _this.setState({\n          materialList: [...arr],\n          Inputmoney1: total,\n        });\n        console.log('12', arr);\n      },\n      onChangedata1(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_in_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      onChangedata2(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_out_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestMain');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      let str0 =\n        '设备名称  单位  规格型号  维保内容  工时数  人工合价  材料合价  小计';\n      const str1 = '\\n' + '合计(元):' + this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          '  ' +\n          newlistdata[i].unit +\n          '  ' +\n          newlistdata[i].size +\n          '  ' +\n          newlistdata[i].content +\n          '  ' +\n          newlistdata[i].hours +\n          '  ' +\n          newlistdata[i].person_total +\n          '  ' +\n          newlistdata[i].material_total +\n          '  ' +\n          newlistdata[i].total_price;\n      }\n      const str = str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestMain', str);\n      form.setFieldExtendValue('TestMain', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestMain');\n    const label = form.getFieldProp('TestMain', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>维保内容</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.check_situation}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'check_situation',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>工时数</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.hours}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'hours',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>人工合价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.person_total}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'person_total',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>材料合价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.material_total}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'material_total',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>小计</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.total_price}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>备注</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.remarks}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'remarks',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437188\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport { InputItem, Drawer, Tabs, SearchBar } from 'antd-mobile';\nimport './mobile.less';\nimport { FancyList } from '../../components/fancyLists';\nimport { parseListData } from '../../utils/normalizeUtils';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    vlauedata.biao_name = 'material_payment';\n    const TestMaterField = form.getFieldInstance('TestMater');\n    const key = TestMaterField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'TestMater',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['TestMater'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        console.log(JSON.parse(res.dataList[0].value));\n        //   表格数据\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: newarr,\n        });\n      });\n  },\n  onExtraClick() {\n    this.setState({ inputvalue: '' });\n\n    console.log('测试点击');\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newvalue = this.state.allData;\n    newvalue.name = '';\n    newvalue.type = 0;\n    newvalue.page = 1;\n    newvalue.rk_id = ['a'];\n    newvalue.project_name = '';\n    // this.setState({\n    //   allData: newvalue,\n    // });\n    this.asyncSetFieldProps(newvalue);\n\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item) {\n    const { form } = this.props;\n\n    let dtar = '';\n    if (this.state.detdate === 'a1') {\n      dtar = '材料结算-' + item.name;\n    } else if (this.state.detdate === 'b1') {\n      dtar = '采购合同-' + item.name;\n    } else if (this.state.detdate === 'c1') {\n      dtar = '采购订单-' + item.name;\n    } else if (this.state.detdate === 'd1') {\n      dtar = '材料入库-' + item.name;\n    }\n    console.log(dtar);\n    form.setFieldValue('Conname', item.contract_name);\n    form.setFieldExtendValue('Conname', item.contract_name);\n    this.setState({ inputvalue: dtar, showElem: 'none' });\n    form.setFieldValue('TestMater', dtar);\n    form.setFieldExtendValue('TestMater', dtar);\n    form.setFieldValue('Selectjia', item.supplier);\n    form.setFieldExtendValue('Selectjia', item.supplier);\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestMater');\n    const label = form.getFieldProp('TestMater', 'label');\n    const required = form.getFieldProp('TestMater', 'required');\n    const tabs = [\n      { title: '材料结算' },\n      { title: '采购合同' },\n      { title: '采购订单' },\n      { title: '材料入库' },\n    ];\n    const parsers = {\n      materialTotal: [\n        {\n          key: 'name',\n          label: '结算主题',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'settle_money',\n          label: '结算金额',\n          index: 3,\n        },\n      ],\n      purchaseContract: [\n        {\n          key: 'name',\n          label: '合同名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '租赁单位',\n          index: 2,\n        },\n        {\n          key: 'contract_money',\n          label: '合同金额',\n          index: 3,\n        },\n      ],\n      purchaseOrder: [\n        {\n          key: 'name',\n          label: '采购名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'tax_total_money',\n          label: '结算金额',\n          index: 3,\n        },\n      ],\n      materialIn: [\n        {\n          key: 'name',\n          label: '入库主题',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'extend_four',\n          label: '库房',\n          index: 3,\n        },\n      ],\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parsers.materialTotal)}\n              itemClick={this.habdlClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(\n                this.state.listData,\n                parsers.purchaseContract,\n              )}\n              itemClick={this.habdlClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parsers.purchaseOrder)}\n              itemClick={this.habdlClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parsers.materialIn)}\n              itemClick={this.habdlClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n\n        {\n          title: '账存数量',\n          dataIndex: 'wz_number',\n        },\n        {\n          title: '盘点数量',\n          dataIndex: 'pd_number',\n        },\n      ],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          pd_number: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              wz_number: '',\n              pd_number: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n          isHouse: '1',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = {\n          rk_id: ['-1'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        newdate.ck_name = item.name;\n        newdate.type = 0;\n        newdate.page = 1;\n        newdate.isHouse = '2';\n        const dtar = item.name;\n\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n          type: 0,\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n            type: 0,\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      onSubmitck(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n\n          isHouse: '1',\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data, 2);\n      },\n      onSearchBarChangeck(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n\n            isHouse: '1',\n            rk_id: ['-1'],\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData, 2);\n        }\n      },\n      onSubmitme(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChangeme(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n\n            rk_id: ['-1'],\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          pd_number: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                wz_number: '',\n                pd_number: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'TestMaterial',\n      'material_inventory',\n    );\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        warehouse: '',\n        detailedData: [], //物资明细\n      };\n      editData.warehouse = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 = '\\n' + '设备名称 单位 规格型号 账存数量 盘点数量';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].wz_number +\n          ' ' +\n          newlistdata[i].pd_number;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestMaterial', str);\n      form.setFieldExtendValue('TestMaterial', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestMaterial');\n    const label = form.getFieldProp('TestMaterial', 'label');\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      warehouseParser: [\n        {\n          key: 'name',\n          label: '仓库名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'number',\n          label: '编号',\n          index: 2,\n        },\n      ],\n    };\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitme}\n          onChange={this.methods().onSearchBarChangeme}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <FancyList\n          data={parseListData(this.state.listData, parsers.materialParser)}\n          itemClick={this.methods().handleClick}\n        /> */}\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitck}\n          onChange={this.methods().onSearchBarChangeck}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n        <FancyList\n          data={parseListData(this.state.checkData, parsers.warehouseParser)}\n          itemClick={this.methods().checkClick}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>账存数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.wz_number}\n                                            placeholder=\"自动获取\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>盘点数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.pd_number}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'pd_number',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nimport { fpAdd } from '../../utils/fpOperations';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '设备名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n        {\n          title: '耗油量',\n          dataIndex: 'oil_consump',\n        },\n        {\n          title: '油价',\n          dataIndex: 'price',\n        },\n        {\n          title: '油费',\n          dataIndex: 'total_price',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          oil_consump: '',\n          price: '',\n          total_price: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              oil_consump: '',\n              price: '',\n              total_price: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          oil_consump: '',\n          price: '',\n          total_price: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            Inputmoney1: 0,\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                oil_consump: '',\n                price: '',\n                total_price: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('list', list);\n        if (list.length > 0) {\n          let newarr2 = [];\n          newarr2 = list.filter(item => {\n            if (item.total_price) {\n              return item;\n            }\n          });\n          newarr2 = newarr2.map(item => {\n            return item.total_price;\n          });\n          _this.setState({\n            Inputmoney1: newarr2.reduce(fpAdd, 0).toFixed(2),\n          });\n        } else {\n          _this.setState({\n            Inputmoney1: 0,\n          });\n        }\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log(types, index, e, _this);\n        const arr = _this.state.materialList;\n        console.log('120', _this.state.materialList);\n        const arrindex = e;\n        const newindex = index;\n        const newtype = types;\n        arr[newindex][newtype] = arrindex;\n        if (arr[newindex].oil_consump && arr[newindex].price) {\n          arr[newindex].total_price =\n            Number(arr[newindex].oil_consump) * Number(arr[newindex].price);\n        }\n        //   合计\n        let newarr2 = [];\n        newarr2 = arr.filter(item => {\n          if (item.total_price) {\n            return item;\n          }\n        });\n        newarr2 = newarr2.map(item => {\n          return item.total_price;\n        });\n        let total = newarr2.reduce(fpAdd, 0);\n        if (total) {\n          total = total.toFixed(2);\n        }\n        _this.setState({\n          materialList: [...arr],\n          Inputmoney1: total,\n        });\n        console.log('12', arr);\n      },\n      onChangedata1(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_in_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      onChangedata2(data, index) {\n        const newdata = new Date(data);\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].plan_out_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOli');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '设备名称 单位 规格型号 耗油量 油价 油费';\n      const str1 = '\\n' + '合计:' + this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].oil_consump +\n          ' ' +\n          newlistdata[i].price +\n          ' ' +\n          newlistdata[i].total_price;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestOli', str);\n      form.setFieldExtendValue('TestOli', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOli');\n    const label = form.getFieldProp('TestOli', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}/{item.unit}/{item.size}\n              </List.Item>\n            );\n          })}\n        </List> */}\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>耗油量(升)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.oil_consump}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'oil_consump',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>油价</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>油费(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.total_price}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n        {\n          title: '库存数量',\n          dataIndex: 'wz_number',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n\n      checkData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              wz_number: '',\n              remarks: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          remarks: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                wz_number: '',\n                remarks: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      onChangedata(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].purchase_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOpening');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '设备名称 单位 规格型号 库存数量 备注';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].wz_number +\n          ' ' +\n          newlistdata[i].remarks;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestOpening', str);\n      form.setFieldExtendValue('TestOpening', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOpening');\n    const label = form.getFieldProp('TestOpening', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}/{item.unit}/{item.size}\n              </List.Item>\n            );\n          })}\n        </List> */}\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>库存数量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.wz_number}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'wz_number',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>备注</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.remarks}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'remarks',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport { DetailList } from '../../components/listDetail';\nimport { FancyList } from '../../components/fancyLists';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        const { form } = _this.props;\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '采购申请-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '材料总计划-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        form.setFieldValue('Selectjia', item['supplier']);\n        form.setFieldExtendValue('Selectjia', item['supplier']);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          size: '',\n          unit: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                type: '',\n                name: '',\n                size: '',\n                unit: '',\n                unit_price: 0,\n                id: '',\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOrder', 'pur_order');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].det_quantity +\n          ' ' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestOrder', str);\n      form.setFieldExtendValue('TestOrder', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOrder');\n    const label = form.getFieldProp('TestOrder', 'label');\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      contractParser: [\n        {\n          key: 'name',\n          label: '合同名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '供应商',\n          index: 2,\n        },\n        {\n          key: 'contract_money',\n          label: '合同金额',\n          index: 3,\n        },\n      ],\n    };\n\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        {/* <FancyList\n          data={parseListData(this.state.listData, parsers.materialParser)}\n          itemClick={this.methods().handleClick}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n\n        <div>\n          <FancyList\n            data={parseListData(this.state.checkData, parsers.contractParser)}\n            itemClick={this.methods().checkClick}\n          />\n        </div>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, List, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '采购申请-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '材料总计划-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          size: '',\n          unit: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOrdernew');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n      _this.setState({\n        treeData: treeArray,\n        cascadeData: cascadeArray,\n      });\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].det_quantity +\n          ' ' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestOrdernew', str);\n      form.setFieldExtendValue('TestOrdernew', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOrdernew');\n    const label = form.getFieldProp('TestOrdernew', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}/{item.unit}/{item.size}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n\n        <div>\n          <List>\n            {this.state.checkData.map((item, index) => {\n              return (\n                <List.Item\n                  onClick={this.methods().checkClick.bind(this, item)}\n                  key={index}\n                  multipleLine\n                >\n                  {item.name}/ {item.detailed_money}\n                </List.Item>\n              );\n            })}\n          </List>\n        </div>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n\n        {\n          title: '出库数量',\n          dataIndex: 'wz_number',\n          editable: true,\n        },\n        {\n          title: '库存数量',\n          dataIndex: 'ku_cun',\n        },\n      ],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          ku_cun: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              wz_number: '',\n              ku_cun: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n          isHouse: '1',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = {\n          rk_id: ['-1'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n          arr[arrindex].ku_cun = item.ku_cun;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const dtar = item.name;\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n          type: 0,\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n            type: 0,\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      onSubmitck(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n\n          isHouse: '1',\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data, 2);\n      },\n      onSearchBarChangeck(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n\n            isHouse: '1',\n            rk_id: ['-1'],\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData, 2);\n        }\n      },\n      onSubmitme(value: any) {\n        console.log('0000006');\n        const data = {\n          name: '',\n          number: '9999',\n          page: 1,\n\n          rk_id: ['-1'],\n        };\n\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChangeme(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = {\n            name: '',\n            number: '9999',\n            page: 1,\n\n            rk_id: ['-1'],\n          };\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          wz_number: '',\n          ku_cun: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                wz_number: '',\n                ku_cun: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestOut');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        warehouse: '',\n        detailedData: [], //物资明细\n      };\n      editData.warehouse = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 = '\\n' + '设备名称 单位 规格型号 出库数量 库存数量';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].wz_number +\n          ' ' +\n          newlistdata[i].ku_cun;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestOut', str);\n      form.setFieldExtendValue('TestOut', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestOut');\n    const label = form.getFieldProp('TestOut', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const parsers = {\n      materialParser: [\n        {\n          key: 'name',\n          label: '物资名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'unit',\n          label: '单位',\n          index: 2,\n        },\n        {\n          key: 'size',\n          label: '规格型号',\n          index: 3,\n        },\n      ],\n      checkParser: [\n        {\n          key: 'name',\n          label: '仓库名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'number',\n          label: '编号',\n          index: 2,\n        },\n      ],\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitme}\n          onChange={this.methods().onSearchBarChangeme}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <FancyList\n          data={parseListData(this.state.listData, parsers.materialParser)}\n          itemClick={this.methods().handleClick}\n        /> */}\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmitck}\n          onChange={this.methods().onSearchBarChangeck}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n\n        <FancyList\n          data={parseListData(this.state.checkData, parsers.checkParser)}\n          itemClick={this.methods().checkClick}\n        />\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { warehouse = '', detailedData = [] } = value;\n      return (\n        <div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">仓库</label>\n                <div className=\"m-field-view-value\">\n                  <span>{warehouse}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"tablefield-mobile\">\n              <div className=\"tbody-row-wrap\">\n                {detailedData.map((item, index) => {\n                  return (\n                    <div key={index} className=\"row\">\n                      <label className=\"label row-label-title\">\n                        {label}明细({index + 1})\n                      </label>\n                      {this.state.deColumns.map(itemname => {\n                        if (!item[itemname.dataIndex]) {\n                          return null;\n                        }\n                        return (\n                          <div key={itemname.dataIndex}>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-field-view\">\n                                <label className=\"m-field-view-label\">\n                                  {itemname.title}\n                                </label>\n                                <div className=\"m-field-view-value\">\n                                  <span>{item[itemname.dataIndex]}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>库存数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.ku_cun}\n                                            placeholder=\"自动获取\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>出库数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.wz_number}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'wz_number',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { DetailList } from '../../components/listDetail';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      leftTreeDate: [],\n      datadate: '',\n      stateData: [],\n      stateKey: [],\n\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n\n        {\n          title: '总计划量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '使用部位',\n          dataIndex: 'position',\n        },\n        {\n          title: '备注',\n          dataIndex: 'remarks',\n        },\n      ],\n\n      checkData: [],\n\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          position: '',\n          purchase_riqi: '',\n          remarks: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              position: '',\n              purchase_riqi: '',\n              remarks: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          position: '',\n          purchase_riqi: '',\n          remarks: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                unit: '',\n                det_quantity: '',\n                position: '',\n                purchase_riqi: '',\n                remarks: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestPlan');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      let str0 = '设备名称  单位  规格型号  总计划量  使用部位  备注';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          '  ' +\n          newlistdata[i].unit +\n          '  ' +\n          newlistdata[i].size +\n          '  ' +\n          newlistdata[i].det_quantity +\n          '  ' +\n          newlistdata[i].position +\n          '  ' +\n          newlistdata[i].remarks;\n      }\n      const str = str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestPlan', str);\n      form.setFieldExtendValue('TestPlan', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestPlan');\n    const label = form.getFieldProp('TestPlan', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>总计划量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.det_quantity}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'det_quantity',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>使用部位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.position}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'position',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>备注</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.remarks}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'remarks',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\n// import { Button } from 'antd-mobile';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nimport { parsePrintString } from '../../utils/printStringParser';\nimport { purColumns } from '../../printColumns/TestPurField';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      Inputmoney2: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '采购申请-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '材料总计划-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          size: '',\n          unit: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                type: '',\n                name: '',\n                size: '',\n                unit: '',\n                unit_price: 0,\n                id: '',\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestPur', 'material_contract');\n    promise.then(res => {\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: [...res.dataArray],\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: [...res.dataArray],\n          });\n          console.log('CHECK DATA', res.dataArray);\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.detailname;\n      const str1 = `不含税金额合计(元)：${this.state.Inputmoney2}\\n 含税金额合计(元)：${this.state.Inputmoney1}`;\n      const str = str2 + parsePrintString(newlistdata, purColumns, str1);\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestPur', str);\n      form.setFieldExtendValue('TestPur', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestPur');\n    const label = form.getFieldProp('TestPur', 'label');\n    const tabs = [{ title: '采购申请' }, { title: '材料总计划' }];\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    // const onChangetree = value => {\n    //   console.log(value);\n    //   this.setState({ cascadeValue: value });\n    // };\n    const applicationParser = [\n      {\n        key: 'name',\n        label: '计划名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'detailed_money',\n        label: '详细金额',\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n        index: 2,\n      },\n    ];\n    const planParser = [\n      {\n        key: 'name',\n        label: '计划名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'project_name',\n        label: '项目名称',\n        index: 2,\n      },\n    ];\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage, 2);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, applicationParser)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, planParser)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437175\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { InputItem, Drawer, Tabs, SearchBar } from 'antd-mobile';\nimport './mobile.less';\nimport { ISwapFormField } from '../../types/runtime';\nimport { FancyList } from '../../components/fancyLists';\nimport { parseListData } from '../../utils/normalizeUtils';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    vlauedata.biao_name = 'lease_payments';\n    const TestRegistField = form.getFieldInstance('TestRegist');\n    const key = TestRegistField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'TestRegist',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['TestRegist'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: newarr,\n        });\n      });\n  },\n  onExtraClick() {\n    this.setState({ inputvalue: '' });\n\n    console.log('测试点击');\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newvalue = this.state.allData;\n    newvalue.name = '';\n    newvalue.type = 0;\n    newvalue.page = 1;\n    newvalue.rk_id = ['a'];\n    newvalue.project_name = '';\n    // this.setState({\n    //   allData: newvalue,\n    // });\n    this.asyncSetFieldProps(newvalue);\n\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item) {\n    const { form } = this.props;\n\n    let dtar = '';\n    if (this.state.detdate === 'a1') {\n      dtar = '租赁结算-' + item.name;\n    } else if (this.state.detdate === 'b1') {\n      dtar = '租赁合同-' + item.name;\n    } else if (this.state.detdate === 'c1') {\n      dtar = '机械费结算-' + item.name;\n    }\n    console.log(dtar);\n    form.setFieldValue('RegistField', item.contract_name);\n    this.setState({ inputvalue: dtar, showElem: 'none' });\n    form.setFieldValue('TestRegist', dtar);\n    form.setFieldExtendValue('TestRegist', dtar);\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestRegist');\n    const label = form.getFieldProp('TestRegist', 'label');\n    const required = form.getFieldProp('TestRegist', 'required');\n    const parsers = {\n      LeaseSettle: [\n        {\n          key: 'name',\n          label: '结算名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '租赁单位',\n          index: 2,\n        },\n        {\n          key: 'reply_money',\n          label: '结算金额',\n          index: 3,\n        },\n      ],\n      LeaseContract: [\n        {\n          key: 'name',\n          label: '合同名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'supplier',\n          label: '租赁单位',\n          index: 2,\n        },\n        {\n          key: 'contract_money',\n          label: '合同金额',\n          index: 3,\n        },\n      ],\n      MachineFeeSettle: [\n        {\n          key: 'name',\n          label: '结算名称',\n          index: 1,\n          title: true,\n        },\n        {\n          key: 'extend_first',\n          label: '租赁单位',\n          index: 2,\n        },\n        {\n          key: 'detailed_money',\n          label: '结算金额',\n          index: 3,\n        },\n      ],\n    };\n    const tabs = [\n      { title: '租赁结算' },\n      { title: '租赁合同' },\n      { title: '机械费结算' },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parsers.LeaseSettle)}\n              itemClick={this.habdlClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(this.state.listData, parsers.LeaseContract)}\n              itemClick={this.habdlClick}\n            />\n          </div>\n          <div>\n            <FancyList\n              data={parseListData(\n                this.state.listData,\n                parsers.MachineFeeSettle,\n              )}\n              itemClick={this.habdlClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","import { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  parseListData,\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { FancyList } from '../../components/fancyLists';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (_this.state.detdate === 'a1') {\n          dtar = '采购合同-' + item.name;\n        } else if (_this.state.detdate === 'b1') {\n          dtar = '采购订单-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          size: '',\n          unit: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                type: '',\n                name: '',\n                size: '',\n                unit: '',\n                unit_price: 0,\n                id: '',\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'TestReturn',\n      'material_contract',\n    );\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: [...res.dataArray],\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: [...res.dataArray],\n          });\n          console.log('CHECK DATA', res.dataArray);\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 退货数量 采购数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].det_quantity +\n          ' ' +\n          newlistdata[i].cg_number +\n          '' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestReturn', str);\n      form.setFieldExtendValue('TestReturn', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestReturn');\n    const label = form.getFieldProp('TestReturn', 'label');\n    const tabs = [{ title: '采购合同' }, { title: '采购订单' }];\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const applicationParser = [\n      {\n        key: 'name',\n        label: '计划名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'detailed_money',\n        label: '详细金额',\n        icon: 'https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//pYTtdmPkiF1637911760715.png',\n        index: 2,\n      },\n    ];\n    const planParser = [\n      {\n        key: 'name',\n        label: '计划名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'project_name',\n        label: '项目名称',\n        index: 2,\n      },\n    ];\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <FancyList\n          data={parseListData(this.state.listData, materialParser)}\n          itemClick={this.methods().handleClick}\n        /> */}\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage, 2);\n          }}\n        >\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, applicationParser)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n\n          <div>\n            <FancyList\n              data={parseListData(this.state.checkData, planParser)}\n              itemClick={this.methods().checkClick}\n            />\n          </div>\n        </Tabs>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, SearchBar } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { handleTaxTableStatistics } from '../../components/handleTables';\nimport { ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格',\n          dataIndex: 'size',\n        },\n        {\n          title: '数量',\n          dataIndex: 'wz_number',\n        },\n        {\n          title: '单价',\n          dataIndex: 'price',\n        },\n        {\n          title: '小计',\n          dataIndex: 'subtotal',\n        },\n      ],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n\n      checkData: [],\n\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          wz_number: '',\n          price: '',\n          subtotal: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              wz_number: '',\n              price: '',\n              subtotal: '',\n            },\n          ],\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n\n      iconClick() {\n        _this.setState({\n          materialList: [],\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow = {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          wz_number: '',\n          price: '',\n          subtotal: '',\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            materialList: [\n              {\n                id: '',\n                typename: '',\n                name: '',\n                size: '',\n                wz_number: '',\n                price: '',\n                subtotal: '',\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log(types, index, e, _this);\n        const arr = _this.state.materialList;\n        console.log(_this.state.materialList);\n        // let arrindex = e.target.value;\n        const arrindex = e;\n        const newindex = index;\n        const newtype = types;\n        // arr[newindex] = {};\n        arr[newindex][newtype] = arrindex;\n        if (arr[newindex].wz_number && arr[newindex].price) {\n          arr[newindex].subtotal =\n            arr[newindex].wz_number * arr[newindex].price;\n        } else {\n          arr[newindex].subtotal = '请输入数量或者单价';\n        }\n\n        _this.setState({ materialList: [...arr] });\n        console.log(arr);\n      },\n      onChangedata(data, index) {\n        const newdata = new Date(data);\n\n        const datetime =\n          newdata.getFullYear() +\n          '-' +\n          (newdata.getMonth() + 1) +\n          '-' +\n          newdata.getDate();\n        const arr = _this.state.materialList;\n        arr[index].purchase_riqi = datetime;\n        _this.setState({ materialList: [...arr] });\n        console.log(datetime, index);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(_this, data, 'TestScience');\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页：fieldDidUpdate');\n      const editData = {\n        detailedData: [], //物资明细\n      };\n      editData.detailedData = this.state.materialList;\n      // 打印数据\n      const newlistdata = this.state.materialList;\n      const str2 = '';\n      let str0 = '\\n' + '设备名称 单位 规格型号 数量 单价 小计';\n      const str1 = '\\n';\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].wz_number +\n          ' ' +\n          newlistdata[i].price +\n          ' ' +\n          newlistdata[i].subtotal;\n      }\n      const str = str2 + str0 + str1;\n      console.log(str);\n      const { form } = this.props;\n      form.setFieldValue('TestScience', str);\n      form.setFieldExtendValue('TestScience', editData);\n    }\n\n    // this.state.dataSource;\n    // this.state.Inputmoney1;\n    // this.state.Inputmoney2;\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestScience');\n    const label = form.getFieldProp('TestScience', 'label');\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}/{item.unit}/{item.size}\n              </List.Item>\n            );\n          })}\n        </List> */}\n      </div>\n    );\n\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"tablefield-mobile\">\n          <div\n            className=\"custom-list-title\"\n            style={{\n              width: '100%',\n              paddingLeft: '15px',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>{label}</div>\n\n            <div\n              onClick={this.methods().ResetClick}\n              style={{ color: '#409EFF' }}\n            >\n              重置明细\n            </div>\n          </div>\n          <div className=\"table-body  tbody  \">\n            {this.state.materialList.map((item, index) => {\n              return (\n                <div key={item.id}>\n                  <div className=\"tbody-row-wrap\">\n                    <div className=\"tbody-row-pannel\">\n                      <div\n                        className=\"custom-list-title\"\n                        style={{\n                          width: '100%',\n                          paddingLeft: '15px',\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <div>\n                          {label}-明细({index + 1})\n                        </div>\n                        {this.state.materialList.length > 0 ? (\n                          <div\n                            className=\"dele_item\"\n                            onClick={this.methods().deleteItem.bind(\n                              this,\n                              index,\n                            )}\n                          >\n                            删除\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className=\"row\">\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>物资名称</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.name}\n                                          placeholder=\"请选择\"\n                                          onFocus={this.methods().onOpenChange.bind(\n                                            this,\n                                            index,\n                                          )}\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'name',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>规格型号</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.size}\n                                          placeholder=\"自动获取\"\n                                          readOnly\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单位</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          type=\"text\"\n                                          readOnly\n                                          className=\"ant-input m-mobile-inner-input\"\n                                          value={item.unit}\n                                          placeholder=\"自动获取\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>单价</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          value={item.price}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'price',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>数量</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          clear\n                                          value={item.wz_number}\n                                          placeholder=\"请输入\"\n                                          onChange={e =>\n                                            this.methods().onInputchange(\n                                              'wz_number',\n                                              index,\n                                              e,\n                                            )\n                                          }\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-group m-group-mobile\">\n                              <div className=\"m-field-wrapper\">\n                                <div className=\"m-field m-field-mobile m-select-field\">\n                                  <div className=\"m-field-head\">\n                                    <div className=\"m-field-label\">\n                                      <span>小计</span>\n                                    </div>\n                                  </div>\n                                  <div className=\"m-field-box\">\n                                    <div className=\"m-field-content left\">\n                                      <div className=\"input-wrapper\">\n                                        <InputItem\n                                          editable={false}\n                                          clear\n                                          value={item.subtotal}\n                                          placeholder=\"自动计算\"\n                                        ></InputItem>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"table-actions\">\n              <div\n                className=\"tbody-add-button tTap\"\n                onClick={this.methods().addDetail}\n              >\n                <img\n                  style={{ width: '20px' }}\n                  src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                  alt=\"\"\n                />\n                &nbsp;\n                <span className=\"add-button-text\">增加明细</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/*  */}\n\n        {/* 物资明细 */}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={sidebar}\n            onOpenChange={this.methods().onOpenChange}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n        {createPortal(\n          <Drawer\n            className=\"isvzhukuaizkoatiaoshi\"\n            open={true}\n            style={{\n              minHeight: document.documentElement.clientHeight,\n              display: this.state.showElem2,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgb(255, 255, 255)',\n              position: 'fixed',\n              zIndex: 100,\n            }}\n            enableDragHandle\n            contentStyle={{\n              color: '#A6A6A6',\n              textAlign: 'center',\n              paddingTop: 42,\n            }}\n            sidebar={treesidebar}\n            onOpenChange={this.methods().onOpenChange2}\n          ></Drawer>,\n          document.getElementById('MF_APP'),\n        )}\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","//重构完成\nimport { Tree } from 'antd';\nimport { Drawer, InputItem, List, SearchBar, Tabs } from 'antd-mobile';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  handleSaveTaxTable,\n  handleTaxTableStatistics,\n} from '../../components/handleTables';\nimport { DataType, ISwapFormField } from '../../types/runtime';\nimport { asyncSetProps } from '../../utils/asyncSetProps';\nimport { searchBarChange, searchBarSubmit } from '../../utils/searchUtils';\nimport { HandledDetailDialogMobile } from '../../components/addDetail';\nimport {\n  traverseAndParseTreeData,\n  uniqueArrayByKey,\n} from '../../utils/normalizeUtils';\nimport { DetailList } from '../../components/listDetail';\nconst now = new Date();\n\nconst FormField: ISwapFormField = {\n  getInitialState() {\n    return {\n      updateTreeDate: '1', //1 更新\n      activeKey: '',\n      datadate: '',\n      leftTreeDate: [],\n      stateData: [],\n      stateKey: [],\n      deColumns: [\n        {\n          title: '物资名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '单位',\n          dataIndex: 'unit',\n        },\n        {\n          title: '规格型号',\n          dataIndex: 'size',\n        },\n        {\n          title: '需用数量',\n          dataIndex: 'det_quantity',\n        },\n        {\n          title: '不含税单价(元)',\n          dataIndex: 'no_unit_price',\n        },\n        {\n          title: '含税单价(元)',\n          dataIndex: 'unit_price',\n        },\n        {\n          title: '税率(%)',\n          dataIndex: 'tax_rate',\n        },\n\n        {\n          title: '税额(元)',\n          dataIndex: 'tax_amount',\n        },\n        {\n          title: '不含税金额(元)',\n          dataIndex: 'no_amount_tax',\n        },\n        {\n          title: '含税金额(元)',\n          dataIndex: 'amount_tax',\n        },\n      ],\n      cascadeValue: [],\n      cascadeData: [],\n      showTypes: true,\n      popUpVisible: false,\n      popUpCascadeVisible: false,\n      Inputmoney1: '',\n      checkData: [],\n      chenkdata: '',\n      treevalue: undefined,\n      treeData: [],\n      detdate: 'a1',\n      date: now,\n      checkindex: '',\n      SearchBarvalue: '',\n      showElem: 'none',\n      showElem2: 'none',\n      showElem3: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n      fixedColumn: '',\n      materialList: [\n        {\n          id: '',\n          typename: '',\n          name: '',\n          size: '',\n          unit: '',\n          det_quantity: '',\n          no_unit_price: '',\n          tax_rate: '',\n          tax_amount: '',\n          amount_tax: '',\n          no_amount_tax: '',\n        },\n      ],\n    };\n  },\n  handleOk: function (): void {\n    throw new Error('Function not implemented.');\n  },\n  handleCancel() {\n    this.setState({\n      showElem: 'none',\n    });\n  },\n  methods() {\n    const _this = this;\n\n    return {\n      ResetClick() {\n        _this.setState({\n          detailname: '',\n          Inputmoney2: 0,\n          Inputmoney1: 0,\n          materialList: [\n            {\n              id: '',\n              typename: '',\n              name: '',\n              size: '',\n              unit: '',\n              det_quantity: '',\n              no_unit_price: '',\n              tax_rate: '',\n              tax_amount: '',\n              amount_tax: '',\n              no_amount_tax: '',\n            },\n          ],\n        });\n      },\n      getCheckData() {\n        _this.setState({\n          dstatus: '1',\n        });\n        const newPage = {\n          rk_id: _this.state.detdate ? _this.state.detdate[0] : ['a'],\n          number: '10',\n          page: 1,\n          name: '',\n        };\n        _this.setState({\n          allData: newPage,\n        });\n        _this.asyncSetFieldProps(newPage, 2);\n        _this.setState({\n          showElem3: 'inherit',\n        });\n      },\n      onOpenChange(index: any) {\n        console.log('0000001');\n        const newData = _this.state.allData;\n        newData.rk_id = ['-1'];\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem: 'inherit',\n          checkindex: index,\n          updateTreeDate: '1',\n        });\n      },\n      onOpenChange2(index: any) {\n        console.log('0000002');\n        const newData = _this.state.allData;\n        _this.asyncSetFieldProps(newData);\n        _this.setState({\n          showElem2: 'inherit',\n          checkindex: index,\n        });\n      },\n      handleClick(item: any) {\n        console.log('0000003');\n        const arr = _this.state.materialList;\n        const arrindex = _this.state.checkindex;\n        if (arr[arrindex]) {\n          arr[arrindex].name = item.name;\n          arr[arrindex].size = item.size;\n          arr[arrindex].unit = item.unit;\n        }\n        let lData = [];\n        lData = [...uniqueArrayByKey(arr, ['name', 'size', 'unit'])];\n        _this.setState({\n          showElem: 'none',\n          materialList: lData,\n        });\n      },\n      upperLevel() {\n        const stateData = _this.state.stateData;\n        const stateKey = _this.state.stateKey;\n\n        if (stateData.length > 1) {\n          stateData.pop();\n          _this.setState(\n            {\n              leftTreeDate: stateData[stateData.length - 1],\n              activeKey: stateKey[stateKey.length - 1],\n              stateData: stateData,\n            },\n            () => {\n              const treedata = {\n                type: stateKey[stateKey.length - 1],\n                number: '999',\n                page: '1',\n                rk_id: ['-1'],\n              };\n              _this.asyncSetFieldProps(treedata);\n              stateKey.pop();\n              _this.setState({\n                stateKey,\n              });\n            },\n          );\n        }\n\n        console.log(stateData);\n      },\n      sideChange(key: any) {\n        _this.setState({\n          updateTreeDate: '2',\n        });\n        const treedata = {\n          type: key,\n          number: '999',\n          page: '1',\n          rk_id: ['-1'],\n        };\n        _this.asyncSetFieldProps(treedata, 0, false);\n      },\n      checkClick(item: any) {\n        const { form } = _this.props;\n        console.log('0000005');\n        const cDataid = [item.id];\n        const newdate = _this.state.allData;\n        let dtar = '';\n        if (this.state.detdate === 'a1') {\n          dtar = '采购合同-' + item.name;\n        } else if (this.state.detdate === 'b1') {\n          dtar = '采购订单-' + item.name;\n        } else if (this.state.detdate === 'c1') {\n          dtar = '材料入库-' + item.name;\n        }\n        console.log(cDataid);\n        newdate.rk_id = [_this.state.detdate, ...cDataid];\n        _this.asyncSetFieldProps(newdate, 1);\n        _this.setState({\n          chenkdata: dtar,\n          showElem3: 'none',\n        });\n        form.setFieldExtendValue('Selectjia', item['supplier']);\n        form.setFieldValue('Selectjia', item['supplier']);\n      },\n      iconClick() {\n        _this.setState({\n          chenkdata: '',\n          materialList: [],\n          Inputmoney1: 0,\n          Inputmoney2: 0,\n        });\n      },\n      onSubmit(value: any) {\n        console.log('0000006');\n        const data = _this.state.allData;\n        data.name = value;\n        _this.asyncSetFieldProps(data);\n      },\n      onSearchBarChange(value: any) {\n        console.log('0000007');\n        _this.setState({\n          SearchBarvalue: value,\n        });\n        if (!value) {\n          const newData = _this.state.allData;\n          newData.name = value;\n          _this.asyncSetFieldProps(newData);\n        }\n      },\n      addDetail() {\n        const detailRow: DataType = {\n          type: '',\n          name: '',\n          size: '',\n          unit: '',\n          unit_price: 0,\n          id: '',\n          det_quantity: 0,\n          no_unit_price: 0,\n          tax_rate: 0,\n          amount_tax: 0,\n          tax_amount: 0,\n          key: '',\n          no_amount_tax: 0,\n        };\n        _this.setState({\n          materialList: [..._this.state.materialList, detailRow],\n        });\n      },\n      deleteItem(index: number) {\n        console.log('0000008');\n        const list = _this.state.materialList;\n        if (list.length === 1) {\n          return _this.setState({\n            detailname: '',\n            Inputmoney2: 0,\n            Inputmoney1: 0,\n            materialList: [\n              {\n                type: '',\n                name: '',\n                size: '',\n                unit: '',\n                unit_price: 0,\n                id: '',\n                det_quantity: 0,\n                no_unit_price: 0,\n                tax_rate: 0,\n                amount_tax: 0,\n                tax_amount: 0,\n                key: '',\n                no_amount_tax: 0,\n              },\n            ],\n          });\n        }\n        list.splice(index, 1);\n        _this.setState({\n          materialList: list,\n        });\n        console.log('_this', list);\n        handleTaxTableStatistics(_this, list);\n      },\n      onInputchange(types: any, index: number, e: any) {\n        console.log('0000009');\n        const dataArray = _this.state.materialList;\n        dataArray[index][types] = e;\n        const row = dataArray[index];\n        const key = types;\n        const data = handleSaveTaxTable(_this, dataArray, row, key);\n        _this.setState({\n          materialList: [...data],\n        });\n        handleTaxTableStatistics(_this, data);\n      },\n      handleAddVisible(visible: boolean) {\n        _this.setState({\n          popUpVisible: visible,\n        });\n      },\n      handleCascadeVisible(visible: boolean) {\n        _this.setState({\n          popUpCascadeVisible: visible,\n        });\n      },\n    };\n  },\n  asyncSetFieldProps(data: any, type = 0, updateCascade = true) {\n    const _this = this;\n    const promise = asyncSetProps(\n      _this,\n      data,\n      'TestSet',\n      'material_settlement',\n    );\n    promise.then(res => {\n      console.log('1234543=======', res);\n      _this.setState({\n        listData: [...res.dataArray],\n      });\n      const treeArray = [\n        {\n          title: '物资类型',\n          key: '0',\n          children: [...res.extendArray],\n        },\n      ];\n      if (updateCascade && res.extendArray.length > 0) {\n        const cascadeArray = [traverseAndParseTreeData(treeArray[0])];\n        _this.setState({\n          cascadeData: cascadeArray,\n        });\n      }\n      if (_this.state.updateTreeDate === '1') {\n        _this.setState({\n          leftTreeDate: [...treeArray],\n          treeData: [...treeArray],\n          stateData: [[...treeArray]],\n        });\n      }\n      switch (type) {\n        case 1:\n          _this.setState({\n            materialList: res.dataArray,\n          });\n          handleTaxTableStatistics(_this, res.dataArray);\n          break;\n        case 2:\n          _this.setState({\n            checkData: res.dataArray,\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  },\n  fieldDidUpdate() {\n    if (!this.props.runtimeProps.viewMode) {\n      console.log('发起页1：fieldDidUpdate');\n      const editData = {\n        hanmoney: 0,\n        nomoney: 0,\n        detailname: '',\n        detailedData: [], //物资明细\n      };\n      if (this.state.Inputmoney1) {\n        editData.hanmoney = Number(this.state.Inputmoney1);\n      }\n      if (this.state.Inputmoney2) {\n        editData.nomoney = Number(this.state.Inputmoney2);\n      }\n      editData.detailname = this.state.chenkdata;\n      editData.detailedData = this.state.materialList;\n      const newlistdata = this.state.materialList;\n      const str2 = this.state.chenkdata;\n      let str0 =\n        '\\n' +\n        '设备名称 单位 规格型号 数量 不含税单价 含税单价 税率 税额 不含税金额 含税金额';\n      const str1 =\n        '\\n' +\n        ' 不含税金额合计(元):' +\n        this.state.Inputmoney2 +\n        '\\n' +\n        '含税金额合计(元):' +\n        this.state.Inputmoney1;\n      for (let i = 0; i < newlistdata.length; i++) {\n        str0 +=\n          '\\n' +\n          newlistdata[i].name +\n          ' ' +\n          newlistdata[i].unit +\n          ' ' +\n          newlistdata[i].size +\n          ' ' +\n          newlistdata[i].det_quantity +\n          ' ' +\n          newlistdata[i].no_unit_price +\n          ' ' +\n          newlistdata[i].unit_price +\n          ' ' +\n          newlistdata[i].tax_rate +\n          ' ' +\n          newlistdata[i].tax_amount +\n          ' ' +\n          newlistdata[i].no_amount_tax +\n          ' ' +\n          newlistdata[i].amount_tax;\n      }\n      const str = str2 + str0 + str1;\n\n      const { form } = this.props;\n      form.setFieldValue('TestSet', str);\n      form.setFieldExtendValue('TestSet', editData);\n    }\n  },\n  fieldRender() {\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestSet');\n    const label = form.getFieldProp('TestSet', 'label');\n    const tabs = [\n      { title: '采购合同' },\n      { title: '采购订单' },\n      { title: '材料入库' },\n    ];\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\n      const arr = this.state.materialList;\n      const newindex = this.state.checkindex;\n      arr[newindex].typename = info.node.title;\n      this.setState({ showElem2: 'none', materialList: [...arr] });\n      const treedata = { type: selectedKeys[0], number: '10', page: '1' };\n      this.setState({\n        allData: treedata,\n      });\n      this.asyncSetFieldProps(treedata, 2);\n      console.log('selected', selectedKeys, info.node.title);\n    };\n    const onFinish = (values: any) => {\n      console.log('Success:', values);\n      //   const [form] = Form.useForm();\n      const newdate = this.state.allData;\n      newdate.wz_add = values;\n      this.asyncSetFieldProps(newdate);\n      this.setState({\n        popUpVisible: false,\n      });\n    };\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo);\n    };\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            _this.setState({\n              showTypes: false,\n            });\n            searchBarSubmit(_this, val, 0);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 0);\n            if (!val) {\n              _this.setState({\n                showTypes: true,\n              });\n            }\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem: 'none', SearchBarvalue: '' })\n          }\n        />\n        <HandledDetailDialogMobile\n          cascadeData={this.state.cascadeData}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          showElem={this.state.showElem}\n        />\n        {/* <Button\n          block\n          onClick={() => {\n            this.setState({ popUpVisible: true });\n          }}\n          color=\"primary\"\n        >\n          新增物资\n        </Button>\n        <DetailDialogMobile\n          visible={this.state.popUpVisible}\n          cascadeVisible={this.state.popUpCascadeVisible}\n          handleCascadeVisible={this.methods().handleCascadeVisible}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          onChangeTree={onChangetree}\n          handleVisible={this.methods().handleAddVisible}\n          treeData={this.state.cascadeData}\n          treeValue={this.state.cascadeValue}\n        /> */}\n        <DetailList\n          cascadeData={this.state.cascadeData}\n          rightListData={this.state.listData}\n          showTypes={this.state.showTypes}\n          sideChange={this.methods().sideChange}\n          itemClick={this.methods().handleClick.bind(this)}\n        />\n        {/* <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.methods().handleClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}/{item.unit}/{item.size}\n              </List.Item>\n            );\n          })}\n        </List> */}\n      </div>\n    );\n    const checkdebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={val => {\n            const _this = this;\n            searchBarSubmit(_this, val, 2);\n          }}\n          onChange={val => {\n            const _this = this;\n            searchBarChange(_this, val, 2);\n          }}\n          showCancelButton\n          onCancel={() =>\n            this.setState({ showElem3: 'none', SearchBarvalue: '' })\n          }\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage, 2);\n          }}\n        >\n          <div>\n            <List>\n              {this.state.checkData.map((item, index) => {\n                const text = item.xuan === 1 ? '#909399' : '#000000';\n                const style = {\n                  color: text,\n                };\n                return (\n                  <List.Item\n                    onClick={this.methods().checkClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    <span style={style}>\n                      {item.name}/ {item.detailed_money}\n                    </span>\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n\n          <div>\n            <List>\n              {this.state.checkData.map((item, index) => {\n                const text = item.xuan === 1 ? '#909399' : '#000000';\n                const style = {\n                  color: text,\n                };\n                return (\n                  <List.Item\n                    onClick={this.methods().checkClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    <span style={style}>\n                      {item.name}/ {item.project_name}\n                    </span>\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n          <div>\n            <List>\n              {this.state.checkData.map((item, index) => {\n                const text = item.xuan === 1 ? '#909399' : '#000000';\n                const style = {\n                  color: text,\n                };\n                return (\n                  <List.Item\n                    onClick={this.methods().checkClick.bind(this, item)}\n                    key={index}\n                    multipleLine\n                  >\n                    <span style={style}>\n                      {item.name +\n                        `${item.supplier ? '/' + item.supplier : ''}` +\n                        `${item.extend_four ? '/' + item.extend_four : ''}`}\n                    </span>\n                  </List.Item>\n                );\n              })}\n            </List>\n          </div>\n        </Tabs>\n      </div>\n    );\n    const treesidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.methods().onSubmit}\n          onChange={this.methods().onSearchBarChange}\n          onCancel={() =>\n            this.setState({ showElem2: 'none', SearchBarvalue: '' })\n          }\n          showCancelButton\n        />\n\n        <Tree onSelect={onSelect} treeData={this.state.treeData} />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      let value = field.getExtendValue();\n      if (!value.detailedData) {\n        value = field.getValue();\n      }\n      const { hanmoney = 0, nomoney = 0, detailedData = [] } = value;\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"tablefield-mobile\">\n            <div className=\"tbody-row-wrap\">\n              {detailedData.map((item, index) => {\n                return (\n                  <div key={index} className=\"row\">\n                    <label className=\"label row-label-title\">\n                      {label}明细({index + 1})\n                    </label>\n                    {this.state.deColumns.map(itemname => {\n                      if (!item[itemname.dataIndex]) {\n                        return null;\n                      }\n                      return (\n                        <div key={itemname.dataIndex}>\n                          <div className=\"field-wrapper\">\n                            <div className=\"m-field-view\">\n                              <label className=\"m-field-view-label\">\n                                {itemname.title}\n                              </label>\n                              <div className=\"m-field-view-value\">\n                                <span>{item[itemname.dataIndex]}</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{hanmoney ? Number(hanmoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"field-wrapper\">\n              <div className=\"m-field-view\">\n                <label className=\"m-field-view-label\">不含税金额合计(元)</label>\n                <div className=\"m-field-view-value\">\n                  <span>{nomoney ? Number(nomoney).toFixed(2) : ''}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>{label}</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.chenkdata}\n                          onClick={this.methods().getCheckData}\n                          placeholder=\"请选择\"\n                          readOnly\n                          extra=\"x\"\n                          onExtraClick={this.methods().iconClick}\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tablefield-mobile\">\n            <div\n              className=\"custom-list-title\"\n              style={{\n                width: '100%',\n                paddingLeft: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>{label}</div>\n\n              <div\n                onClick={this.methods().ResetClick}\n                style={{ color: '#409EFF' }}\n              >\n                重置明细\n              </div>\n            </div>\n            <div className=\"table-body  tbody  \">\n              {this.state.materialList.map((item, index) => {\n                return (\n                  <div key={item.id}>\n                    <div className=\"tbody-row-wrap\">\n                      <div className=\"tbody-row-pannel\">\n                        <div\n                          className=\"custom-list-title\"\n                          style={{\n                            width: '100%',\n                            paddingLeft: '15px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>\n                            {label}-明细({index + 1})\n                          </div>\n                          {this.state.materialList.length > 0 ? (\n                            <div\n                              className=\"dele_item\"\n                              onClick={this.methods().deleteItem.bind(\n                                this,\n                                index,\n                              )}\n                            >\n                              删除\n                            </div>\n                          ) : (\n                            <div></div>\n                          )}\n                        </div>\n                        <div className=\"row\">\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>物资名称</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.name}\n                                            placeholder=\"请选择\"\n                                            onFocus={this.methods().onOpenChange.bind(\n                                              this,\n                                              index,\n                                            )}\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'name',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>规格型号</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.size}\n                                            placeholder=\"自动获取\"\n                                            readOnly\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>单位</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            type=\"text\"\n                                            readOnly\n                                            className=\"ant-input m-mobile-inner-input\"\n                                            value={item.unit}\n                                            placeholder=\"自动获取\"\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>数量</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            value={item.det_quantity}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'det_quantity',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.no_unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'no_unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税单价(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.unit_price}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'unit_price',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税率(%)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            clear\n                                            value={item.tax_rate}\n                                            placeholder=\"请输入\"\n                                            onChange={e =>\n                                              this.methods().onInputchange(\n                                                'tax_rate',\n                                                index,\n                                                e,\n                                              )\n                                            }\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>税额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.tax_amount}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>不含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.no_amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"field-wrapper\">\n                              <div className=\"m-group m-group-mobile\">\n                                <div className=\"m-field-wrapper\">\n                                  <div className=\"m-field m-field-mobile m-select-field\">\n                                    <div className=\"m-field-head\">\n                                      <div className=\"m-field-label\">\n                                        <span>含税金额(元)</span>\n                                      </div>\n                                    </div>\n                                    <div className=\"m-field-box\">\n                                      <div className=\"m-field-content left\">\n                                        <div className=\"input-wrapper\">\n                                          <InputItem\n                                            editable={false}\n                                            clear\n                                            value={item.amount_tax}\n                                            placeholder=\"自动计算\"\n                                          ></InputItem>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"table-actions\">\n                <div\n                  className=\"tbody-add-button tTap\"\n                  onClick={this.methods().addDetail}\n                >\n                  <img\n                    style={{ width: '20px' }}\n                    src=\"https://dingyunlaowu.oss-cn-hangzhou.aliyuncs.com/xiezhu//Em46p8naW61629791119284.png\"\n                    alt=\"\"\n                  />\n                  &nbsp;\n                  <span className=\"add-button-text\">增加明细</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/*  */}\n\n          {/* 合计 */}\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>不含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney2}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field-wrapper\">\n            <div className=\"m-group m-group-mobile\">\n              <div className=\"m-field-wrapper\">\n                <div className=\"m-field m-field-mobile m-select-field\">\n                  <div className=\"m-field-head\">\n                    <div className=\"m-field-label\">\n                      <span>含税金额合计(元)</span>\n                    </div>\n                  </div>\n                  <div className=\"m-field-box\">\n                    <div className=\"m-field-content left\">\n                      <div className=\"input-wrapper\">\n                        <InputItem\n                          editable={false}\n                          value={this.state.Inputmoney1}\n                          placeholder=\"自动计算\"\n                          readOnly\n                        ></InputItem>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 物资明细 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.methods().onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem2,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={treesidebar}\n              onOpenChange={this.methods().onOpenChange2}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem3,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={checkdebar}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616436111\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport ReactDOM, { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport {\n  InputItem,\n  Drawer,\n  List,\n  NavBar,\n  Icon,\n  SearchBar,\n  Button,\n  WhiteSpace,\n  WingBlank,\n} from 'antd-mobile';\nimport './mobile.less';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    const { form } = this.props;\n    return {\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    const TestSheField = form.getFieldInstance('TestShe');\n    const key = TestSheField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'TestShe',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['TestShe'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: [...newarr],\n        });\n      });\n  },\n  onExtraClick() {\n    this.setState({ inputvalue: '' });\n\n    console.log('测试点击');\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newdate = this.state.allData;\n\n    this.asyncSetFieldProps(newdate);\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item: { name: any; unit: any; size: any }) {\n    const { form } = this.props;\n    console.log(item);\n    const newdate = item.name + '/' + item.unit + '/' + item.size;\n    this.setState({ inputvalue: newdate, showElem: 'none' }, () => {\n      form.setFieldValue('TestShe', newdate);\n      form.setFieldExtendValue('TestShe', newdate);\n    });\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form, runtimeProps } = this.props;\n    const { viewMode } = runtimeProps;\n    const field = form.getFieldInstance('TestShe');\n    const label = form.getFieldProp('TestShe', 'label');\n    const required = form.getFieldProp('TestShe', 'required');\n    const placeholder = form.getFieldProp('TestShe', 'placeholder');\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n\n        <List>\n          {this.state.listData.map((item, index) => {\n            return (\n              <List.Item\n                onClick={this.habdlClick.bind(this, item)}\n                key={index}\n                multipleLine\n              >\n                {item.name}\n              </List.Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* <div className=\"label\" onClick={this.onOpenChange}>\n          {required ? (\n            <span style={{ color: '#ea6d5c' }}>*</span>\n          ) : (\n            <span style={{ color: '#fff' }}>*</span>\n          )}\n          {label}\n        </div>\n\n        <div>\n          <InputItem\n            clear\n            value={this.state.inputvalue}\n            placeholder=\"请选择\"\n            onClick={this.onOpenChange}\n          ></InputItem> */}\n          {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n          {createPortal(\n            <Drawer\n              className=\"isvzhukuaizkoatiaoshi\"\n              open={true}\n              style={{\n                minHeight: document.documentElement.clientHeight,\n                display: this.state.showElem,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgb(255, 255, 255)',\n                position: 'fixed',\n                zIndex: 100,\n              }}\n              enableDragHandle\n              contentStyle={{\n                color: '#A6A6A6',\n                textAlign: 'center',\n                paddingTop: 42,\n              }}\n              sidebar={sidebar}\n              onOpenChange={this.onOpenChange}\n            ></Drawer>,\n            document.getElementById('MF_APP'),\n          )}\n        </div>\n      </div>\n\n      //   </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616437228\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IFormField } from '../../types';\nimport { InputItem, Drawer, Tabs, SearchBar } from 'antd-mobile';\nimport './mobile.less';\nimport { FancyList } from '../../components/fancyLists';\nimport { parseListData } from '../../utils/normalizeUtils';\n\n/**\n * 自定义控件运行态 Mobile 视图\n */\nconst FormField: IFormField = {\n  getInitialState() {\n    return {\n      detdate: 'a1',\n      SearchBarvalue: '',\n      showElem: 'none',\n      inputvalue: '',\n      allData: { type: '0', number: '99999', page: '1', name: '' },\n      listData: [],\n    };\n  },\n  asyncSetFieldProps(vlauedata) {\n    const { form, spi } = this.props;\n    const Pro_name = form.getFieldValue('Autopro');\n    vlauedata.project_name = Pro_name;\n    vlauedata.biao_name = 'sub_payment_application';\n    const TestSubconField = form.getFieldInstance('TestSubcon');\n    const key = TestSubconField.getProp('id');\n    const value = '1';\n    const bizAsyncData = [\n      {\n        key,\n        bizAlias: 'TestSubcon',\n        extendValue: vlauedata,\n        value,\n      },\n    ];\n\n    // 入参和返回参考套件数据刷新集成接口文档\n\n    spi\n      .refreshData({\n        modifiedBizAlias: ['TestSubcon'], // spi接口要改动的是leaveReason的属性值\n        bizAsyncData,\n      })\n      .then(res => {\n        let newarr;\n        //   表格数据\n        try {\n          newarr = JSON.parse(res.dataList[0].value).data;\n        } catch (e) {}\n\n        this.setState({\n          listData: newarr,\n        });\n      });\n  },\n  onExtraClick() {\n    this.setState({ inputvalue: '' });\n\n    console.log('测试点击');\n  },\n  onOpenChange(...args) {\n    console.log('sss');\n    console.log(args);\n    const newvalue = this.state.allData;\n    newvalue.name = '';\n    newvalue.type = 0;\n    newvalue.page = 1;\n    newvalue.rk_id = ['a'];\n    newvalue.project_name = '';\n    // this.setState({\n    //   allData: newvalue,\n    // });\n    this.asyncSetFieldProps(newvalue);\n\n    this.setState({ showElem: 'inherit' });\n  },\n  habdlClick(item) {\n    const { form } = this.props;\n\n    let dtar = '';\n    if (this.state.detdate === 'a1') {\n      dtar = '分包进度款结算-' + item.name;\n    } else if (this.state.detdate === 'b1') {\n      dtar = '分包完工结算-' + item.name;\n    } else if (this.state.detdate === 'c1') {\n      dtar = '分包质保金结算-' + item.name;\n    } else if (this.state.detdate === 'd1') {\n      dtar = '分包合同-' + item.name;\n    }\n    console.log(dtar);\n    form.setFieldValue('SubconField', item.contract_name);\n    this.setState({ inputvalue: dtar, showElem: 'none' });\n    form.setFieldValue('TestSubcon', dtar);\n    form.setFieldExtendValue('TestSubcon', dtar);\n    form.setFieldValue('Selectjia', item.sub_unit);\n    form.setFieldExtendValue('Selectjia', item.sub_unit);\n  },\n  onCancel() {\n    this.setState({ showElem: 'none' });\n  },\n  onSubmit(value) {\n    const newdate = this.state.allData;\n    newdate.name = value;\n\n    this.asyncSetFieldProps(newdate);\n  },\n  //搜索框\n  onSearchBarChange(value) {\n    if (!value) {\n      const newData = this.state.allData;\n      newData.name = value;\n      this.asyncSetFieldProps(newData);\n    }\n\n    this.setState({ SearchBarvalue: value });\n  },\n  fieldRender() {\n    // fix in codepen\n    const { form } = this.props;\n    const field = form.getFieldInstance('TestSubcon');\n    const label = form.getFieldProp('TestSubcon', 'label');\n    const required = form.getFieldProp('TestSubcon', 'required');\n    const parser = [\n      {\n        key: 'name',\n        label: '名称',\n        index: 1,\n        title: true,\n      },\n      {\n        key: 'extend_first',\n        label: '分包单位',\n        index: 2,\n      },\n      {\n        key: 'reply_money',\n        label: '结算金额',\n        index: 3,\n      },\n    ];\n    const tabs = [\n      { title: '分包进度款' },\n      { title: '分包完工' },\n      { title: '分包质保金' },\n      { title: '分包合同' },\n    ];\n\n    const sidebar = (\n      <div>\n        <SearchBar\n          value={this.state.SearchBarvalue}\n          placeholder=\"请输入\"\n          onSubmit={this.onSubmit}\n          onChange={this.onSearchBarChange}\n          onCancel={this.onCancel}\n          showCancelButton\n        />\n        <Tabs\n          tabs={tabs}\n          initialPage={0}\n          onChange={(tab, index) => {\n            console.log('onChange', index, tab);\n            this.setState({ detdate: 'a1' });\n            const newpage = {\n              defaultActiveKey: 'a',\n              rk_id: ['a'],\n              number: '1000',\n              page: 1,\n              name: '',\n            };\n            if (index === 0) {\n              this.setState({ detdate: 'a1' });\n              newpage.rk_id = ['a'];\n            } else if (index === 1) {\n              this.setState({ detdate: 'b1' });\n              newpage.rk_id = ['b'];\n            } else if (index === 2) {\n              this.setState({ detdate: 'c1' });\n              newpage.rk_id = ['c'];\n            } else if (index === 3) {\n              this.setState({ detdate: 'd1' });\n              newpage.rk_id = ['d'];\n            }\n            this.setState({\n              allData: newpage,\n            });\n            this.asyncSetFieldProps(newpage);\n          }}\n        ></Tabs>\n        <FancyList\n          data={parseListData(this.state.listData, parser)}\n          itemClick={this.habdlClick}\n        />\n      </div>\n    );\n    //详情\n    if (this.props.runtimeProps.viewMode) {\n      const value = field.getExtendValue();\n      return (\n        <div className=\"field-wrapper\">\n          <div className=\"m-field-view\">\n            <label className=\"m-field-view-label\">{label}</label>\n            <div className=\"m-field-view-value\"> {value}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"CorpHouse_class_m_1\">\n        <div className=\"field-wrapper\">\n          <div className=\"m-group m-group-mobile\">\n            <div className=\"m-field-wrapper\">\n              <div className=\"m-field m-field-mobile m-mobile-input vertical\">\n                <div className=\"m-field-head\" style={{ marginLeft: '-5px' }}>\n                  <label className=\"m-field-label\">\n                    <span>\n                      {required ? (\n                        <span style={{ color: '#ea6d5c' }}>*</span>\n                      ) : (\n                        <span style={{ color: '#fff' }}>*</span>\n                      )}\n                      {label}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"m-field-box\">\n                  <div className=\"m-field-content left\">\n                    <div className=\"input-wrapper\">\n                      <InputItem\n                        readOnly\n                        extra=\"x\"\n                        onExtraClick={this.onExtraClick}\n                        className=\"ant-input m-mobile-inner-input\"\n                        type=\"text\"\n                        placeholder=\"请选择\"\n                        value={this.state.inputvalue}\n                        onClick={this.onOpenChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 使用这种方式，将组件挂在到根元素下，防止样式污染 */}\n\n            {createPortal(\n              <Drawer\n                className=\"isvzhukuaizkoatiaoshi\"\n                open={true}\n                style={{\n                  minHeight: document.documentElement.clientHeight,\n                  display: this.state.showElem,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgb(255, 255, 255)',\n                  position: 'fixed',\n                  zIndex: 100,\n                }}\n                enableDragHandle\n                contentStyle={{\n                  color: '#A6A6A6',\n                  textAlign: 'center',\n                  paddingTop: 42,\n                }}\n                sidebar={sidebar}\n                onOpenChange={this.onOpenChange}\n              ></Drawer>,\n              document.getElementById('MF_APP'),\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport default FormField;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1646616435906\n      var cssReload = require(\"/Users/zhukuai/Desktop/suite-demo-micro-4/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"esModule\":false,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAlBA;AA0BA;AA3MA;AA8MA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAOA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA7LA;AAgMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAOA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAlMA;AAqMA;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;AAaA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAkBA;AArIA;AAwIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAxCA;AA0CA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAkCA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AApOA;AAuOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAmCA;AAEA;AACA;AACA;AAHA;AAQA;AAMA;AAEA;AACA;AACA;AAHA;AAQA;AAMA;AAEA;AACA;AACA;AAHA;AAQA;AAMA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA9QA;AAiRA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxRA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAksBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAvMA;AA0MA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAlNA;AAqNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9NA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAvLA;AA0LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAtMA;AAyMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClNA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AApLA;AAuLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AArCA;AAukCA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA1QA;AA6QA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA9LA;AAiMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AApKA;AAuKA;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAGA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAtDA;AAkFA;AAlNA;AAqNA;;;;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAGA;AAWA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAEA;AACA;AACA;AAHA;AAQA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AApKA;AAuKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAtCA;AAwCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAnLA;AACA;AAoLA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAlXA;AAqXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9XA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA1LA;AA6LA;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjCA;AAmCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA5KA;AA+KA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAtNA;AAyNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAtEA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AALA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAvQA;AAyQA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AA1BA;AACA;AAgCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAmgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA1oCA;AA6oCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnqCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAjEA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAgBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAtMA;AAwMA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAycA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AAp3BA;AAu3BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC94BA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAxLA;AA2LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAxLA;AA2LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAzEA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAlPA;AAoPA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AAqBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAzEA;AACA;AAgFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAkgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AAnzCA;AAszCA;;;;;;;;;;;AC50CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAjFA;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAJA;AAoBA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AALA;AAQA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AALA;AACA;AAMA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAFA;AAqBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAtTA;AAwTA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AAMA;AACA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AA1BA;AACA;AAgCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AACA;AAFA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAVA;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA1yCA;AA6yCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj0CA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnDA;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA3LA;AA6LA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAycA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AAvwBA;AA0wBA;;;;;;;;;;;AC9xBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAnCA;AA0CA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAUA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAIA;AAGA;AAGA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAkBA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AAEA;AACA;AACA;AAHA;AAQA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AASA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAUA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAVA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAVA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AApBA;AAiCA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AAhBA;AAyBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA0BA;AA56BA;AA+6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC97BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAlDA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA9LA;AAgMA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAycA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AArwBA;AAwwBA;;;;;;;;;;;AC5xBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAiCA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AAlQA;AAqQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjRA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAxDA;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA/MA;AAiNA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAycA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAoBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AA30BA;AA80BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACn2BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAjEA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAHA;AAiBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAHA;AAkBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAvTA;AAyTA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA0BA;AAvkCA;AA0kCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7lCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AApEA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAHA;AAkBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAHA;AAkBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA/PA;AAiQA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAVA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA0BA;AAvhCA;AA0hCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7iCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAhEA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAHA;AAkBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAHA;AAgBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA1QA;AA4QA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAiBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAVA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA0BA;AAjhCA;AAohCA;;;;;;;;;;;ACtiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAnEA;AA0EA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAkCA;AACA;AAFA;AAOA;AAIA;AALA;AAUA;AACA;AAFA;AAOA;AACA;AAFA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA5VA;AA+VA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3WA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AApDA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AANA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AANA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AALA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAnSA;AAqSA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AA1BA;AACA;AAgCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAaA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AACA;AAFA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA99BA;AAi+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACv/BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAxDA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAcA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AAcA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA9PA;AAgQA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAscA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA0BA;AAh7BA;AAm7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACt8BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnDA;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA9LA;AAgMA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAuBA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AAtyBA;AAyyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9zBA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAzEA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AALA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAhPA;AAkPA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AAqBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA/BA;AACA;AAsCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA+BA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAmgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AAptCA;AAutCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9uCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAnEA;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AApJA;AAsJA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AAqBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA4BA;AAEA;AACA;AACA;AAHA;AAQA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAoBA;AAEA;AACA;AACA;AAHA;AAQA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA3jCA;AA8jCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACllCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AArDA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AANA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AANA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AALA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA3RA;AA6RA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AA1BA;AAiCA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAaA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AACA;AAFA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA/9BA;AAk+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACv/BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAxDA;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAeA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAtLA;AAwLA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAUA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAyBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AA5zBA;AA+zBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACn1BA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AA1EA;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AALA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA7OA;AA+OA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAxgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AA9qCA;AAirCA;;;;;;;;;;;ACzsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAjDA;AAwDA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA3BA;AA+BA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AAIA;AALA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA3TA;AA8TA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1UA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAzEA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AALA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AA7OA;AA+OA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AAuBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAaA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAxgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AAzuCA;AA4uCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjwCA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAvDA;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAvMA;AAyMA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAuBA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AAj1BA;AAo1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACr2BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAxEA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AALA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AALA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAlPA;AAoPA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AAqBA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AArBA;AAyBA;AACA;AACA;AACA;AAJA;AA2BA;AACA;AACA;AACA;AACA;AALA;AAsBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA3BA;AAgCA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AAOA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AAMA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AARA;AAWA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AAFA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAfA;AA4BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AARA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AATA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAmBA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAlBA;AAyBA;AArxCA;AAwxCA;;;;;;;;;;;AC5yCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAGA;AAWA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AAxDA;AAoFA;AA1NA;AA6NA;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AA9BA;AAiCA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAnBA;AA2BA;AA1QA;AA6QA;;;;;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}