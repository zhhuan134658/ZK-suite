{"version":3,"file":"mobile.82bcdd6215859017dd32.hot-update.js","sources":["webpack://@ali/suite-demo/./.debug/src/components/listDetail.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Icon, List } from 'antd-mobile';\nimport { searchTree } from '../utils/normalizeUtils';\n\nconst DetailList: React.FC<{\n  cascadeData: Array<any>;\n  showTypes: boolean;\n  itemClick: (item: any) => void;\n  sideChange: (key: any) => void;\n  rightListData: Array<any>;\n}> = props => {\n  const { cascadeData, itemClick, sideChange, rightListData, showTypes } =\n    props;\n\n  const listItemStyle: React.CSSProperties = {\n    fontSize: '16px',\n  };\n  const listSpanStyle: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n  };\n  const renderItemEntry = (item: any) => {\n    return (\n      <List.Item\n        arrow=\"empty\"\n        className=\"item-entry\"\n        onClick={itemClick.bind(this, item)}\n        key={item.key}\n        style={listItemStyle}\n      >\n        {item.unit ? (\n          <span style={listSpanStyle}>\n            <span\n              style={{\n                color: '#333',\n              }}\n            >\n              {item.name}/\n            </span>\n            <span\n              style={{\n                color: '#666',\n              }}\n            >\n              {item.unit}/\n            </span>\n            <span\n              style={{\n                color: '#999',\n              }}\n            >\n              {item.size}\n            </span>\n          </span>\n        ) : (\n          <span style={listSpanStyle}> {item.name}</span>\n        )}\n      </List.Item>\n    );\n  };\n  const itemList = (itemList: Array<any>) => {\n    return (\n      <List>\n        {itemList.map((item: any) => {\n          return renderItemEntry(item);\n        })}\n      </List>\n    );\n  };\n\n  const [childrenList, setChildrenList] = React.useState([]);\n  const [navList, setNavList] = React.useState([{ title: '全部', key: '0' }]);\n  const setNav = (key: any) => {\n    const index = navList.findIndex(item => item.key === key);\n    navList.splice(index + 1, navList.length - index - 1);\n    if (navList.length === 0) {\n      navList.push({ title: '全部', key: '0' });\n      setNavList(navList);\n    } else {\n      setNavList(navList);\n    }\n    sideChange(key);\n  };\n  const setNavChildren = (key: any) => {\n    const navNode = searchTree(cascadeData[0], 'key', key);\n    if (navNode && navNode.children) {\n      setChildrenList(navNode.children);\n    }\n  };\n  const setTypeStyle = () => {\n    return {\n      ...{ color: '#333' },\n      ...listSpanStyle,\n    };\n  };\n  const renderTypeEntry = (navItem: any) => {\n    return (\n      <List.Item\n        className=\"nav-entry\"\n        onClick={() => {\n          console.log('nav', navItem);\n          setNavChildren(navItem.key);\n          sideChange(navItem.key);\n          navList.push(navItem);\n          setNavList(navList);\n        }}\n        style={listItemStyle}\n      >\n        <span\n          style={setTypeStyle()}\n        >{`${navItem.title}(${navItem['quantity']})`}</span>\n      </List.Item>\n    );\n  };\n  const typeList = (typeList: Array<any>) => {\n    return (\n      <List>\n        {typeList.map((navItem: any) => {\n          return renderTypeEntry(navItem);\n        })}\n      </List>\n    );\n  };\n\n  useEffect(() => {\n    console.log('CASCADE', cascadeData);\n    if (\n      cascadeData.length > 0 &&\n      cascadeData[0]['children'] &&\n      cascadeData[0]['children'].length > 0\n    ) {\n      setChildrenList(cascadeData[0]['children']);\n    }\n  }, [cascadeData]);\n  return (\n    <div\n      className=\"materialDetail\"\n      style={{\n        width: '100vw',\n        height: '100%',\n        backgroundColor: '#F2F1F6',\n      }}\n    >\n      {showTypes && (\n        <div\n          className=\"material-cascade-nav\"\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            backgroundColor: '#FFF',\n            marginBottom: '12px',\n          }}\n        >\n          {navList.map((item: any, index: number) => {\n            return (\n              <div\n                className={\n                  'material-cascade-nav-item' +\n                  (index === navList.length - 1\n                    ? ' material-cascade-nav-item-last'\n                    : '')\n                }\n                style={\n                  index === 0\n                    ? {\n                        paddingTop: '8px',\n                        paddingBottom: '8px',\n                        paddingLeft: '16px',\n                        fontSize: '16px',\n                      }\n                    : {\n                        paddingTop: '8px',\n                        paddingBottom: '8px',\n                        fontSize: '16px',\n                      }\n                }\n                key={item.key}\n                onClick={() => {\n                  setNav(item.key);\n                  setNavChildren(item.key);\n                }}\n              >\n                <span\n                  style={\n                    index !== navList.length - 1\n                      ? { color: '#0089FF' }\n                      : { color: '#666' }\n                  }\n                >\n                  {`${item.title}`}\n                  {index !== navList.length - 1 && (\n                    <Icon type=\"right\" color=\"#666\" />\n                  )}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {childrenList.length > 0 && showTypes && (\n        <div\n          className=\"material-cascade-types\"\n          style={{\n            marginBottom: '12px',\n          }}\n        >\n          {typeList(childrenList)}\n        </div>\n      )}\n      {rightListData.length > 0 && itemList(rightListData)}\n      {rightListData.length === 0 && (\n        <div\n          style={{\n            color: '#999',\n            backgroundColor: '#FFF',\n          }}\n        >\n          暂无数据！\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { DetailList };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AADA;AADA;AAQA;AACA;AADA;AADA;AAQA;AACA;AADA;AADA;AASA;AAAA;AAIA;AACA;AAAA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AADA;AAKA;AACA;AAAA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AAEA;AAMA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAzBA;AA4BA;AAEA;AAAA;AACA;AAAA;AAJA;AASA;AAAA;AAAA;AAKA;AAKA;AACA;AACA;AADA;AAFA;AAYA;AACA;AACA;AAFA;AADA;AAWA;AACA;;;;;A","sourceRoot":""}