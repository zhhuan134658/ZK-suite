"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var cross_spawn_1 = __importDefault(require("cross-spawn"));
var generate_build_1 = __importDefault(require("./generate-build"));
function generateGulpFileContent() {
    return "const gulp = require('gulp');\nconst rimraf = require('rimraf');\nconst less = require('gulp-less');\nconst cssmin = require('gulp-clean-css');\nconst ts = require('gulp-typescript');\nconst plumber = require('gulp-plumber');\nconst alias = require('gulp-ts-alias');\nconst aliasPath = require('@gulp-plugin/alias');\nconst mapStream = require('map-stream');\nconst { exec, execSync } = require('child_process');\n\nconst tsProject = ts.createProject('tsconfig.json');\n\nconst srcDir = ['./.debug/**/*.js', './.debug/**/*.ts', './.debug/**/*.tsx'];\nconst suiteConfig = require('./src/config.json');\nconst bizType = suiteConfig.bizType.replace(/[^a-zA-Z0-9]/gi,'');\nconst regDrawer = /<Drawer([^\\\u044F]*?)>([^\\\u044F]*?)<\\/Drawer>/g;\nconst regModal = /<Modal([^\\\u044F]*?)>([^\\\u044F]*?)<\\/Modal>/g;\ngulp.task('clean', async () => {\n  rimraf.sync('./lib');\n});\n\ngulp.task('compile-ts', () => {\n  return gulp\n    .src(srcDir)\n    .pipe(mapStream(function(file,cb){\n      var fileContents = file.contents.toString(); \n      // ---\u5728\u8FD9\u91CC\u6267\u884C\u4EFB\u4F55\u5B57\u7B26\u4E32\u64CD\u4F5C--- \n      const reg = new RegExp(`\"${bizType}\"`)\n      if (!reg.test(fileContents)) {\n        fileContents = fileContents.replace(regDrawer, function(i,j,k) {\n          return `<Drawer className=\"${bizType}\" ${j}>${k}</Drawer>`\n        });\n        fileContents = fileContents.replace(regModal, function(i,j,k) {\n          return `<Modal className=\"${bizType}\" ${j}>${k}</Modal>`\n        });\n        // -------------------- ------------------- \n        file.contents = new Buffer(fileContents); \n      }\n      cb(null,file); \n     }))\n    .pipe(aliasPath(tsProject.config))\n    .pipe(gulp.dest('.debug'))\n    .pipe(plumber())\n    .pipe(alias({ configuration: tsProject.config }))\n    .pipe(tsProject())\n    .pipe(plumber.stop())\n    .pipe(gulp.dest('lib'));\n});\n\ngulp.task('compile-less', () => {\n  return gulp\n    .src(['.debug/**/*.less'])\n    .pipe(mapStream(function(file,cb){\n      var fileContents = file.contents.toString(); \n      // ---\u5728\u8FD9\u91CC\u6267\u884C\u4EFB\u4F55\u5B57\u7B26\u4E32\u64CD\u4F5C--- \n      const reg = new RegExp(`^\\.${bizType}`)\n      if (!reg.test(fileContents)) { \n        fileContents = '.' + bizType + '{' + fileContents + '}';\n        // -------------------- ------------------- \n        file.contents = new Buffer(fileContents); \n      }\n      cb(null,file); \n     }))\n    .pipe(less())\n    .pipe(cssmin())\n    .pipe(gulp.dest('lib'));\n});\n\ngulp.task('copy-less', () => {\n  return gulp\n    .src('.debug/**/*.less', { base: '.debug' })\n    .pipe(mapStream(function(file,cb){\n      var fileContents = file.contents.toString(); \n      // ---\u5728\u8FD9\u91CC\u6267\u884C\u4EFB\u4F55\u5B57\u7B26\u4E32\u64CD\u4F5C--- \n      const reg = new RegExp(`^\\.${bizType}`)\n      if (!reg.test(fileContents)) { \n        fileContents = '.' + bizType + '{' + fileContents + '}';\n        // -------------------- ------------------- \n        file.contents = new Buffer(fileContents); \n      }\n      cb(null,file); \n     }))\n    .pipe(gulp.dest('.debug'))\n    .pipe(gulp.dest('lib'));\n});\n\ngulp.task('build',function(){\n  exec('swap build', (err, stdout, stderr) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    console.log('build success!');\n    execSync('gulp watch');\n  });\n});\n\ngulp.task('watch',function(){\n  gulp.watch([\n    './src/**/*.js', \n    './src/**/*.ts', \n    './src/**/*.tsx', \n    './src/**/*.less', \n    './src/**/*.json'\n  ], {\n    delay: 2000,\n    usePolling: true,\n    interval: 1000,\n  }, gulp.series('build'));\n});\n\ngulp.task('default', gulp.series('clean', 'compile-ts', 'compile-less', 'copy-less'));";
}
function generateGulpFile() {
    return __awaiter(this, void 0, void 0, function () {
        var gulpfilePath, buildPath, gulpfileContent, buildContent;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    gulpfilePath = './gulpfile.js';
                    buildPath = './build.json';
                    // 先删除 gulpfile 目录
                    return [4 /*yield*/, cross_spawn_1.default.sync('rm', ['-rf', gulpfilePath])];
                case 1:
                    // 先删除 gulpfile 目录
                    _a.sent();
                    return [4 /*yield*/, cross_spawn_1.default.sync('rm', ['-rf', buildPath])];
                case 2:
                    _a.sent();
                    gulpfileContent = generateGulpFileContent();
                    buildContent = generate_build_1.default();
                    if (gulpfileContent) {
                        fs_1.default.writeFileSync(gulpfilePath, gulpfileContent);
                    }
                    if (buildContent) {
                        fs_1.default.writeFileSync(buildPath, buildContent);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.generateGulpFile = generateGulpFile;
// src copy 到 .debug 下，.debug 作为 gulp src 入口
function copySrcFile() {
    return __awaiter(this, void 0, void 0, function () {
        var error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, cross_spawn_1.default.sync('cp', ['-R', "./src", "./.debug"])];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 3];
                case 2:
                    error_1 = _a.sent();
                    console.error(error_1);
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    });
}
exports.copySrcFile = copySrcFile;
// 监测tsconfig.json配置，target 必须是 es5
function checkTsConfig() {
    return __awaiter(this, void 0, void 0, function () {
        var tsconfigPath, json;
        return __generator(this, function (_a) {
            tsconfigPath = './tsconfig.json';
            try {
                json = JSON.parse(fs_1.default.readFileSync(tsconfigPath).toString());
                if (json.compilerOptions.target != 'es5') {
                    console.error('构建失败，请修改tsconfig.json，target应为 es5');
                    process.exit(0);
                }
            }
            catch (error) {
                console.error(error);
                process.exit(0);
            }
            return [2 /*return*/];
        });
    });
}
exports.checkTsConfig = checkTsConfig;
