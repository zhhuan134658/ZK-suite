"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var isArray_1 = __importDefault(require("lodash/isArray"));
var filter_1 = __importDefault(require("lodash/filter"));
var map_1 = __importDefault(require("lodash/map"));
var forEach_1 = __importDefault(require("lodash/forEach"));
var uniqBy_1 = __importDefault(require("lodash/uniqBy"));
/**
 * 生成自定义控件的代码
 */
function generateCustomFieldContent() {
    var debugPath = './.debug/runtime';
    var runtimePcPath = debugPath + "/pc.tsx";
    var runtimeMobilePath = debugPath + "/mobile.tsx";
    var configPath = './src/config.json';
    var configContent = fs_1.default.readFileSync(configPath, 'utf-8');
    try {
        var config = JSON.parse(configContent);
        var children = config.children, bizType = config.bizType;
        if (isArray_1.default(children) && children.length > 0) {
            // 找出所有自定义控件
            var tableFields_1 = [];
            var customFields_1 = filter_1.default(children, function (item) {
                var _a;
                if (item.componentName === "TableField") {
                    tableFields_1.push(item);
                }
                return ((_a = item) === null || _a === void 0 ? void 0 : _a.type) === 'custom';
            });
            // 明细组件内自定义组件
            if (tableFields_1.length) {
                forEach_1.default(tableFields_1, function (value, key) {
                    var customFieldsTable = filter_1.default(value.children, function (item) {
                        var _a;
                        return ((_a = item) === null || _a === void 0 ? void 0 : _a.type) === 'custom';
                    });
                    customFields_1 = customFields_1.concat(customFieldsTable);
                });
            }
            // 自定义组件去重
            customFields_1 = uniqBy_1.default(customFields_1, 'componentName');
            if (isArray_1.default(customFields_1) && customFields_1.length > 0) {
                // 新建 .debug/runtime
                if (!fs_1.default.existsSync(debugPath)) {
                    fs_1.default.mkdirSync(debugPath);
                }
                // 写 runtime/pc和mobile
                fs_1.default.writeFileSync(runtimePcPath, generateRuntimeSuiteRender(customFields_1, 'pc', bizType));
                fs_1.default.writeFileSync(runtimeMobilePath, generateRuntimeSuiteRender(customFields_1, 'mobile', bizType));
                // 写runtime下自定义控件
                generateCustomField(customFields_1);
            }
        }
    }
    catch (error) { }
}
exports.default = generateCustomFieldContent;
// .debug/runtime/pc & mobile
function generateRuntimeSuiteRender(customFields, type, bizType) {
    var customImport = map_1.default(customFields, function (item) {
        return "import " + item.componentName + " from \"./" + item.componentName + "/" + type + "\";";
    });
    var renderCustomFields = map_1.default(customFields, function (item) {
        var ifStr = "field.props.commonBizType === '" + item.componentName + "'";
        if (item.componentName !== item.bizAlias) {
            ifStr += " || field.props.commonBizType === '" + item.bizAlias + "'";
        }
        return "if (" + ifStr + ") {\n              return <" + item.componentName + " {...this.props}  bizAlias={field.props.bizAlias} />;\n            }";
    });
    var importContent = "import React from \"react\";\nimport SwapDemoSuite from \"@/src/runtime/" + type + "\";\nimport createReactClass from \"create-react-class\";\n" + customImport.join('\n') + "\n";
    var suiteContent = "const Suite = createReactClass({\n  mixins: [SwapDemoSuite],\n  componentWillMount() {\n    this.suiteWillMount && this.suiteWillMount();\n  },\n  componentDidMount() {\n    this.suiteDidMount && this.suiteDidMount();\n  },\n  componentDidUpdate() {\n    this.suiteDidUpdate && this.suiteDidUpdate();\n  },\n  render() {\n    if (this.suiteRender) {\n      return this.suiteRender();\n    }\n\n    return (\n      <div className=\"" + bizType.replace(/[^a-zA-Z0-9]/gi, "") + "\">\n        <div className=\"" + type + "-runtime-wrap\">\n          {this.props.form.getFields().map(field => {\n            " + renderCustomFields.join('\n') + "\n            return field.renderComponent();\n          })}\n        </div>\n      </div>\n    );\n  },\n});\n\nexport default Suite;";
    return importContent + "\n" + suiteContent;
}
function generateCustomFieldRenderContent(componentName, type) {
    var renderContent = "import FormField from '@/src/runtime/" + componentName + "/" + type + "';\nimport createReactClass from 'create-react-class';\n  \nconst Field = createReactClass({\n  mixins: [FormField],\n  componentWillMount() {\n    this.fieldWillMount && this.fieldWillMount();\n  },\n  componentDidMount() {\n    this.fieldDidMount && this.fieldDidMount();\n  },\n  componentDidUpdate() {\n    this.fieldDidUpdate && this.fieldDidUpdate();\n  },\n  render() {\n    if (this.fieldRender) {\n      return this.fieldRender();\n    }\n\n    return null;\n  },\n});\n\nexport default Field;";
    return renderContent;
}
// .debug/runtime/xxxcustomField
function generateCustomField(customFields) {
    var debugPath = './.debug/runtime';
    forEach_1.default(customFields, function (item) {
        fs_1.default.mkdirSync(debugPath + "/" + item.componentName);
        // 写自定义控件的 pc & mobile
        fs_1.default.writeFileSync(debugPath + "/" + item.componentName + "/pc.tsx", generateCustomFieldRenderContent(item.componentName, 'pc'));
        fs_1.default.writeFileSync(debugPath + "/" + item.componentName + "/mobile.tsx", generateCustomFieldRenderContent(item.componentName, 'mobile'));
    });
}
