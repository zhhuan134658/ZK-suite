"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_extra_1 = __importDefault(require("fs-extra"));
var path_1 = __importDefault(require("path"));
var chalk_1 = __importDefault(require("chalk"));
var red = chalk_1.default.red;
function generate(name, packageInfo) {
    var packageFile = path_1.default.resolve(name, 'package.json');
    var readmeFile = path_1.default.resolve(name, 'README.md');
    try {
        var data = fs_extra_1.default.readFileSync(packageFile, 'utf-8');
        var pkg = JSON.parse(data);
        pkg.author = packageInfo.author;
        pkg.license = packageInfo.license;
        pkg.repository = { type: 'git', url: packageInfo.repository };
        pkg.bugs = { url: packageInfo.repository + "/issues" };
        pkg.homepage = packageInfo.repository + "#readme";
        // if (pkg.module) pkg.module = `dist/${packageInfo.name}.mjs`;
        // if (pkg['umd:main']) pkg['umd:main'] = `dist/${packageInfo.name}.js`;
        // if (pkg.main) pkg.main = `dist/${packageInfo.name}.js`;
        fs_extra_1.default.writeFileSync(packageFile, JSON.stringify(pkg, null, 2), 'utf-8');
        // fs.writeFileSync(
        //   readmeFile,
        //   `# ${packageInfo.name}${os.EOL}${packageInfo.description}`,
        //   'utf-8',
        // );
    }
    catch (error) {
        console.log(red("Fail to generate: " + error.message));
        process.exit(1);
    }
}
exports.default = generate;
