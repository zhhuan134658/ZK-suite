"use strict";

exports.__esModule = true;
exports.saveImage = exports.previewImage = exports.getImageInfo = exports.default = exports.compressImage = exports.chooseImage = void 0;

var _env = require("@uni/env");

var _index = _interopRequireDefault(require("./ali-miniapp/index"));

var _index2 = _interopRequireDefault(require("./web/index"));

var _index3 = _interopRequireDefault(require("./wechat-miniprogram/index"));

var _index4 = _interopRequireDefault(require("./bytedance-microapp/index"));

var _index5 = _interopRequireDefault(require("./kuaishou-miniprogram/index"));

var _index6 = _interopRequireDefault(require("./baidu-smartprogram/index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var chooseImage = function chooseImage(args) {
  if (_env.isWeb) {
    return _index2.default.chooseImage(args);
  } else if (_env.isKuaiShouMiniProgram) {
    return _index5.default.chooseImage(args);
  } else if (_env.isWeChatMiniProgram) {
    return _index3.default.chooseImage(args);
  } else if (_env.isByteDanceMicroApp) {
    return _index4.default.chooseImage(args);
  } else if (_env.isMiniApp) {
    return _index.default.chooseImage(args);
  } else if (_env.isBaiduSmartProgram) {
    return _index6.default.chooseImage(args);
  } else {
    throw new Error('Uni API：chooseImage暂不支持');
  }
};

exports.chooseImage = chooseImage;

var compressImage = function compressImage(args) {
  if (_env.isWeb) {
    return _index2.default.compressImage();
  } else if (_env.isKuaiShouMiniProgram) {
    return _index5.default.compressImage(args);
  } else if (_env.isWeChatMiniProgram) {
    return _index3.default.compressImage(args);
  } else if (_env.isByteDanceMicroApp) {
    return _index4.default.compressImage(args);
  } else if (_env.isMiniApp) {
    return _index.default.compressImage(args);
  } else if (_env.isBaiduSmartProgram) {
    return _index6.default.compressImage(args);
  } else {
    throw new Error('Uni API：compressImage暂不支持');
  }
};

exports.compressImage = compressImage;

var getImageInfo = function getImageInfo(args) {
  if (_env.isWeb) {
    return _index2.default.getImageInfo(args);
  } else if (_env.isKuaiShouMiniProgram) {
    return _index5.default.getImageInfo(args);
  } else if (_env.isWeChatMiniProgram) {
    return _index3.default.getImageInfo(args);
  } else if (_env.isByteDanceMicroApp) {
    return _index4.default.getImageInfo(args);
  } else if (_env.isMiniApp) {
    return _index.default.getImageInfo(args);
  } else if (_env.isBaiduSmartProgram) {
    return _index6.default.getImageInfo(args);
  } else {
    throw new Error('Uni API：getImageInfo暂不支持');
  }
};

exports.getImageInfo = getImageInfo;

var previewImage = function previewImage(args) {
  if (_env.isWeb) {
    return _index2.default.previewImage(args);
  } else if (_env.isKuaiShouMiniProgram) {
    return _index5.default.previewImage(args);
  } else if (_env.isWeChatMiniProgram) {
    return _index3.default.previewImage(args);
  } else if (_env.isByteDanceMicroApp) {
    return _index4.default.previewImage(args);
  } else if (_env.isMiniApp) {
    return _index.default.previewImage(args);
  } else if (_env.isBaiduSmartProgram) {
    return _index6.default.previewImage(args);
  } else {
    throw new Error('Uni API：previewImage暂不支持');
  }
};

exports.previewImage = previewImage;

var saveImage = function saveImage(args) {
  if (_env.isWeb) {
    return _index2.default.saveImage();
  } else if (_env.isKuaiShouMiniProgram) {
    return _index5.default.saveImage(args);
  } else if (_env.isWeChatMiniProgram) {
    return _index3.default.saveImage(args);
  } else if (_env.isByteDanceMicroApp) {
    return _index4.default.saveImage(args);
  } else if (_env.isMiniApp) {
    return _index.default.saveImage(args);
  } else if (_env.isBaiduSmartProgram) {
    return _index6.default.saveImage(args);
  } else {
    throw new Error('Uni API：saveImage暂不支持');
  }
};

exports.saveImage = saveImage;
var _default = {
  chooseImage: chooseImage,
  compressImage: compressImage,
  getImageInfo: getImageInfo,
  previewImage: previewImage,
  saveImage: saveImage
};
exports.default = _default;