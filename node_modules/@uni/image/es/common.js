function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { promisify } from "./_utils/promisify";
import { styleIn } from "./_utils/styleOptions";
export var normalize = {
  chooseImage: function chooseImage(api, containerName) {
    var formatResponse = function formatResponse(res) {
      return _extends({}, res, {
        tempFiles: res.tempFiles || res.files,
        tempFilePaths: res.tempFilePaths
      });
    };

    return function (args) {
      args = styleIn(args, containerName);
      return promisify(api)(_extends({}, args, {
        count: args.count || 1,
        success: function success(res) {
          args.success && args.success(formatResponse(res));
        },
        complete: function complete(res) {
          args.complete && args.complete(res);
        }
      })).then(formatResponse);
    };
  },
  compressImage: function compressImage(api, containerName) {
    var formatResponse = function formatResponse(res) {
      return {
        tempFilePath: res.tempFilePath || (res.filePaths || [])[0] || (res.apFilePaths || [])[0] || ''
      };
    };

    return function (args) {
      args = styleIn(args, containerName);
      return promisify(api)(_extends({}, args, {
        success: function success(res) {
          args.success && args.success(formatResponse(res));
        },
        complete: function complete(res) {
          args.complete && args.complete(res);
        }
      })).then(formatResponse);
    };
  },
  getImageInfo: function getImageInfo(api, containerName) {
    return function (args) {
      return promisify(api)(styleIn(args, containerName));
    };
  },
  previewImage: function previewImage(api, containerName) {
    return function (args) {
      return promisify(api)(styleIn(args, containerName));
    };
  },
  saveImage: function saveImage(api, containerName) {
    return function (args) {
      return promisify(api)(styleIn(args, containerName));
    };
  }
};