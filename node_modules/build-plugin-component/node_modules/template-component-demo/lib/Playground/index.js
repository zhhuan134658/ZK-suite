"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.Playground = void 0;

var _react = _interopRequireDefault(require("react"));

var _CodeBox = require("./CodeBox");

require("./index.css");

var Playground = function Playground(_ref) {
  var data = _ref.data,
      children = _ref.children;
  var filename = data.filename,
      meta = data.meta,
      highlightedCode = data.highlightedCode,
      highlightedStyle = data.highlightedStyle,
      markdownContent = data.markdownContent,
      readme = data.readme; // add style scope

  var htmlContent = markdownContent || '';
  var matchCss = htmlContent.match(/<style>([\s\S]*?)<\/style>/);

  if (matchCss) {
    var matchContent = matchCss[1];
    var replaceContent = matchContent.split('}').map(function (content) {
      var cssContent = content;

      if (content[0] === '.') {
        cssContent = "#" + filename + " " + cssContent;
      }

      return "" + cssContent;
    }).join('}');
    htmlContent = htmlContent.replace(matchContent, replaceContent);
  }

  return /*#__PURE__*/_react["default"].createElement("div", null, renderMeta(meta), renderReadMe(readme), /*#__PURE__*/_react["default"].createElement("div", {
    className: "preview"
  }, renderMarkdownContent(htmlContent), /*#__PURE__*/_react["default"].createElement(_CodeBox.CodeBox, {
    filename: filename,
    highlightedCode: highlightedCode,
    highlightedStyle: highlightedStyle
  }, children)));
};
/**
 * 渲染 README 文档
 */


exports.Playground = Playground;

function renderReadMe(readme) {
  if (readme === void 0) {
    readme = undefined;
  }

  if (!readme) return null;
  return renderMarkdownContent(readme);
}
/** 渲染 Meta 元素 */


function renderMeta(meta) {
  if (!meta) return null;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "meta"
  }, /*#__PURE__*/_react["default"].createElement("ul", {
    className: "meta-list"
  }, meta.map(function (item) {
    return /*#__PURE__*/_react["default"].createElement("li", {
      className: "meta-item"
    }, item.key, ": ", item.value);
  })));
}
/** 渲染MarkDown内容 */


function renderMarkdownContent(markdownContent) {
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "markdown",
    dangerouslySetInnerHTML: {
      __html: markdownContent
    }
  });
}