"use strict";

exports.__esModule = true;
exports.warnForReplacedHydratebleElement = warnForReplacedHydratebleElement;
exports.warnForDeletedHydratableElement = warnForDeletedHydratableElement;
exports.warnForInsertedHydratedElement = warnForInsertedHydratedElement;
exports.warning = void 0;
var didWarnInvalidHydration = false;

var __DEV__ = process.env.NODE_ENV !== 'production';

function warnForReplacedHydratebleElement(parentNode, clientNode, serverNode) {
  if (__DEV__) {
    if (didWarnInvalidHydration) {
      return;
    } // should not warn for replace comment, bescause it may be a placeholder from server


    if (serverNode.nodeType === 8) {
      return;
    }

    didWarnInvalidHydration = true;
    warning('Expected server HTML to contain a matching %s in %s, but got %s.', getNodeName(clientNode), getNodeName(parentNode), getNodeName(serverNode));
  }
}

function warnForDeletedHydratableElement(parentNode, child) {
  if (__DEV__) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warning('Did not expect server HTML to contain a %s in %s.', getNodeName(child), getNodeName(parentNode));
  }
}

function warnForInsertedHydratedElement(parentNode, node) {
  if (__DEV__) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    warning('Expected server HTML to contain a matching %s in %s.', getNodeName(node), getNodeName(parentNode));
  }
}
/**
 * Concat tagName„ÄÅ id and class info to help locate a node
 * @param {*} node HTMLElement
 * @returns {string} for example: <div#home.rax-view.home>
 */


function getNodeName(node) {
  // text node don`t have tagName
  if (!node.tagName) {
    return node.nodeName;
  }

  var name = node.tagName.toLowerCase();
  var id = node.id ? '#' + node.id : '';
  var classStr = node.className || '';
  var classList = classStr.split(' ').map(function (className) {
    return className ? '.' + className : '';
  });
  return "<" + name + id + classList.join('') + ">";
}

var warning = function warning() {};

exports.warning = warning;

if (process.env.NODE_ENV !== 'production') {
  exports.warning = warning = function warning(template) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + template); // Don't use spread (or .apply) directly because it breaks IE9

      Function.prototype.apply.call(console.error, console, argsWithFormat);
    } // For works in DevTools when enable `Pause on caught exceptions`
    // that can find the component where caused this warning


    try {
      var argIndex = 0;
      var message = 'Warning: ' + template.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (e) {}
  };
}