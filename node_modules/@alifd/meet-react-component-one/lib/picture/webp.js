"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSupport = isSupport;

var _universalEnv = require("universal-env");

var isIOS;

if (!_universalEnv.isWeex && !_universalEnv.isNode && !_universalEnv.isMiniApp && !_universalEnv.isWeChatMiniProgram) {
  isIOS = !!navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/);
}

function setLocalStorage(isSupport, type) {
  if (window.localStorage && typeof window.localStorage.setItem === 'function') {
    try {
      window.localStorage.setItem('webpsupport-' + type, isSupport + '');
    } catch (e) {}
  }
}

function isSupportTest(callback, type) {
  if ('function' !== typeof callback) return;
  var img = new Image();

  img.onload = function () {
    var is = img.width > 0 && img.height > 0;
    setLocalStorage(is, type);
    callback(is);
  };

  img.onerror = function () {
    setLocalStorage(false, type);
    callback(false);
  };

  img.src = '//gw.alicdn.com/mt/TB11KmBXwoQMeJjy0FoXXcShVXa-1-1.png_.webp';
}

function isSupport(callback) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'lossy';

  if ('function' === typeof callback) {
    if (_universalEnv.isMiniApp || _universalEnv.isWeChatMiniProgram) {
      callback(true);
    } else if (_universalEnv.isWeex || window.navigator.userAgent.match(/PHA/)) {
      callback(true);
    } else if (window.navigator.userAgent.match(/windows|win32/i) || isIOS && window.navigator.userAgent.match(/UCBrowser/i)) {
      callback(false);
    } else if (window.chrome || window.opera) {
      callback(true);
    } else {
      var val = window.localStorage && window.localStorage.getItem('webpsupport-' + type);

      if (val) {
        callback(val == 'true');
      } else {
        isSupportTest(callback, type);
      }
    }
  }
}