"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _view = _interopRequireDefault(require("../../view"));

var _BaseList2 = _interopRequireDefault(require("./BaseList"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function (o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var cacheOffset = 0;

var NestedList = /*#__PURE__*/function (_BaseList) {
  _inherits(NestedList, _BaseList);

  var _super = _createSuper(NestedList);

  function NestedList() {
    var _this;

    _classCallCheck(this, NestedList);

    _this = _super.apply(this, arguments);
    _this.state = {
      offset: 0
    };

    _this.handleScroll = function (event) {
      var detail = event.detail;
      var offset = detail.offset;
      var active = _this.props.active;
      cacheOffset = offset;

      if (active) {
        _this.setState({
          offset: offset,
          scrollChangeReason: _constants.SCROLL_CHANGE_REASON.OBSERVED
        });
      }
    };

    return _this;
  }

  _createClass(NestedList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener('recyclerViewScroll', this.handleScroll);
    }
  }, {
    key: "componentWillUnMount",
    value: function componentWillUnMount() {
      window.removeEventListener('recyclerViewScroll', this.handleScroll);
    }
  }, {
    key: "render",
    value: function render() {
      var className = this.props.className;

      var _this$getRenderProps = this.getRenderProps(Object.assign(Object.assign({}, this.props), {
        offset: cacheOffset
      })),
          innerStyle = _this$getRenderProps.innerStyle,
          nodeItems = _this$getRenderProps.nodeItems,
          wrapperStyle = _this$getRenderProps.wrapperStyle;

      return React.createElement(_view["default"], {
        ref: this.getRef,
        style: wrapperStyle,
        className: className
      }, React.createElement(_view["default"], {
        style: innerStyle
      }, nodeItems));
    }
  }]);

  return NestedList;
}(_BaseList2["default"]);

exports["default"] = NestedList;