import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import View from '../../view';
import BaseList from './BaseList';
import { SCROLL_CHANGE_REASON } from './constants';
var cacheOffset = 0;

var NestedList = /*#__PURE__*/function (_BaseList) {
  _inherits(NestedList, _BaseList);

  var _super = _createSuper(NestedList);

  function NestedList() {
    var _this;

    _classCallCheck(this, NestedList);

    _this = _super.apply(this, arguments);
    _this.state = {
      offset: 0
    };

    _this.handleScroll = function (event) {
      var detail = event.detail;
      var offset = detail.offset;
      var active = _this.props.active;
      cacheOffset = offset;

      if (active) {
        _this.setState({
          offset: offset,
          scrollChangeReason: SCROLL_CHANGE_REASON.OBSERVED
        });
      }
    };

    return _this;
  }

  _createClass(NestedList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener('recyclerViewScroll', this.handleScroll);
    }
  }, {
    key: "componentWillUnMount",
    value: function componentWillUnMount() {
      window.removeEventListener('recyclerViewScroll', this.handleScroll);
    }
  }, {
    key: "render",
    value: function render() {
      var className = this.props.className;

      var _this$getRenderProps = this.getRenderProps(Object.assign(Object.assign({}, this.props), {
        offset: cacheOffset
      })),
          innerStyle = _this$getRenderProps.innerStyle,
          nodeItems = _this$getRenderProps.nodeItems,
          wrapperStyle = _this$getRenderProps.wrapperStyle;

      return React.createElement(View, {
        ref: this.getRef,
        style: wrapperStyle,
        className: className
      }, React.createElement(View, {
        style: innerStyle
      }, nodeItems));
    }
  }]);

  return NestedList;
}(BaseList);

export { NestedList as default };