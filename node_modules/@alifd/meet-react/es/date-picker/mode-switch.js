function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { __rest } from "tslib";
import React, { createElement } from "react";
import classNames from 'classnames';
import { View, Text } from "@alifd/meet-react-component-one";
import Icon from '../icon';

var DateTimePicker = function DateTimePicker(props) {
  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      defaultValue = props.defaultValue,
      value = props.value,
      _props$defaultText = props.defaultText,
      defaultText = _props$defaultText === void 0 ? '选择具体时间' : _props$defaultText,
      _props$reverseText = props.reverseText,
      reverseText = _props$reverseText === void 0 ? '返回选择日期' : _props$reverseText,
      onChange = props.onChange,
      others = __rest(props, ["prefix", "defaultValue", "value", "defaultText", "reverseText", "onChange"]);

  var clsPrefix = "".concat(prefix, "datepicker");
  var clses = {
    timeSelectTrigger: "".concat(clsPrefix, "-mode-switch")
  };
  return /*#__PURE__*/React.createElement(View, _extends({}, others, {
    className: clses.timeSelectTrigger,
    onClick: onChange
  }), /*#__PURE__*/React.createElement(Icon, {
    type: "arrow-left",
    size: "xs",
    className: classNames(_defineProperty({}, "".concat(clsPrefix, "-hide-icon"), value === 'default'))
  }), /*#__PURE__*/React.createElement(Text, null, value === 'default' ? defaultText : reverseText), /*#__PURE__*/React.createElement(Icon, {
    type: "arrow-right",
    size: "xs",
    className: classNames(_defineProperty({}, "".concat(clsPrefix, "-hide-icon"), value === 'reverse'))
  }));
};

export default DateTimePicker;