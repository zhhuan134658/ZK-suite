function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { __rest } from "tslib";
import React, { createElement } from "react";
import classNames from 'classnames';
import View from '../view';

var SafeArea = function SafeArea(props) {
  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      className = props.className,
      style = props.style,
      others = __rest(props, ["prefix", "className", "style"]);

  return /*#__PURE__*/React.createElement(View, _extends({}, others, {
    className: classNames("".concat(prefix, "safe-area"), className)
  }));
};

SafeArea.displayName = 'SafeArea';
export default SafeArea;