function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { __rest } from "tslib";
import classNames from 'classnames';
import React, { createElement, forwardRef, Fragment } from "react";
import Icon from '../../icon';
import View from '../../view';

var Media = function Media(props, ref) {
  var action = props.action,
      _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      icon = props.icon,
      children = props.children,
      className = props.className,
      others = __rest(props, ["action", "prefix", "icon", "children", "className"]);

  return /*#__PURE__*/React.createElement(View, _extends({
    ref: ref
  }, others, {
    className: classNames("".concat(prefix, "list-item-media"), action ? "".concat(prefix, "list-item-media--last") : null, className)
  }), icon ? /*#__PURE__*/React.createElement(Icon, {
    className: "".concat(prefix, "list-item-icon"),
    name: icon
  }) : null, /*#__PURE__*/React.createElement(Fragment, null, children));
};

export var ListItemMedia = /*#__PURE__*/forwardRef(Media);

var Action = function Action(props, ref) {
  return /*#__PURE__*/React.createElement(ListItemMedia, _extends({}, props, {
    action: true,
    ref: ref
  }));
};

export var ListItemAction = /*#__PURE__*/forwardRef(Action);
export default ListItemMedia;