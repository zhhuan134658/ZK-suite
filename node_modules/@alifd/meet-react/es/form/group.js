function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { __rest } from "tslib";
import classNames from 'classnames';
import React, { createElement, forwardRef } from "react";
import List from '../list';
import View from '../view';

var FormGroup = function FormGroup(props, ref) {
  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      className = props.className,
      children = props.children,
      other = __rest(props, ["prefix", "className", "children"]);

  return /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefix, "form-group")
  }, /*#__PURE__*/React.createElement(List, _extends({}, other, {
    className: classNames("".concat(prefix, "form-group-list"), className)
  }), children));
};

export default /*#__PURE__*/forwardRef(FormGroup);