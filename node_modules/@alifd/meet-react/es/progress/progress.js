function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { __rest } from "tslib";
import React, { createElement, forwardRef } from "react";
import CircleProgress from './circle';
import LinearProgress from './linear';

var Progress = function Progress(_a, ref) {
  var _a$shape = _a.shape,
      shape = _a$shape === void 0 ? 'line' : _a$shape,
      others = __rest(_a, ["shape"]);

  return shape === 'line' ? /*#__PURE__*/React.createElement(LinearProgress, _extends({}, others, {
    ref: ref
  })) : /*#__PURE__*/React.createElement(CircleProgress, _extends({}, others, {
    ref: ref
  }));
};

Progress.displayName = 'Progress';
export default /*#__PURE__*/forwardRef(Progress);