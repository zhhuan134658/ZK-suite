function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { createElement, forwardRef } from "react";
import { useLocale } from './hooks';
export default function withLocale(Component, _ref) {
  var name = _ref.name,
      defaultLocale = _ref.defaultLocale;
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var locale = useLocale(name, props, defaultLocale);
    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {
      locale: locale,
      ref: ref
    }));
  });
}