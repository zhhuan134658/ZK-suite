"use strict";

exports.__esModule = true;
exports.default = void 0;

var _field = _interopRequireDefault(require("@alifd/field"));

var _react = _interopRequireWildcard(require("react"));

var _element = _interopRequireDefault(require("./element"));

exports.FieldElement = _element.default;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function (o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function processErrorMessage(element) {
  if (element && (0, _react.isValidElement)(element)) {
    return (0, _react.cloneElement)(element, {
      key: 'error'
    });
  } else if (element && typeof element !== 'string') {
    element = element.message;
  }

  return element;
}

var MeetField = /*#__PURE__*/function (_Field) {
  _inheritsLoose(MeetField, _Field);

  MeetField.useField = function useField(options) {
    return this.getUseField({
      useState: _react.useState,
      useMemo: _react.useMemo
    })(options);
  };

  function MeetField(contextComp, options) {
    var _this;

    var newOptions = Object.assign({
      processErrorMessage: processErrorMessage
    }, options);
    _this = _Field.call(this, contextComp, newOptions) || this;
    _this.validate = _this.validate.bind(_assertThisInitialized(_this));
    return _this;
  }

  var _proto = MeetField.prototype;

  _proto.validatePromise = function validatePromise(names, callback) {
    var _this2 = this;

    return new Promise(function (resolve, reject) {
      _Field.prototype.validatePromise.call(_this2, names, callback).then(function (result) {
        if (_this2.afterValidateRerender) {
          _this2.afterValidateRerender({
            errorsGroup: _this2.getErrors(),
            options: _this2.options,
            instance: _this2.instance
          });
        }

        resolve(result);
      }).catch(reject);
    });
  };

  _proto.validate = function validate(names, callback) {
    return this.validatePromise(names, callback);
  };

  return MeetField;
}(_field.default);

exports.default = MeetField;