"use strict";

exports.__esModule = true;
exports.default = void 0;

var _babelRuntimeJsxStyleTransform = require("babel-runtime-jsx-style-transform");

var _tslib = require("tslib");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _view = _interopRequireDefault(require("../view"));

var _utils = require("./utils");

var _utils2 = require("../utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var LinearProgress = function (props, ref) {
  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      _props$percent = props.percent,
      percent = _props$percent === void 0 ? 0 : _props$percent,
      color = props.color,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size,
      backgroundColor = props.backgroundColor,
      _props$progressive = props.progressive,
      progressive = _props$progressive === void 0 ? false : _props$progressive,
      _props$state = props.state,
      state = _props$state === void 0 ? 'normal' : _props$state,
      className = props.className,
      others = (0, _tslib.__rest)(props, ["prefix", "percent", "color", "size", "backgroundColor", "progressive", "state", "className"]);
  var trackStyle = {
    height: (0, _utils.progressSize)(size),
    backgroundColor: (0, _utils.progressBackgroundColor)(backgroundColor)
  };
  var barStyle = {
    height: (0, _utils.progressSize)(size),
    backgroundColor: function progressiveColorEnabled() {
      if (progressive) {
        return (0, _utils.progressiveColor)(percent);
      } else {
        return color || (0, _utils.statusColor)(state);
      }
    }(),
    width: percent + "%"
  };

  if ((0, _utils2.isNumber)(size) && size > 0) {
    var borderRadiusVal = size / 2 + "rpx";
    trackStyle.borderRadius = borderRadiusVal;
    barStyle.borderRadius = borderRadiusVal;
  }

  var clsPrefix = prefix + "progress";
  return /*#__PURE__*/(0, _react.createElement)(_view.default, _extends({
    ref: ref
  }, others, {
    className: (0, _classnames.default)(clsPrefix, clsPrefix + "-line--" + size, clsPrefix + "-line-" + size + "-corner", className)
  }), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: (0, _classnames.default)(clsPrefix + "-track", clsPrefix + "-line-" + size + "-corner"),
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(trackStyle)
  }, /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: (0, _classnames.default)(clsPrefix + "-line-bar", clsPrefix + "-line-" + size + "-corner"),
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)(barStyle)
  })));
};

var _default = /*#__PURE__*/(0, _react.forwardRef)(LinearProgress);

exports.default = _default;