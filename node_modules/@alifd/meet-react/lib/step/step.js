"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _meetReactComponentOne = require("@alifd/meet-react-component-one");

var _universalElement = require("universal-element");

var _utils = require("../utils");

var _hooks = require("../utils/hooks");

var _view = _interopRequireDefault(require("../view"));

var _item = _interopRequireDefault(require("./item"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getCurrent = function (props) {
  var current = props.current,
      children = props.children;

  var childCount = _react.Children.count(children);

  var newCurrent = current;

  if (isNaN(current) || current < -1) {
    newCurrent = -1;
  } else if (current > childCount) {
    newCurrent = childCount - 1;
  }

  return newCurrent;
};

var Step = function (props, ref) {
  var _classNames, _classNames2;

  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      _props$shape = props.shape,
      shape = _props$shape === void 0 ? 'circle' : _props$shape,
      children = props.children,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$readOnly = props.readOnly,
      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,
      _props$direction = props.direction,
      directionProp = _props$direction === void 0 ? 'hoz' : _props$direction,
      className = props.className,
      onChange = props.onChange;
  var clsPrefix = prefix + "step";
  var direction = shape === 'arrow' ? 'hoz' : directionProp;

  var _useState = (0, _react.useState)(false),
      isOverflow = _useState[0],
      setOverflow = _useState[1];

  var clses = {
    step: (0, _classnames.default)(className, "" + clsPrefix, (_classNames = {}, _classNames[clsPrefix + "--scroll"] = isOverflow, _classNames[clsPrefix + "--wechat-" + shape] = _utils.isStrictWechatMiniProgram && direction === 'hoz', _classNames)),
    container: (0, _classnames.default)(clsPrefix + "-container", clsPrefix + "-container--" + direction, (_classNames2 = {}, _classNames2[clsPrefix + "-container--scroll"] = isOverflow, _classNames2))
  };
  var validChildren = _react.Children.toArray(children).filter(function (child) {
    return (0, _react.isValidElement)(child) && child.type === _item.default;
  }) || [];
  var childrenCount = validChildren.length;
  var current = getCurrent(props);
  var disabledIndexes = validChildren.map(function (child, index) {
    return disabled || (0, _utils.get)(child, 'props.disabled') ? index : null;
  }).filter(function (item) {
    return item !== null;
  });
  var stepId = (0, _hooks.useGuid)('step-');
  var stepContainerId = (0, _hooks.useGuid)('step-container-');
  var Parent = direction === 'hoz' ? _meetReactComponentOne.ScrollView : _view.default;

  if (shape === 'arrow' && directionProp === 'ver') {
    console.warn('arrow shape support hoz direction only');
  }

  (0, _react.useEffect)(function () {
    (function () {
      return (0, _tslib.__awaiter)(void 0, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var width, containerWidth, ele;
        return regeneratorRuntime.wrap(function (_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return (0, _utils.getWidth)(stepId);

              case 2:
                width = _context.sent;
                _context.next = 5;
                return (0, _utils.getWidth)(stepContainerId);

              case 5:
                containerWidth = _context.sent;

                if (_utils.isStrictWechatMiniProgram) {
                  ele = document.getElementById(stepContainerId);

                  if (ele && ele._internal) {
                    (0, _universalElement.getBoundingClientRect)("#" + stepId, ele._internal).then(function (res) {
                      if (res && res[0] && res[0].width) {
                        var w = res[0].width;
                        setOverflow(w >= containerWidth);
                      }
                    });
                  }
                } else {
                  setOverflow(width >= containerWidth);
                }

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    })();
  });
  return /*#__PURE__*/(0, _react.createElement)(Parent, {
    id: stepContainerId,
    ref: ref,
    className: clses.step,
    horizontal: true
  }, /*#__PURE__*/(0, _react.createElement)(_view.default, {
    id: stepId,
    className: clses.container
  }, function renderChildren() {
    return validChildren.map(function (child, index) {
      var childProps = child.props;
      var childDisabled = childProps.disabled,
          childStatusProp = childProps.status,
          childClassName = childProps.className,
          childOnClick = childProps.onClick,
          others = (0, _tslib.__rest)(childProps, ["disabled", "status", "className", "onClick"]);
      var status = childStatusProp;

      if (!childStatusProp) {
        status = 'wait';

        if (index === current) {
          status = 'process';
        } else if (index < current) {
          status = 'finish';
        }
      }

      return (0, _react.cloneElement)(child, Object.assign(Object.assign({
        key: "mt_step_" + index
      }, others), {
        order: index,
        isFirst: index === 0,
        isLast: index === childrenCount - 1,
        isPreDisabled: disabledIndexes.indexOf(index - 1) > -1,
        shape: shape,
        direction: direction,
        status: status,
        prefix: prefix,
        onClick: function onClick() {
          if (childOnClick) {
            childOnClick(index);
          }

          if (onChange && !readOnly && !disabled && !childDisabled) {
            onChange(index);
          }
        },
        className: (0, _classnames.default)(childClassName, clsPrefix + "-item--" + direction)
      }));
    });
  }()));
};

Step.displayName = 'Step';

var _default = /*#__PURE__*/(0, _react.forwardRef)(Step);

exports.default = _default;