"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _calendar = _interopRequireDefault(require("../../calendar"));

var _form = require("../../form");

var _view = _interopRequireDefault(require("../../view"));

var _locale = require("../../locale");

var _selectDrawer = _interopRequireDefault(require("../../select-drawer"));

var _utils = require("../../time-picker/utils");

var _utils2 = require("../../utils");

var _date = require("../../utils/date");

var _dateTimePicker = _interopRequireDefault(require("../embed-picker/date-time-picker"));

var _utils3 = require("../embed-picker/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function (o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var RangePicker = /*#__PURE__*/function (_Component) {
  _inheritsLoose(RangePicker, _Component);

  function RangePicker(props) {
    var _this = _Component.call(this, props) || this;

    _this.state = {
      step: 0,
      value: props.value || props.defaultValue || null,
      pickerValue: _this.getPickerValue(props)
    };
    _this.scrolling = false;
    _this.doScroll = _this.doScroll.bind(_assertThisInitialized(_this));
    _this.handleOk = _this.handleOk.bind(_assertThisInitialized(_this));
    _this.handleClear = _this.handleClear.bind(_assertThisInitialized(_this));
    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_this));
    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
    _this.handleVisibleChange = _this.handleVisibleChange.bind(_assertThisInitialized(_this));
    return _this;
  }

  var _proto = RangePicker.prototype;

  _proto.getPickerValue = function getPickerValue(props) {
    if (this.state && this.state.value) {
      return this.state.value;
    }

    var today = new Date();
    return props.value || props.defaultValue || [today, new Date(today.getTime() + 86400000)];
  };

  _proto.handleChange = function handleChange(pickerValue) {
    this.setState({
      pickerValue: pickerValue
    });
  };

  _proto.handleOneChange = function handleOneChange(index, value) {
    var pickerValue = index === 0 ? [value] : [this.state.pickerValue[0], value];
    this.setState({
      pickerValue: pickerValue
    });
  };

  _proto.doScroll = function doScroll(to) {
    return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var _this2 = this;

      return regeneratorRuntime.wrap(function (_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(this.scrolling || this.state.step === to)) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return");

            case 2:
              this.setState({
                step: to
              });
              this.scrolling = true;
              setTimeout(function () {
                return _this2.scrolling = false;
              }, 200);

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
  };

  _proto.handleOk = function handleOk() {
    var _this$props = this.props,
        onOk = _this$props.onOk,
        showTime = _this$props.showTime,
        onChange = _this$props.onChange;
    var value = this.state.pickerValue;

    if (this.state.step === 0 && showTime) {
      this.setState({
        pickerValue: [this.state.pickerValue[0], this.state.pickerValue[0]]
      });
      this.doScroll(1);
      return false;
    }

    if (value.length === 1) {
      return;
    }

    if (!('value' in this.props)) {
      this.setState({
        value: value
      });
    }

    if (onChange) {
      onChange(value);
    }

    if (onOk) {
      onOk(value);
    }
  };

  _proto.handleVisibleChange = function handleVisibleChange(to) {
    var _this$props2 = this.props,
        onVisibleChange = _this$props2.onVisibleChange,
        showTime = _this$props2.showTime;

    if (onVisibleChange) {
      onVisibleChange(to);
    }

    if (to && showTime) {
      this.doScroll(0);
    }
  };

  _proto.handleCancel = function handleCancel(reason) {
    return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
      var step, _this$props3, showTime, onCancel;

      return regeneratorRuntime.wrap(function (_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              step = this.state.step;
              _this$props3 = this.props, showTime = _this$props3.showTime, onCancel = _this$props3.onCancel;

              if (!(step === 1 && showTime)) {
                _context2.next = 6;
                break;
              }

              _context2.next = 5;
              return this.doScroll(0);

            case 5:
              return _context2.abrupt("return", false);

            case 6:
              if ((0, _utils2.isFunction)(onCancel)) {
                onCancel(reason);
              }

              this.setState({
                pickerValue: this.getPickerValue(this.props)
              });

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));
  };

  _proto.handleClear = function handleClear() {
    var _this$props4 = this.props,
        onClear = _this$props4.onClear,
        onChange = _this$props4.onChange;

    if (!('value' in this.props)) {
      this.setState({
        value: null
      });
    }

    if (onClear) {
      onClear();
    }

    if (onChange) {
      onChange(null);
    }
  };

  _proto.componentDidUpdate = function componentDidUpdate() {
    var _a, _b;

    if ('value' in this.props) {
      var _this$props5 = this.props,
          value = _this$props5.value,
          defaultValue = _this$props5.defaultValue;
      var newValue = value || defaultValue;

      if (!newValue && this.state.value) {
        this.setState({
          value: null
        });
        return;
      }

      if (!Array.isArray(newValue) || newValue === this.state.value) {
        return;
      }

      var d1 = (0, _date.toDate)(newValue[0]);
      var d2 = (0, _date.toDate)(newValue[1]);

      if (!(0, _date.isValidDate)(d1) || !(0, _date.isValidDate)(d2)) {
        return;
      }

      var newValueDate = [d1, d2];

      if (!this.state.value) {
        this.setState({
          value: newValueDate,
          pickerValue: newValueDate
        });
        return;
      }

      if (d1.getTime() === ((_a = (0, _date.toDate)(this.state.value[0])) === null || _a === void 0 ? void 0 : _a.getTime()) && d2.getTime() === ((_b = (0, _date.toDate)(this.state.value[1])) === null || _b === void 0 ? void 0 : _b.getTime())) {
        return;
      }

      this.setState({
        value: newValueDate,
        pickerValue: newValueDate
      });
    }
  };

  _proto.render = function render() {
    var _this3 = this;

    var _this$state = this.state,
        value = _this$state.value,
        step = _this$state.step,
        _this$state$pickerVal = _this$state.pickerValue,
        pickerValue = _this$state$pickerVal === void 0 ? [] : _this$state$pickerVal;
    var _a = this.props,
        _a$prefix = _a.prefix,
        prefix = _a$prefix === void 0 ? 'mt-' : _a$prefix,
        iconType = _a.iconType,
        placeholder = _a.placeholder,
        alignProp = _a.align,
        sizeProp = _a.size,
        disabled = _a.disabled,
        readOnly = _a.readOnly,
        hasClear = _a.hasClear,
        showTime = _a.showTime,
        validRange = _a.validRange,
        locale = _a.locale,
        disabledDate = _a.disabledDate,
        others = (0, _tslib.__rest)(_a, ["prefix", "iconType", "placeholder", "align", "size", "disabled", "readOnly", "hasClear", "showTime", "validRange", "locale", "disabledDate"]);

    if (showTime && !validRange) {
      throw new Error('DatePicker with showTime must have validRange');
    }

    var showNext = showTime && step === 0;
    var showPrev = showTime && step === 1;
    var clsPrefix = prefix + "datepicker-";
    var nextRange = showTime && step === 1 ? [pickerValue[0], validRange[1]] : validRange;
    return /*#__PURE__*/(0, _react.createElement)(_form.ItemContext.Consumer, null, function (context) {
      var _classNames;

      var isInsideForm = context.isInsideForm,
          contentAlign = context.contentAlign,
          contextSize = context.size;
      var align = alignProp || (isInsideForm ? contentAlign : 'left');
      var size = sizeProp || (isInsideForm ? contextSize : 'medium');
      var useRangeLocale = locale ? locale.ok && locale.cancel : null;
      return /*#__PURE__*/(0, _react.createElement)(_selectDrawer.default, _extends({}, others, {
        locale: useRangeLocale ? locale : undefined,
        prefix: prefix,
        content: value ? (0, _date.formatDate)(value[0], _this3.format) + " - " + (0, _date.formatDate)(value[1], _this3.format) : '',
        align: align,
        size: size,
        hasClear: hasClear,
        iconType: iconType,
        placeholder: placeholder,
        disabled: disabled,
        readOnly: readOnly,
        onOk: _this3.handleOk,
        onCancel: _this3.handleCancel,
        onClear: _this3.handleClear,
        onVisibleChange: _this3.handleVisibleChange,
        drawerTitle: showTime ? showNext && locale ? locale.selectStartTime : locale.selectEndTime : undefined,
        okText: showTime && showNext && locale ? locale.next : undefined,
        cancelText: showTime && showPrev && locale ? locale.prev : undefined
      }), /*#__PURE__*/(0, _react.createElement)(_view.default, {
        className: clsPrefix + "container"
      }, showTime ? /*#__PURE__*/(0, _react.createElement)(_view.default, {
        className: (0, _classnames.default)(clsPrefix + "range", (_classNames = {}, _classNames[clsPrefix + "range--next"] = showPrev, _classNames))
      }, /*#__PURE__*/(0, _react.createElement)(_dateTimePicker.default, {
        className: clsPrefix + "range-item",
        showTime: showTime,
        validRange: validRange,
        value: pickerValue[0],
        disabledDate: disabledDate,
        onChange: _this3.handleOneChange.bind(_this3, 0)
      }), /*#__PURE__*/(0, _react.createElement)(_dateTimePicker.default, {
        className: clsPrefix + "range-item",
        showTime: showTime,
        validRange: nextRange,
        value: pickerValue[1],
        disabledDate: disabledDate,
        onChange: _this3.handleOneChange.bind(_this3, 1)
      })) : /*#__PURE__*/(0, _react.createElement)(_calendar.default, {
        prefix: prefix,
        shape: "range",
        mode: "month",
        enableYearPicker: true,
        value: pickerValue,
        disabledDate: disabledDate,
        validRange: validRange,
        onSelect: _this3.handleChange
      })));
    });
  };

  _createClass(RangePicker, [{
    key: "timeFormat",
    get: function get() {
      var showTime = this.props.showTime;
      return typeof showTime === 'object' && showTime.format ? showTime.format : _utils.DEFAULT_FORMAT;
    }
  }, {
    key: "format",
    get: function get() {
      var showTime = this.props.showTime;
      var format = this.props.format || 'YYYY-MM-DD';
      return showTime && !(0, _utils3.withTime)(format) ? format + " " + this.timeFormat : format;
    }
  }]);

  return RangePicker;
}(_react.Component);

var _default = (0, _locale.withLocale)(RangePicker, {
  name: 'DatePicker',
  defaultLocale: {
    ok: '',
    cancel: '',
    prev: '上一步',
    next: '下一步',
    selectStartTime: '选择开始时间',
    selectEndTime: '选择结束时间'
  }
});

exports.default = _default;