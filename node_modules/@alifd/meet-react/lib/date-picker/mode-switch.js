"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _meetReactComponentOne = require("@alifd/meet-react-component-one");

var _icon = _interopRequireDefault(require("../icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var DateTimePicker = function (props) {
  var _classNames, _classNames2;

  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      defaultValue = props.defaultValue,
      value = props.value,
      _props$defaultText = props.defaultText,
      defaultText = _props$defaultText === void 0 ? '选择具体时间' : _props$defaultText,
      _props$reverseText = props.reverseText,
      reverseText = _props$reverseText === void 0 ? '返回选择日期' : _props$reverseText,
      onChange = props.onChange,
      others = (0, _tslib.__rest)(props, ["prefix", "defaultValue", "value", "defaultText", "reverseText", "onChange"]);
  var clsPrefix = prefix + "datepicker";
  return /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.View, _extends({}, others, {
    className: {
      timeSelectTrigger: clsPrefix + "-mode-switch"
    }.timeSelectTrigger,
    onClick: onChange
  }), /*#__PURE__*/(0, _react.createElement)(_icon.default, {
    type: "arrow-left",
    size: "xs",
    className: (0, _classnames.default)((_classNames = {}, _classNames[clsPrefix + "-hide-icon"] = value === 'default', _classNames))
  }), /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.Text, null, value === 'default' ? defaultText : reverseText), /*#__PURE__*/(0, _react.createElement)(_icon.default, {
    type: "arrow-right",
    size: "xs",
    className: (0, _classnames.default)((_classNames2 = {}, _classNames2[clsPrefix + "-hide-icon"] = value === 'reverse', _classNames2))
  }));
};

var _default = DateTimePicker;
exports.default = _default;