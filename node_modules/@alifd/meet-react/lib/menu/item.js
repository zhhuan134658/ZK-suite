"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _classnames2 = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _icon = _interopRequireDefault(require("../icon"));

var _list = _interopRequireDefault(require("../list"));

var _utils = require("../utils");

var _menuContext = _interopRequireDefault(require("./menu-context"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var MenuItem = function (props) {
  var _classnames;

  var context = (0, _react.useContext)(_menuContext.default);
  var className = props.className,
      children = props.children,
      disabled = props.disabled,
      itemKey = props.itemKey,
      title = props.title,
      others = (0, _tslib.__rest)(props, ["className", "children", "disabled", "itemKey", "title"]);
  var prefix = context.prefix,
      selectMode = context.selectMode,
      selectedKeys = context.selectedKeys,
      onClickItem = context.onClickItem,
      onSelect = context.onSelect;
  var selected = !(0, _utils.isInvalidValue)(itemKey) && selectedKeys.includes(itemKey);
  return /*#__PURE__*/(0, _react.createElement)(_list.default.Item, _extends({}, others, {
    className: (0, _classnames2.default)(prefix + "menu-item", className, (_classnames = {}, _classnames[prefix + "menu-item--disabled"] = disabled, _classnames)),
    title: children || title,
    disabled: disabled,
    extra: selected ? /*#__PURE__*/(0, _react.createElement)(_icon.default, {
      name: "select"
    }) : null,
    onClick: function handleClick(e) {
      onClickItem(itemKey, props, e);

      if (selectMode) {
        onSelect(!selected, props);
      }
    }
  }));
};

var _default = /*#__PURE__*/(0, _react.forwardRef)(MenuItem);

exports.default = _default;