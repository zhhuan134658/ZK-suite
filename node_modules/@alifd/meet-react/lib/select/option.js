"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _checkbox = _interopRequireDefault(require("../checkbox"));

var _list = _interopRequireDefault(require("../list"));

var _context = _interopRequireDefault(require("./context"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Option = function (props) {
  var _classNames;

  var _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      children = props.children,
      className = props.className,
      value = props.value,
      _props$onClick = props.onClick,
      _onClick = _props$onClick === void 0 ? function () {} : _props$onClick,
      _props$selected = props.selected,
      selected = _props$selected === void 0 ? false : _props$selected,
      title = props.title,
      others = (0, _tslib.__rest)(props, ["disabled", "children", "className", "value", "onClick", "selected", "title"]);

  var _useContext = (0, _react.useContext)(_context.default),
      prefix = _useContext.prefix;

  var clsPrefix = prefix + "select-option";
  return /*#__PURE__*/(0, _react.createElement)(_list.default.Item, _extends({}, others, {
    className: (0, _classnames.default)(clsPrefix, className, (_classNames = {}, _classNames[clsPrefix + "--disabled"] = disabled, _classNames)),
    title: children || title,
    media: /*#__PURE__*/(0, _react.createElement)(_list.default.ItemMedia, null, /*#__PURE__*/(0, _react.createElement)(_checkbox.default, {
      checked: selected,
      disabled: disabled,
      className: clsPrefix + "-checkbox"
    })),
    onClick: function onClick() {
      if (!disabled) {
        _onClick(value);
      }
    }
  }));
};

Option.displayName = 'SelectOption';

var _default = /*#__PURE__*/(0, _react.forwardRef)(Option);

exports.default = _default;