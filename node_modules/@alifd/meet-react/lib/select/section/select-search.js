"use strict";

exports.__esModule = true;
exports.default = void 0;

var _babelRuntimeJsxStyleTransform = require("babel-runtime-jsx-style-transform");

var _react = _interopRequireWildcard(require("react"));

var _search = _interopRequireDefault(require("../../search"));

var _utils = require("../../utils");

var _view = _interopRequireDefault(require("../../view"));

var _context = _interopRequireDefault(require("../context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SelectSearch = function (props, ref) {
  var _useContext = (0, _react.useContext)(_context.default),
      prefix = _useContext.prefix,
      locale = _useContext.locale,
      setSearchValue = _useContext.setSearchValue,
      contextSearch = _useContext.onSearch;

  var onSearch = props.onSearch;

  var _useState = (0, _react.useState)(''),
      value = _useState[0],
      _setValue = _useState[1];

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      setValue: function setValue(v) {
        _setValue(v);

        setSearchValue(v);
      }
    };
  });
  return /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: prefix + "select-search-wrapper",
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)({
      width: '100%',
      height: '100rpx'
    })
  }, /*#__PURE__*/(0, _react.createElement)(_search.default, {
    placeholder: locale.searchTipText,
    value: value,
    hasClear: true,
    onChange: function handleSearch(v) {
      _setValue(v);

      setSearchValue(v);

      if ((0, _utils.isFunction)(onSearch)) {
        onSearch(v);
      }

      if ((0, _utils.isFunction)(contextSearch)) {
        contextSearch(v);
      }
    }
  }));
};

var _default = /*#__PURE__*/(0, _react.forwardRef)(SelectSearch);

exports.default = _default;