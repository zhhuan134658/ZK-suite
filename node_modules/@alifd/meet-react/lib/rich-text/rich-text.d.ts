/// <reference types="react" />
import { Component, CSSProperties } from 'react';
import { BaseComponentAttributes } from '../utils/types';
export interface RichTextProps extends BaseComponentAttributes {
    text: string;
    space?: string;
    style?: CSSProperties;
    pauseVideo?: boolean;
    errorImage?: string;
    lazyLoad?: boolean;
    enableImagePreview?: boolean;
    enableTableScroll?: boolean;
    useAnchor?: boolean;
    tagStyle?: {
        [key: string]: string;
    };
    onLinkClick?: (href: string) => void;
}
interface State {
    nodes: any[];
}
declare class RichText extends Component<RichTextProps, State> {
    static defaultProps: RichTextProps;
    state: {
        nodes: any[];
    };
    imgList: any[];
    videos: {};
    plugins: any[];
    ref: import("react").RefObject<any>;
    componentWillMount(): void;
    componentWillReceiveProps(nextProps: Readonly<RichTextProps>): void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: any): void;
    afterWebRender(): void;
    wrapTable: () => void;
    replaceErrorImg: () => void;
    parseHtmlText: (text: any) => void;
    handleImageClick: (i: any) => void;
    handleImageError: (src: any, i: any) => void;
    handleVideoLoad: (id: any) => void;
    handleVideoPlay: (id: any) => void;
    render(): JSX.Element;
}
export default RichText;
