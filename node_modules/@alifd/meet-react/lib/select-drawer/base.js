"use strict";

exports.__esModule = true;
exports.default = void 0;

var _tslib = require("tslib");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _button = _interopRequireDefault(require("../button"));

var _drawer = _interopRequireDefault(require("../drawer"));

var _view = _interopRequireDefault(require("../view"));

var _locale = require("../locale");

var _zhCn = _interopRequireDefault(require("../locale/lang/zh-cn"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = function _default(props) {
  var _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? 'mt-' : _props$prefix,
      _props$visible = props.visible,
      visible = _props$visible === void 0 ? false : _props$visible,
      drawerClassName = props.drawerClassName,
      drawerTitle = props.drawerTitle,
      onCancel = props.onCancel,
      onClose = props.onClose,
      onOk = props.onOk,
      children = props.children,
      others = (0, _tslib.__rest)(props, ["prefix", "visible", "drawerClassName", "drawerTitle", "onCancel", "onClose", "onOk", "children"]);

  var _useState = (0, _react.useState)(false),
      drawerVisible = _useState[0],
      setDrawerVisible = _useState[1];

  var clsPrefix = prefix + "selectdrawer";
  (0, _react.useEffect)(function () {
    if (drawerVisible !== visible) {
      setDrawerVisible(visible);
    }
  }, [visible]);
  var locale = (0, _locale.useLocale)('SelectDrawer', others, _zhCn.default.SelectDrawer);
  return /*#__PURE__*/(0, _react.createElement)(_drawer.default, _extends({}, others, {
    visible: drawerVisible,
    placement: "bottom",
    closeMode: ['mask'],
    onClose: onClose,
    className: (0, _classnames.default)(clsPrefix + "-drawer", drawerClassName)
  }), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-toolbar"
  }, /*#__PURE__*/(0, _react.createElement)(_button.default, {
    model: "text",
    onClick: onCancel
  }, locale.cancel), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-toolbar-title"
  }, drawerTitle), /*#__PURE__*/(0, _react.createElement)(_button.default, {
    model: "text",
    type: "primary",
    onClick: onOk
  }, locale.ok)), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: clsPrefix + "-drawer-content"
  }, children));
};

exports.default = _default;