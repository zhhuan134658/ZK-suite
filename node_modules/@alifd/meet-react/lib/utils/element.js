"use strict";

exports.__esModule = true;
exports.getBottom = getBottom;
exports.getElementBoundingClientRect = getElementBoundingClientRect;
exports.getElementScrollOffset = getElementScrollOffset;
exports.getHeight = getHeight;
exports.getLeft = getLeft;
exports.getRight = getRight;
exports.getScrollLeft = getScrollLeft;
exports.getScrollTop = getScrollTop;
exports.getTop = getTop;
exports.getWidth = getWidth;
exports.scrollToId = scrollToId;

var _tslib = require("tslib");

var _universalElement = require("universal-element");

var _pageScrollTo = _interopRequireDefault(require("@uni/page-scroll-to"));

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getElementScrollOffset(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    return regeneratorRuntime.wrap(function (_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", (0, _universalElement.getScrollOffset)("#" + id).then(function (ret) {
              var offset = {
                scrollLeft: 0,
                scrollTop: 0
              };

              if (ret && ret[0]) {
                var _ret$ = ret[0],
                    scrollLeft = _ret$.scrollLeft,
                    scrollTop = _ret$.scrollTop;
                return Object.assign(Object.assign({}, offset), {
                  scrollLeft: scrollLeft,
                  scrollTop: scrollTop
                });
              }

              return offset;
            }));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}

function getScrollLeft(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
    return regeneratorRuntime.wrap(function (_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return getElementScrollOffset(id);

          case 2:
            return _context2.abrupt("return", _context2.sent.scrollLeft);

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
}

function getScrollTop(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
    return regeneratorRuntime.wrap(function (_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return getElementScrollOffset(id);

          case 2:
            return _context3.abrupt("return", _context3.sent.scrollTop);

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
}

function getElementBoundingClientRect(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
    var getRect, rs;
    return regeneratorRuntime.wrap(function (_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            getRect = _universalElement.getBoundingClientRect;

            if (_utils.isStrictWechatMiniProgram) {
              getRect = function (selector) {
                return new Promise(function (resolve) {
                  var ele = document.querySelector(selector);

                  if (!ele || !ele._internal) {
                    if (process.env.NODE_ENV === 'development') {
                      console.warn('element not found', selector);
                    }

                    resolve([]);
                  }

                  ele._internal.createSelectorQuery().select(selector).boundingClientRect().exec(function (res) {
                    resolve(res);
                  });
                });
              };
            }

            _context4.next = 4;
            return getRect("#" + id).then(function (ret) {
              var rect = {
                left: 0,
                bottom: 0,
                top: 0,
                right: 0,
                width: 0,
                height: 0,
                x: 0,
                y: 0
              };

              if (ret && ret[0]) {
                var _ret$2 = ret[0],
                    left = _ret$2.left,
                    bottom = _ret$2.bottom,
                    top = _ret$2.top,
                    right = _ret$2.right,
                    width = _ret$2.width,
                    height = _ret$2.height,
                    x = _ret$2.x,
                    y = _ret$2.y;
                return Object.assign(Object.assign({}, rect), {
                  left: left,
                  bottom: bottom,
                  top: top,
                  right: right,
                  width: width,
                  height: height,
                  x: x,
                  y: y
                });
              }

              return rect;
            });

          case 4:
            rs = _context4.sent;
            return _context4.abrupt("return", rs);

          case 6:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
}

function getWidth(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
    return regeneratorRuntime.wrap(function (_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context5.abrupt("return", _context5.sent.width);

          case 3:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
}

function getHeight(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
    return regeneratorRuntime.wrap(function (_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context6.abrupt("return", _context6.sent.height);

          case 3:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
}

function getLeft(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
    return regeneratorRuntime.wrap(function (_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context7.abrupt("return", _context7.sent.left);

          case 3:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
}

function getTop(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
    return regeneratorRuntime.wrap(function (_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context8.abrupt("return", _context8.sent.top);

          case 3:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
}

function getBottom(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
    return regeneratorRuntime.wrap(function (_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context9.abrupt("return", _context9.sent.bottom);

          case 3:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
}

function getRight(id) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
    return regeneratorRuntime.wrap(function (_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return getElementBoundingClientRect(id);

          case 2:
            return _context10.abrupt("return", _context10.sent.right);

          case 3:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
}

function scrollToId(id) {
  (0, _pageScrollTo.default)({
    selector: "#" + id
  }).then(_utils.noop);
}