import { ReactNode } from 'react';
import { LocaledComponentProps } from '../locale';
import { LocaleType, ModeType, ShapeType } from './types';
import { AvailableDate } from '../utils/date';
import { BaseComponentAttributes } from '../utils/types';
export interface CalendarProps extends LocaledComponentProps<LocaleType>, BaseComponentAttributes {
    defaultValue?: AvailableDate | AvailableDate[];
    value?: AvailableDate | AvailableDate[];
    shape?: ShapeType;
    mode?: ModeType;
    validRange?: [Date, Date];
    needSlider?: false;
    fixSliderNumber?: false;
    sliderHeight?: string;
    sliderWidth?: string;
    firstDay?: number;
    enableYearPicker?: boolean;
    enableTimePicker?: boolean;
    timeFormat?: string;
    onSelect?: (value: Date | Date[]) => void;
    dateCellRender?: (value: any) => ReactNode;
    monthCellRender?: (value: any) => ReactNode;
    disabledDate?: (calendarDate: Date, view: string) => boolean;
    onModeChange?: (mode: string) => void;
    renderCellBottom?: (value: any) => ReactNode;
    renderCellRight?: (value: any) => ReactNode;
    renderHeadLeft?: () => ReactNode;
    renderHeadRight?: () => ReactNode;
}
declare const _default: import("react").ForwardRefExoticComponent<CalendarProps & import("react").RefAttributes<any>>;
export default _default;
