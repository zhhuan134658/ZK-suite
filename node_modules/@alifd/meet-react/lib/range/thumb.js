"use strict";

exports.__esModule = true;
exports.default = void 0;

var _babelRuntimeJsxStyleTransform = require("babel-runtime-jsx-style-transform");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _meetReactComponentOne = require("@alifd/meet-react-component-one");

var _view = _interopRequireDefault(require("../view"));

var _utils = require("./utils");

var _utils2 = require("../utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Thumb = function (props, ref) {
  var _classNames;

  var prefix = props.prefix,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size,
      _props$offset = props.offset,
      offset = _props$offset === void 0 ? 0 : _props$offset,
      isActive = props.isActive,
      tooltipVisible = props.tooltipVisible,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      value = props.value,
      id = props.id;
  var display;

  if (!(0, _utils2.isNil)(tooltipVisible)) {
    display = tooltipVisible ? 'flex' : 'none';
  } else {
    display = isActive ? 'flex' : 'none';
  }

  var statePrefix = disabled ? '--disabled' : '';
  var thumbCls = (0, _classnames.default)(prefix + "range--thumb", prefix + "range--thumb--" + size, (_classNames = {}, _classNames[prefix + "range--thumb--active"] = isActive, _classNames[prefix + "range" + statePrefix + "--thumb"] = isActive, _classNames[prefix + "range" + statePrefix + "--thumb"] = !isActive, _classNames));
  return /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: thumbCls,
    style: (0, _babelRuntimeJsxStyleTransform.rpx2vw4style)({
      left: offset + _utils.unit
    }),
    id: id,
    ref: ref
  }, display === 'flex' && /*#__PURE__*/(0, _react.createElement)(_react.Fragment, null, /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: (0, _classnames.default)([prefix + "range--tooltip", prefix + "range--tooltip-" + size + "-left"])
  }, /*#__PURE__*/(0, _react.createElement)(_meetReactComponentOne.Text, null, "" + value), /*#__PURE__*/(0, _react.createElement)(_view.default, {
    className: prefix + "range--tooltip--arrow"
  }))));
};

var _default = /*#__PURE__*/(0, _react.forwardRef)(Thumb);

exports.default = _default;