"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var entry2urls = function (entry) {
    return Object.keys(entry)
        .map(function (key) { return entry[key]; })
        .reduce(function (pre, next) { return pre.concat(next); }, [])
        .filter(function (url) { return !(/node_modules/.test(url)); });
};
var appendLifecycle = function (_a) {
    var onGetWebpackConfig = _a.onGetWebpackConfig;
    onGetWebpackConfig('icestark-module', function (config) {
        var entries = entry2urls(config.toConfig().entry);
        ['jsx', 'tsx'].forEach(function (rule) {
            config.module
                .rule(rule)
                .use('babel-loader')
                .tap(function (babelOptions) {
                var _a = babelOptions.plugins, plugins = _a === void 0 ? [] : _a;
                return __assign(__assign({}, babelOptions), { plugins: __spreadArray([
                        [require.resolve('./babelPlugin'), { entries: entries }]
                    ], plugins, true) });
            });
        });
    });
};
exports.default = appendLifecycle;
//# sourceMappingURL=appendLifecycle.js.map